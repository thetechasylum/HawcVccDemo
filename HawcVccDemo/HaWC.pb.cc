// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: HaWC.proto

#include "HaWC.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_HaWC_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CmdMsg_CircleProperty;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CmdMsg_CloseCmd;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CmdMsg_FileListProperty;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CmdMsg_GetDisplayCfgCmd;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CmdMsg_GetFileHashCmd;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CmdMsg_GetParamsCfgnCmd;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CmdMsg_IO_Cmd;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CmdMsg_ImageProperty;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CmdMsg_LabelProperty;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CmdMsg_LineProperty;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CmdMsg_ListProperty;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CmdMsg_LoadConfigFromFileCmd;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CmdMsg_LoadDisplayFromFileCmd;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CmdMsg_LoadFontsCmd;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CmdMsg_LoadOverlayFromFileCmd;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CmdMsg_MenuProperty;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CmdMsg_ParamLoc;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CmdMsg_ParamSet;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CmdMsg_RectangleProperty;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CmdMsg_RestoreFactoryConfigCmd;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CmdMsg_RestoreFactoryDisplayCmd;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CmdMsg_SaveConfigToFileCmd;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CmdMsg_SaveDefaultConfigCmd;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CmdMsg_SaveDefaultDisplayCmd;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CmdMsg_SaveDisplayToFileCmd;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CmdMsg_SaveOverlayToFileCmd;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CmdMsg_SetFeedSourceCmd;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CmdMsg_SetViewFeedCmd;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CmdMsg_SetViewWindowCmd;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CmdMsg_ToolBarProperty;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RspMsg_FeedSourceRsp;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RspMsg_FileHashRsp;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RspMsg_IO_Bcast;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RspMsg_LoadConfigRsp;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RspMsg_LoadDisplayRsp;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RspMsg_LoadFontsRsp;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RspMsg_LoadOverlayFromFileRsp;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RspMsg_OverlayCreateRsp;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RspMsg_OverlayUpdateRsp;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RspMsg_ParamCfgn;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RspMsg_ParamDetails;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RspMsg_QosBcast;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RspMsg_ResetEvt;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RspMsg_SaveConfigRsp;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RspMsg_SaveDisplayRsp;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RspMsg_SaveOverlayToFileRsp;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RspMsg_ViewFeedRsp;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RspMsg_ViewWindowRsp;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CmdMsg_CircleProperties;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CmdMsg_ComponentList;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CmdMsg_FileListProperties;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CmdMsg_GetParamsCmd;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CmdMsg_ImageProperties;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CmdMsg_LabelProperties;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CmdMsg_LineProperties;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CmdMsg_ListProperties;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CmdMsg_MenuProperties;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CmdMsg_OverlayCmd;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CmdMsg_RectangleProperties;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CmdMsg_SetParamsCmd;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CmdMsg_ToolBarProperties;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_RspMsg_IO_Rsp;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_RspMsg_ParamsCfgnRsp;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_RspMsg_ParamsRsp;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_RspMsg_OverlayRsp;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_CmdMsg_SetDisplayCfgCmd;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_RspMsg_DisplayCfgRsp;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<6> scc_info_RspMsg_AppManagerRsp;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<7> scc_info_RspMsg_DisplayRsp;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<9> scc_info_CmdMsg_AppManagerCmd;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<9> scc_info_CmdMsg_Component;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HaWC_2eproto ::google::protobuf::internal::SCCInfo<9> scc_info_CmdMsg_DisplayCmd;
}  // namespace protobuf_HaWC_2eproto
namespace HaWC {
class CmdMsg_CloseCmdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CmdMsg_CloseCmd>
      _instance;
} _CmdMsg_CloseCmd_default_instance_;
class CmdMsg_SaveDefaultConfigCmdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CmdMsg_SaveDefaultConfigCmd>
      _instance;
} _CmdMsg_SaveDefaultConfigCmd_default_instance_;
class CmdMsg_SaveConfigToFileCmdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CmdMsg_SaveConfigToFileCmd>
      _instance;
} _CmdMsg_SaveConfigToFileCmd_default_instance_;
class CmdMsg_LoadConfigFromFileCmdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CmdMsg_LoadConfigFromFileCmd>
      _instance;
} _CmdMsg_LoadConfigFromFileCmd_default_instance_;
class CmdMsg_RestoreFactoryConfigCmdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CmdMsg_RestoreFactoryConfigCmd>
      _instance;
} _CmdMsg_RestoreFactoryConfigCmd_default_instance_;
class CmdMsg_ParamSetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CmdMsg_ParamSet>
      _instance;
  bool boolval_;
  ::google::protobuf::uint32 uintval_;
  ::google::protobuf::int32 intval_;
  double doubleval_;
  ::google::protobuf::internal::ArenaStringPtr strval_;
  ::google::protobuf::uint32 databytes_;
} _CmdMsg_ParamSet_default_instance_;
class CmdMsg_SetParamsCmdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CmdMsg_SetParamsCmd>
      _instance;
} _CmdMsg_SetParamsCmd_default_instance_;
class CmdMsg_ParamLocDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CmdMsg_ParamLoc>
      _instance;
} _CmdMsg_ParamLoc_default_instance_;
class CmdMsg_GetParamsCmdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CmdMsg_GetParamsCmd>
      _instance;
} _CmdMsg_GetParamsCmd_default_instance_;
class CmdMsg_GetParamsCfgnCmdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CmdMsg_GetParamsCfgnCmd>
      _instance;
} _CmdMsg_GetParamsCfgnCmd_default_instance_;
class CmdMsg_GetFileHashCmdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CmdMsg_GetFileHashCmd>
      _instance;
} _CmdMsg_GetFileHashCmd_default_instance_;
class CmdMsg_AppManagerCmdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CmdMsg_AppManagerCmd>
      _instance;
  const ::HaWC::CmdMsg_CloseCmd* close_;
  const ::HaWC::CmdMsg_SaveDefaultConfigCmd* savedefaultconfig_;
  const ::HaWC::CmdMsg_SaveConfigToFileCmd* saveconfigtofile_;
  const ::HaWC::CmdMsg_LoadConfigFromFileCmd* loadconfigfromfile_;
  const ::HaWC::CmdMsg_RestoreFactoryConfigCmd* restorefactoryconfig_;
  const ::HaWC::CmdMsg_SetParamsCmd* setparams_;
  const ::HaWC::CmdMsg_GetParamsCmd* getparams_;
  const ::HaWC::CmdMsg_GetParamsCfgnCmd* getparamscfgn_;
  const ::HaWC::CmdMsg_GetFileHashCmd* getfilehash_;
} _CmdMsg_AppManagerCmd_default_instance_;
class CmdMsg_LinePropertyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CmdMsg_LineProperty>
      _instance;
  bool visible_;
  float pt1x_;
  float pt1y_;
  float pt2x_;
  float pt2y_;
  float width_;
  ::google::protobuf::internal::ArenaStringPtr color_;
  float opacity_;
} _CmdMsg_LineProperty_default_instance_;
class CmdMsg_LinePropertiesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CmdMsg_LineProperties>
      _instance;
} _CmdMsg_LineProperties_default_instance_;
class CmdMsg_CirclePropertyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CmdMsg_CircleProperty>
      _instance;
  bool visible_;
  float x_;
  float y_;
  float radius_;
  ::google::protobuf::internal::ArenaStringPtr color_;
  float border_width_;
  ::google::protobuf::internal::ArenaStringPtr border_color_;
  float opacity_;
} _CmdMsg_CircleProperty_default_instance_;
class CmdMsg_CirclePropertiesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CmdMsg_CircleProperties>
      _instance;
} _CmdMsg_CircleProperties_default_instance_;
class CmdMsg_RectanglePropertyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CmdMsg_RectangleProperty>
      _instance;
  bool visible_;
  float x_;
  float y_;
  float width_;
  float height_;
  ::google::protobuf::internal::ArenaStringPtr color_;
  float border_width_;
  ::google::protobuf::internal::ArenaStringPtr border_color_;
  float radius_;
  float opacity_;
  float rotation_;
} _CmdMsg_RectangleProperty_default_instance_;
class CmdMsg_RectanglePropertiesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CmdMsg_RectangleProperties>
      _instance;
} _CmdMsg_RectangleProperties_default_instance_;
class CmdMsg_ImagePropertyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CmdMsg_ImageProperty>
      _instance;
  bool visible_;
  float x_;
  float y_;
  float width_;
  float height_;
  ::google::protobuf::internal::ArenaStringPtr source_;
  int fillmode_;
  float opacity_;
  float rotation_;
} _CmdMsg_ImageProperty_default_instance_;
class CmdMsg_ImagePropertiesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CmdMsg_ImageProperties>
      _instance;
} _CmdMsg_ImageProperties_default_instance_;
class CmdMsg_FileListPropertyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CmdMsg_FileListProperty>
      _instance;
  ::google::protobuf::internal::ArenaStringPtr item_;
} _CmdMsg_FileListProperty_default_instance_;
class CmdMsg_FileListPropertiesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CmdMsg_FileListProperties>
      _instance;
} _CmdMsg_FileListProperties_default_instance_;
class CmdMsg_ToolBarPropertyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CmdMsg_ToolBarProperty>
      _instance;
  bool visible_;
  float x_;
  float y_;
  float width_;
  float height_;
  ::google::protobuf::internal::ArenaStringPtr options____;
  ::google::protobuf::uint32 iconsspacing_;
  ::google::protobuf::uint32 margins_;
  bool isvertical_;
  ::google::protobuf::internal::ArenaStringPtr backcolor_;
  ::google::protobuf::int32 selected_;
  ::google::protobuf::internal::ArenaStringPtr selectedcolor_;
  ::google::protobuf::internal::ArenaStringPtr selectedbordercolor_;
  ::google::protobuf::int32 selectedborderwidth_;
} _CmdMsg_ToolBarProperty_default_instance_;
class CmdMsg_ListPropertyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CmdMsg_ListProperty>
      _instance;
  ::google::protobuf::internal::ArenaStringPtr item_;
} _CmdMsg_ListProperty_default_instance_;
class CmdMsg_ListPropertiesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CmdMsg_ListProperties>
      _instance;
} _CmdMsg_ListProperties_default_instance_;
class CmdMsg_ToolBarPropertiesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CmdMsg_ToolBarProperties>
      _instance;
} _CmdMsg_ToolBarProperties_default_instance_;
class CmdMsg_MenuPropertyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CmdMsg_MenuProperty>
      _instance;
  bool visible_;
  float x_;
  float y_;
  float width_;
  float itemheight_;
  ::google::protobuf::internal::ArenaStringPtr options____;
  bool highlighttext_;
  ::google::protobuf::internal::ArenaStringPtr backcolor_;
  ::google::protobuf::internal::ArenaStringPtr textcolor_;
  ::google::protobuf::internal::ArenaStringPtr selectedcolor_;
  ::google::protobuf::int32 selected_;
} _CmdMsg_MenuProperty_default_instance_;
class CmdMsg_MenuPropertiesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CmdMsg_MenuProperties>
      _instance;
} _CmdMsg_MenuProperties_default_instance_;
class CmdMsg_LabelPropertyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CmdMsg_LabelProperty>
      _instance;
  bool visible_;
  float x_;
  float y_;
  float width_;
  float height_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::google::protobuf::internal::ArenaStringPtr font_family_;
  float font_pointsize_;
  ::google::protobuf::internal::ArenaStringPtr color_;
  float opacity_;
  float rotation_;
  int wrapmode_;
  int textformat_;
} _CmdMsg_LabelProperty_default_instance_;
class CmdMsg_LabelPropertiesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CmdMsg_LabelProperties>
      _instance;
} _CmdMsg_LabelProperties_default_instance_;
class CmdMsg_ComponentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CmdMsg_Component>
      _instance;
  const ::HaWC::CmdMsg_LineProperties* line_;
  const ::HaWC::CmdMsg_CircleProperties* circle_;
  const ::HaWC::CmdMsg_RectangleProperties* rectangle_;
  const ::HaWC::CmdMsg_ImageProperties* image_;
  const ::HaWC::CmdMsg_FileListProperties* filelist_;
  const ::HaWC::CmdMsg_ToolBarProperties* toolbar_;
  const ::HaWC::CmdMsg_ListProperties* list_;
  const ::HaWC::CmdMsg_MenuProperties* menu_;
  const ::HaWC::CmdMsg_LabelProperties* text_;
} _CmdMsg_Component_default_instance_;
class CmdMsg_ComponentListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CmdMsg_ComponentList>
      _instance;
} _CmdMsg_ComponentList_default_instance_;
class CmdMsg_OverlayCmdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CmdMsg_OverlayCmd>
      _instance;
  const ::HaWC::CmdMsg_ComponentList* createscreen_;
  const ::HaWC::CmdMsg_ComponentList* updatesreen_;
} _CmdMsg_OverlayCmd_default_instance_;
class CmdMsg_SetFeedSourceCmdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CmdMsg_SetFeedSourceCmd>
      _instance;
} _CmdMsg_SetFeedSourceCmd_default_instance_;
class CmdMsg_SetViewFeedCmdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CmdMsg_SetViewFeedCmd>
      _instance;
} _CmdMsg_SetViewFeedCmd_default_instance_;
class CmdMsg_SetViewWindowCmdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CmdMsg_SetViewWindowCmd>
      _instance;
} _CmdMsg_SetViewWindowCmd_default_instance_;
class CmdMsg_SetDisplayCfgCmdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CmdMsg_SetDisplayCfgCmd>
      _instance;
} _CmdMsg_SetDisplayCfgCmd_default_instance_;
class CmdMsg_GetDisplayCfgCmdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CmdMsg_GetDisplayCfgCmd>
      _instance;
} _CmdMsg_GetDisplayCfgCmd_default_instance_;
class CmdMsg_SaveDefaultDisplayCmdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CmdMsg_SaveDefaultDisplayCmd>
      _instance;
} _CmdMsg_SaveDefaultDisplayCmd_default_instance_;
class CmdMsg_SaveDisplayToFileCmdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CmdMsg_SaveDisplayToFileCmd>
      _instance;
} _CmdMsg_SaveDisplayToFileCmd_default_instance_;
class CmdMsg_LoadDisplayFromFileCmdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CmdMsg_LoadDisplayFromFileCmd>
      _instance;
} _CmdMsg_LoadDisplayFromFileCmd_default_instance_;
class CmdMsg_SaveOverlayToFileCmdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CmdMsg_SaveOverlayToFileCmd>
      _instance;
} _CmdMsg_SaveOverlayToFileCmd_default_instance_;
class CmdMsg_LoadOverlayFromFileCmdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CmdMsg_LoadOverlayFromFileCmd>
      _instance;
} _CmdMsg_LoadOverlayFromFileCmd_default_instance_;
class CmdMsg_LoadFontsCmdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CmdMsg_LoadFontsCmd>
      _instance;
} _CmdMsg_LoadFontsCmd_default_instance_;
class CmdMsg_RestoreFactoryDisplayCmdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CmdMsg_RestoreFactoryDisplayCmd>
      _instance;
} _CmdMsg_RestoreFactoryDisplayCmd_default_instance_;
class CmdMsg_DisplayCmdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CmdMsg_DisplayCmd>
      _instance;
  const ::HaWC::CmdMsg_SetDisplayCfgCmd* setdisplaycfg_;
  const ::HaWC::CmdMsg_GetDisplayCfgCmd* getdisplaycfg_;
  const ::HaWC::CmdMsg_SaveDefaultDisplayCmd* savedefaultdisplaycmd_;
  const ::HaWC::CmdMsg_SaveDisplayToFileCmd* savedisplaycmd_;
  const ::HaWC::CmdMsg_LoadDisplayFromFileCmd* loaddisplaycmd_;
  const ::HaWC::CmdMsg_RestoreFactoryDisplayCmd* restorefactorydisplaycfgn_;
  const ::HaWC::CmdMsg_LoadFontsCmd* loadfontscmd_;
  const ::HaWC::CmdMsg_SaveOverlayToFileCmd* saveoverlaytofilecmd_;
  const ::HaWC::CmdMsg_LoadOverlayFromFileCmd* loadoverlayfromfilecmd_;
} _CmdMsg_DisplayCmd_default_instance_;
class CmdMsg_IO_CmdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CmdMsg_IO_Cmd>
      _instance;
} _CmdMsg_IO_Cmd_default_instance_;
class CmdMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CmdMsg>
      _instance;
  const ::HaWC::CmdMsg_AppManagerCmd* appcmd_;
  const ::HaWC::CmdMsg_DisplayCmd* displaycmd_;
  const ::HaWC::CmdMsg_IO_Cmd* iocmd_;
} _CmdMsg_default_instance_;
class RspMsg_ResetEvtDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RspMsg_ResetEvt>
      _instance;
} _RspMsg_ResetEvt_default_instance_;
class RspMsg_SaveConfigRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RspMsg_SaveConfigRsp>
      _instance;
} _RspMsg_SaveConfigRsp_default_instance_;
class RspMsg_LoadConfigRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RspMsg_LoadConfigRsp>
      _instance;
} _RspMsg_LoadConfigRsp_default_instance_;
class RspMsg_ParamDetailsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RspMsg_ParamDetails>
      _instance;
  bool boolval_;
  ::google::protobuf::uint32 uintval_;
  ::google::protobuf::int32 intval_;
  double doubleval_;
  ::google::protobuf::internal::ArenaStringPtr strval_;
  ::google::protobuf::uint32 databytes_;
} _RspMsg_ParamDetails_default_instance_;
class RspMsg_ParamsRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RspMsg_ParamsRsp>
      _instance;
} _RspMsg_ParamsRsp_default_instance_;
class RspMsg_ParamCfgnDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RspMsg_ParamCfgn>
      _instance;
} _RspMsg_ParamCfgn_default_instance_;
class RspMsg_ParamsCfgnRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RspMsg_ParamsCfgnRsp>
      _instance;
} _RspMsg_ParamsCfgnRsp_default_instance_;
class RspMsg_FileHashRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RspMsg_FileHashRsp>
      _instance;
} _RspMsg_FileHashRsp_default_instance_;
class RspMsg_AppManagerRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RspMsg_AppManagerRsp>
      _instance;
  const ::HaWC::RspMsg_SaveConfigRsp* saveconfig_;
  const ::HaWC::RspMsg_LoadConfigRsp* loadconfigrsp_;
  const ::HaWC::RspMsg_ParamsRsp* params_;
  const ::HaWC::RspMsg_ParamsCfgnRsp* getparamscfgn_;
  const ::HaWC::RspMsg_FileHashRsp* filehash_;
  const ::HaWC::RspMsg_ResetEvt* resetevent_;
} _RspMsg_AppManagerRsp_default_instance_;
class RspMsg_FeedSourceRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RspMsg_FeedSourceRsp>
      _instance;
} _RspMsg_FeedSourceRsp_default_instance_;
class RspMsg_OverlayCreateRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RspMsg_OverlayCreateRsp>
      _instance;
} _RspMsg_OverlayCreateRsp_default_instance_;
class RspMsg_OverlayUpdateRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RspMsg_OverlayUpdateRsp>
      _instance;
} _RspMsg_OverlayUpdateRsp_default_instance_;
class RspMsg_OverlayRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RspMsg_OverlayRsp>
      _instance;
  const ::HaWC::RspMsg_OverlayCreateRsp* createscreen_;
  const ::HaWC::RspMsg_OverlayUpdateRsp* updatesreen_;
} _RspMsg_OverlayRsp_default_instance_;
class RspMsg_ViewFeedRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RspMsg_ViewFeedRsp>
      _instance;
} _RspMsg_ViewFeedRsp_default_instance_;
class RspMsg_ViewWindowRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RspMsg_ViewWindowRsp>
      _instance;
} _RspMsg_ViewWindowRsp_default_instance_;
class RspMsg_DisplayCfgRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RspMsg_DisplayCfgRsp>
      _instance;
} _RspMsg_DisplayCfgRsp_default_instance_;
class RspMsg_SaveDisplayRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RspMsg_SaveDisplayRsp>
      _instance;
} _RspMsg_SaveDisplayRsp_default_instance_;
class RspMsg_LoadDisplayRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RspMsg_LoadDisplayRsp>
      _instance;
} _RspMsg_LoadDisplayRsp_default_instance_;
class RspMsg_LoadFontsRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RspMsg_LoadFontsRsp>
      _instance;
} _RspMsg_LoadFontsRsp_default_instance_;
class RspMsg_SaveOverlayToFileRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RspMsg_SaveOverlayToFileRsp>
      _instance;
} _RspMsg_SaveOverlayToFileRsp_default_instance_;
class RspMsg_LoadOverlayFromFileRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RspMsg_LoadOverlayFromFileRsp>
      _instance;
} _RspMsg_LoadOverlayFromFileRsp_default_instance_;
class RspMsg_QosBcastDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RspMsg_QosBcast>
      _instance;
} _RspMsg_QosBcast_default_instance_;
class RspMsg_DisplayRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RspMsg_DisplayRsp>
      _instance;
  const ::HaWC::RspMsg_DisplayCfgRsp* displaycfgrsp_;
  const ::HaWC::RspMsg_SaveDisplayRsp* savedisplayrsp_;
  const ::HaWC::RspMsg_LoadDisplayRsp* loaddisplayrsp_;
  const ::HaWC::RspMsg_LoadFontsRsp* loadfontsrsp_;
  const ::HaWC::RspMsg_SaveOverlayToFileRsp* saveoverlaytofilersp_;
  const ::HaWC::RspMsg_LoadOverlayFromFileRsp* loadoverlayfromfilersp_;
  const ::HaWC::RspMsg_QosBcast* qosbcast_;
} _RspMsg_DisplayRsp_default_instance_;
class RspMsg_IO_BcastDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RspMsg_IO_Bcast>
      _instance;
} _RspMsg_IO_Bcast_default_instance_;
class RspMsg_IO_RspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RspMsg_IO_Rsp>
      _instance;
  const ::HaWC::RspMsg_IO_Bcast* iobcast_;
} _RspMsg_IO_Rsp_default_instance_;
class RspMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RspMsg>
      _instance;
  const ::HaWC::RspMsg_AppManagerRsp* apprsp_;
  const ::HaWC::RspMsg_DisplayRsp* displayrsp_;
  const ::HaWC::RspMsg_IO_Rsp* iorsp_;
} _RspMsg_default_instance_;
}  // namespace HaWC
namespace protobuf_HaWC_2eproto {
static void InitDefaultsCmdMsg_CloseCmd() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_CmdMsg_CloseCmd_default_instance_;
    new (ptr) ::HaWC::CmdMsg_CloseCmd();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::CmdMsg_CloseCmd::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CmdMsg_CloseCmd =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCmdMsg_CloseCmd}, {}};

static void InitDefaultsCmdMsg_SaveDefaultConfigCmd() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_CmdMsg_SaveDefaultConfigCmd_default_instance_;
    new (ptr) ::HaWC::CmdMsg_SaveDefaultConfigCmd();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::CmdMsg_SaveDefaultConfigCmd::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CmdMsg_SaveDefaultConfigCmd =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCmdMsg_SaveDefaultConfigCmd}, {}};

static void InitDefaultsCmdMsg_SaveConfigToFileCmd() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_CmdMsg_SaveConfigToFileCmd_default_instance_;
    new (ptr) ::HaWC::CmdMsg_SaveConfigToFileCmd();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::CmdMsg_SaveConfigToFileCmd::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CmdMsg_SaveConfigToFileCmd =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCmdMsg_SaveConfigToFileCmd}, {}};

static void InitDefaultsCmdMsg_LoadConfigFromFileCmd() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_CmdMsg_LoadConfigFromFileCmd_default_instance_;
    new (ptr) ::HaWC::CmdMsg_LoadConfigFromFileCmd();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::CmdMsg_LoadConfigFromFileCmd::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CmdMsg_LoadConfigFromFileCmd =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCmdMsg_LoadConfigFromFileCmd}, {}};

static void InitDefaultsCmdMsg_RestoreFactoryConfigCmd() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_CmdMsg_RestoreFactoryConfigCmd_default_instance_;
    new (ptr) ::HaWC::CmdMsg_RestoreFactoryConfigCmd();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::CmdMsg_RestoreFactoryConfigCmd::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CmdMsg_RestoreFactoryConfigCmd =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCmdMsg_RestoreFactoryConfigCmd}, {}};

static void InitDefaultsCmdMsg_ParamSet() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_CmdMsg_ParamSet_default_instance_;
    new (ptr) ::HaWC::CmdMsg_ParamSet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::CmdMsg_ParamSet::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CmdMsg_ParamSet =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCmdMsg_ParamSet}, {}};

static void InitDefaultsCmdMsg_SetParamsCmd() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_CmdMsg_SetParamsCmd_default_instance_;
    new (ptr) ::HaWC::CmdMsg_SetParamsCmd();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::CmdMsg_SetParamsCmd::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CmdMsg_SetParamsCmd =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCmdMsg_SetParamsCmd}, {
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_ParamSet.base,}};

static void InitDefaultsCmdMsg_ParamLoc() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_CmdMsg_ParamLoc_default_instance_;
    new (ptr) ::HaWC::CmdMsg_ParamLoc();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::CmdMsg_ParamLoc::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CmdMsg_ParamLoc =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCmdMsg_ParamLoc}, {}};

static void InitDefaultsCmdMsg_GetParamsCmd() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_CmdMsg_GetParamsCmd_default_instance_;
    new (ptr) ::HaWC::CmdMsg_GetParamsCmd();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::CmdMsg_GetParamsCmd::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CmdMsg_GetParamsCmd =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCmdMsg_GetParamsCmd}, {
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_ParamLoc.base,}};

static void InitDefaultsCmdMsg_GetParamsCfgnCmd() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_CmdMsg_GetParamsCfgnCmd_default_instance_;
    new (ptr) ::HaWC::CmdMsg_GetParamsCfgnCmd();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::CmdMsg_GetParamsCfgnCmd::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CmdMsg_GetParamsCfgnCmd =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCmdMsg_GetParamsCfgnCmd}, {}};

static void InitDefaultsCmdMsg_GetFileHashCmd() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_CmdMsg_GetFileHashCmd_default_instance_;
    new (ptr) ::HaWC::CmdMsg_GetFileHashCmd();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::CmdMsg_GetFileHashCmd::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CmdMsg_GetFileHashCmd =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCmdMsg_GetFileHashCmd}, {}};

static void InitDefaultsCmdMsg_AppManagerCmd() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_CmdMsg_AppManagerCmd_default_instance_;
    new (ptr) ::HaWC::CmdMsg_AppManagerCmd();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::CmdMsg_AppManagerCmd::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<9> scc_info_CmdMsg_AppManagerCmd =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 9, InitDefaultsCmdMsg_AppManagerCmd}, {
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_CloseCmd.base,
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_SaveDefaultConfigCmd.base,
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_SaveConfigToFileCmd.base,
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_LoadConfigFromFileCmd.base,
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_RestoreFactoryConfigCmd.base,
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_SetParamsCmd.base,
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_GetParamsCmd.base,
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_GetParamsCfgnCmd.base,
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_GetFileHashCmd.base,}};

static void InitDefaultsCmdMsg_LineProperty() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_CmdMsg_LineProperty_default_instance_;
    new (ptr) ::HaWC::CmdMsg_LineProperty();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::CmdMsg_LineProperty::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CmdMsg_LineProperty =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCmdMsg_LineProperty}, {}};

static void InitDefaultsCmdMsg_LineProperties() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_CmdMsg_LineProperties_default_instance_;
    new (ptr) ::HaWC::CmdMsg_LineProperties();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::CmdMsg_LineProperties::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CmdMsg_LineProperties =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCmdMsg_LineProperties}, {
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_LineProperty.base,}};

static void InitDefaultsCmdMsg_CircleProperty() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_CmdMsg_CircleProperty_default_instance_;
    new (ptr) ::HaWC::CmdMsg_CircleProperty();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::CmdMsg_CircleProperty::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CmdMsg_CircleProperty =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCmdMsg_CircleProperty}, {}};

static void InitDefaultsCmdMsg_CircleProperties() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_CmdMsg_CircleProperties_default_instance_;
    new (ptr) ::HaWC::CmdMsg_CircleProperties();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::CmdMsg_CircleProperties::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CmdMsg_CircleProperties =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCmdMsg_CircleProperties}, {
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_CircleProperty.base,}};

static void InitDefaultsCmdMsg_RectangleProperty() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_CmdMsg_RectangleProperty_default_instance_;
    new (ptr) ::HaWC::CmdMsg_RectangleProperty();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::CmdMsg_RectangleProperty::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CmdMsg_RectangleProperty =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCmdMsg_RectangleProperty}, {}};

static void InitDefaultsCmdMsg_RectangleProperties() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_CmdMsg_RectangleProperties_default_instance_;
    new (ptr) ::HaWC::CmdMsg_RectangleProperties();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::CmdMsg_RectangleProperties::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CmdMsg_RectangleProperties =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCmdMsg_RectangleProperties}, {
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_RectangleProperty.base,}};

static void InitDefaultsCmdMsg_ImageProperty() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_CmdMsg_ImageProperty_default_instance_;
    new (ptr) ::HaWC::CmdMsg_ImageProperty();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::CmdMsg_ImageProperty::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CmdMsg_ImageProperty =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCmdMsg_ImageProperty}, {}};

static void InitDefaultsCmdMsg_ImageProperties() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_CmdMsg_ImageProperties_default_instance_;
    new (ptr) ::HaWC::CmdMsg_ImageProperties();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::CmdMsg_ImageProperties::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CmdMsg_ImageProperties =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCmdMsg_ImageProperties}, {
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_ImageProperty.base,}};

static void InitDefaultsCmdMsg_FileListProperty() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_CmdMsg_FileListProperty_default_instance_;
    new (ptr) ::HaWC::CmdMsg_FileListProperty();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::CmdMsg_FileListProperty::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CmdMsg_FileListProperty =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCmdMsg_FileListProperty}, {}};

static void InitDefaultsCmdMsg_FileListProperties() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_CmdMsg_FileListProperties_default_instance_;
    new (ptr) ::HaWC::CmdMsg_FileListProperties();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::CmdMsg_FileListProperties::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CmdMsg_FileListProperties =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCmdMsg_FileListProperties}, {
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_FileListProperty.base,}};

static void InitDefaultsCmdMsg_ToolBarProperty() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_CmdMsg_ToolBarProperty_default_instance_;
    new (ptr) ::HaWC::CmdMsg_ToolBarProperty();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::CmdMsg_ToolBarProperty::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CmdMsg_ToolBarProperty =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCmdMsg_ToolBarProperty}, {}};

static void InitDefaultsCmdMsg_ListProperty() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_CmdMsg_ListProperty_default_instance_;
    new (ptr) ::HaWC::CmdMsg_ListProperty();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::CmdMsg_ListProperty::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CmdMsg_ListProperty =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCmdMsg_ListProperty}, {}};

static void InitDefaultsCmdMsg_ListProperties() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_CmdMsg_ListProperties_default_instance_;
    new (ptr) ::HaWC::CmdMsg_ListProperties();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::CmdMsg_ListProperties::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CmdMsg_ListProperties =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCmdMsg_ListProperties}, {
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_ListProperty.base,}};

static void InitDefaultsCmdMsg_ToolBarProperties() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_CmdMsg_ToolBarProperties_default_instance_;
    new (ptr) ::HaWC::CmdMsg_ToolBarProperties();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::CmdMsg_ToolBarProperties::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CmdMsg_ToolBarProperties =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCmdMsg_ToolBarProperties}, {
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_ToolBarProperty.base,}};

static void InitDefaultsCmdMsg_MenuProperty() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_CmdMsg_MenuProperty_default_instance_;
    new (ptr) ::HaWC::CmdMsg_MenuProperty();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::CmdMsg_MenuProperty::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CmdMsg_MenuProperty =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCmdMsg_MenuProperty}, {}};

static void InitDefaultsCmdMsg_MenuProperties() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_CmdMsg_MenuProperties_default_instance_;
    new (ptr) ::HaWC::CmdMsg_MenuProperties();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::CmdMsg_MenuProperties::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CmdMsg_MenuProperties =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCmdMsg_MenuProperties}, {
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_MenuProperty.base,}};

static void InitDefaultsCmdMsg_LabelProperty() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_CmdMsg_LabelProperty_default_instance_;
    new (ptr) ::HaWC::CmdMsg_LabelProperty();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::CmdMsg_LabelProperty::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CmdMsg_LabelProperty =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCmdMsg_LabelProperty}, {}};

static void InitDefaultsCmdMsg_LabelProperties() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_CmdMsg_LabelProperties_default_instance_;
    new (ptr) ::HaWC::CmdMsg_LabelProperties();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::CmdMsg_LabelProperties::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CmdMsg_LabelProperties =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCmdMsg_LabelProperties}, {
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_LabelProperty.base,}};

static void InitDefaultsCmdMsg_Component() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_CmdMsg_Component_default_instance_;
    new (ptr) ::HaWC::CmdMsg_Component();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::CmdMsg_Component::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<9> scc_info_CmdMsg_Component =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 9, InitDefaultsCmdMsg_Component}, {
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_LineProperties.base,
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_CircleProperties.base,
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_RectangleProperties.base,
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_ImageProperties.base,
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_FileListProperties.base,
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_ToolBarProperties.base,
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_ListProperties.base,
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_MenuProperties.base,
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_LabelProperties.base,}};

static void InitDefaultsCmdMsg_ComponentList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_CmdMsg_ComponentList_default_instance_;
    new (ptr) ::HaWC::CmdMsg_ComponentList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::CmdMsg_ComponentList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CmdMsg_ComponentList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCmdMsg_ComponentList}, {
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_Component.base,}};

static void InitDefaultsCmdMsg_OverlayCmd() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_CmdMsg_OverlayCmd_default_instance_;
    new (ptr) ::HaWC::CmdMsg_OverlayCmd();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::CmdMsg_OverlayCmd::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CmdMsg_OverlayCmd =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCmdMsg_OverlayCmd}, {
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_ComponentList.base,}};

static void InitDefaultsCmdMsg_SetFeedSourceCmd() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_CmdMsg_SetFeedSourceCmd_default_instance_;
    new (ptr) ::HaWC::CmdMsg_SetFeedSourceCmd();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::CmdMsg_SetFeedSourceCmd::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CmdMsg_SetFeedSourceCmd =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCmdMsg_SetFeedSourceCmd}, {}};

static void InitDefaultsCmdMsg_SetViewFeedCmd() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_CmdMsg_SetViewFeedCmd_default_instance_;
    new (ptr) ::HaWC::CmdMsg_SetViewFeedCmd();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::CmdMsg_SetViewFeedCmd::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CmdMsg_SetViewFeedCmd =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCmdMsg_SetViewFeedCmd}, {}};

static void InitDefaultsCmdMsg_SetViewWindowCmd() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_CmdMsg_SetViewWindowCmd_default_instance_;
    new (ptr) ::HaWC::CmdMsg_SetViewWindowCmd();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::CmdMsg_SetViewWindowCmd::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CmdMsg_SetViewWindowCmd =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCmdMsg_SetViewWindowCmd}, {}};

static void InitDefaultsCmdMsg_SetDisplayCfgCmd() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_CmdMsg_SetDisplayCfgCmd_default_instance_;
    new (ptr) ::HaWC::CmdMsg_SetDisplayCfgCmd();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::CmdMsg_SetDisplayCfgCmd::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_CmdMsg_SetDisplayCfgCmd =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsCmdMsg_SetDisplayCfgCmd}, {
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_SetFeedSourceCmd.base,
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_OverlayCmd.base,
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_SetViewFeedCmd.base,
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_SetViewWindowCmd.base,}};

static void InitDefaultsCmdMsg_GetDisplayCfgCmd() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_CmdMsg_GetDisplayCfgCmd_default_instance_;
    new (ptr) ::HaWC::CmdMsg_GetDisplayCfgCmd();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::CmdMsg_GetDisplayCfgCmd::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CmdMsg_GetDisplayCfgCmd =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCmdMsg_GetDisplayCfgCmd}, {}};

static void InitDefaultsCmdMsg_SaveDefaultDisplayCmd() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_CmdMsg_SaveDefaultDisplayCmd_default_instance_;
    new (ptr) ::HaWC::CmdMsg_SaveDefaultDisplayCmd();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::CmdMsg_SaveDefaultDisplayCmd::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CmdMsg_SaveDefaultDisplayCmd =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCmdMsg_SaveDefaultDisplayCmd}, {}};

static void InitDefaultsCmdMsg_SaveDisplayToFileCmd() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_CmdMsg_SaveDisplayToFileCmd_default_instance_;
    new (ptr) ::HaWC::CmdMsg_SaveDisplayToFileCmd();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::CmdMsg_SaveDisplayToFileCmd::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CmdMsg_SaveDisplayToFileCmd =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCmdMsg_SaveDisplayToFileCmd}, {}};

static void InitDefaultsCmdMsg_LoadDisplayFromFileCmd() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_CmdMsg_LoadDisplayFromFileCmd_default_instance_;
    new (ptr) ::HaWC::CmdMsg_LoadDisplayFromFileCmd();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::CmdMsg_LoadDisplayFromFileCmd::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CmdMsg_LoadDisplayFromFileCmd =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCmdMsg_LoadDisplayFromFileCmd}, {}};

static void InitDefaultsCmdMsg_SaveOverlayToFileCmd() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_CmdMsg_SaveOverlayToFileCmd_default_instance_;
    new (ptr) ::HaWC::CmdMsg_SaveOverlayToFileCmd();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::CmdMsg_SaveOverlayToFileCmd::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CmdMsg_SaveOverlayToFileCmd =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCmdMsg_SaveOverlayToFileCmd}, {}};

static void InitDefaultsCmdMsg_LoadOverlayFromFileCmd() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_CmdMsg_LoadOverlayFromFileCmd_default_instance_;
    new (ptr) ::HaWC::CmdMsg_LoadOverlayFromFileCmd();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::CmdMsg_LoadOverlayFromFileCmd::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CmdMsg_LoadOverlayFromFileCmd =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCmdMsg_LoadOverlayFromFileCmd}, {}};

static void InitDefaultsCmdMsg_LoadFontsCmd() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_CmdMsg_LoadFontsCmd_default_instance_;
    new (ptr) ::HaWC::CmdMsg_LoadFontsCmd();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::CmdMsg_LoadFontsCmd::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CmdMsg_LoadFontsCmd =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCmdMsg_LoadFontsCmd}, {}};

static void InitDefaultsCmdMsg_RestoreFactoryDisplayCmd() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_CmdMsg_RestoreFactoryDisplayCmd_default_instance_;
    new (ptr) ::HaWC::CmdMsg_RestoreFactoryDisplayCmd();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::CmdMsg_RestoreFactoryDisplayCmd::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CmdMsg_RestoreFactoryDisplayCmd =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCmdMsg_RestoreFactoryDisplayCmd}, {}};

static void InitDefaultsCmdMsg_DisplayCmd() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_CmdMsg_DisplayCmd_default_instance_;
    new (ptr) ::HaWC::CmdMsg_DisplayCmd();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::CmdMsg_DisplayCmd::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<9> scc_info_CmdMsg_DisplayCmd =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 9, InitDefaultsCmdMsg_DisplayCmd}, {
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_SetDisplayCfgCmd.base,
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_GetDisplayCfgCmd.base,
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_SaveDefaultDisplayCmd.base,
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_SaveDisplayToFileCmd.base,
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_LoadDisplayFromFileCmd.base,
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_RestoreFactoryDisplayCmd.base,
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_LoadFontsCmd.base,
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_SaveOverlayToFileCmd.base,
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_LoadOverlayFromFileCmd.base,}};

static void InitDefaultsCmdMsg_IO_Cmd() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_CmdMsg_IO_Cmd_default_instance_;
    new (ptr) ::HaWC::CmdMsg_IO_Cmd();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::CmdMsg_IO_Cmd::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CmdMsg_IO_Cmd =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCmdMsg_IO_Cmd}, {}};

static void InitDefaultsCmdMsg() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_CmdMsg_default_instance_;
    new (ptr) ::HaWC::CmdMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::CmdMsg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_CmdMsg =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsCmdMsg}, {
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_AppManagerCmd.base,
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_DisplayCmd.base,
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_IO_Cmd.base,}};

static void InitDefaultsRspMsg_ResetEvt() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_RspMsg_ResetEvt_default_instance_;
    new (ptr) ::HaWC::RspMsg_ResetEvt();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::RspMsg_ResetEvt::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RspMsg_ResetEvt =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRspMsg_ResetEvt}, {}};

static void InitDefaultsRspMsg_SaveConfigRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_RspMsg_SaveConfigRsp_default_instance_;
    new (ptr) ::HaWC::RspMsg_SaveConfigRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::RspMsg_SaveConfigRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RspMsg_SaveConfigRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRspMsg_SaveConfigRsp}, {}};

static void InitDefaultsRspMsg_LoadConfigRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_RspMsg_LoadConfigRsp_default_instance_;
    new (ptr) ::HaWC::RspMsg_LoadConfigRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::RspMsg_LoadConfigRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RspMsg_LoadConfigRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRspMsg_LoadConfigRsp}, {}};

static void InitDefaultsRspMsg_ParamDetails() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_RspMsg_ParamDetails_default_instance_;
    new (ptr) ::HaWC::RspMsg_ParamDetails();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::RspMsg_ParamDetails::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RspMsg_ParamDetails =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRspMsg_ParamDetails}, {}};

static void InitDefaultsRspMsg_ParamsRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_RspMsg_ParamsRsp_default_instance_;
    new (ptr) ::HaWC::RspMsg_ParamsRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::RspMsg_ParamsRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RspMsg_ParamsRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRspMsg_ParamsRsp}, {
      &protobuf_HaWC_2eproto::scc_info_RspMsg_ParamDetails.base,}};

static void InitDefaultsRspMsg_ParamCfgn() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_RspMsg_ParamCfgn_default_instance_;
    new (ptr) ::HaWC::RspMsg_ParamCfgn();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::RspMsg_ParamCfgn::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RspMsg_ParamCfgn =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRspMsg_ParamCfgn}, {}};

static void InitDefaultsRspMsg_ParamsCfgnRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_RspMsg_ParamsCfgnRsp_default_instance_;
    new (ptr) ::HaWC::RspMsg_ParamsCfgnRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::RspMsg_ParamsCfgnRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RspMsg_ParamsCfgnRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRspMsg_ParamsCfgnRsp}, {
      &protobuf_HaWC_2eproto::scc_info_RspMsg_ParamCfgn.base,}};

static void InitDefaultsRspMsg_FileHashRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_RspMsg_FileHashRsp_default_instance_;
    new (ptr) ::HaWC::RspMsg_FileHashRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::RspMsg_FileHashRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RspMsg_FileHashRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRspMsg_FileHashRsp}, {}};

static void InitDefaultsRspMsg_AppManagerRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_RspMsg_AppManagerRsp_default_instance_;
    new (ptr) ::HaWC::RspMsg_AppManagerRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::RspMsg_AppManagerRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<6> scc_info_RspMsg_AppManagerRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 6, InitDefaultsRspMsg_AppManagerRsp}, {
      &protobuf_HaWC_2eproto::scc_info_RspMsg_SaveConfigRsp.base,
      &protobuf_HaWC_2eproto::scc_info_RspMsg_LoadConfigRsp.base,
      &protobuf_HaWC_2eproto::scc_info_RspMsg_ParamsRsp.base,
      &protobuf_HaWC_2eproto::scc_info_RspMsg_ParamsCfgnRsp.base,
      &protobuf_HaWC_2eproto::scc_info_RspMsg_FileHashRsp.base,
      &protobuf_HaWC_2eproto::scc_info_RspMsg_ResetEvt.base,}};

static void InitDefaultsRspMsg_FeedSourceRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_RspMsg_FeedSourceRsp_default_instance_;
    new (ptr) ::HaWC::RspMsg_FeedSourceRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::RspMsg_FeedSourceRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RspMsg_FeedSourceRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRspMsg_FeedSourceRsp}, {}};

static void InitDefaultsRspMsg_OverlayCreateRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_RspMsg_OverlayCreateRsp_default_instance_;
    new (ptr) ::HaWC::RspMsg_OverlayCreateRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::RspMsg_OverlayCreateRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RspMsg_OverlayCreateRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRspMsg_OverlayCreateRsp}, {}};

static void InitDefaultsRspMsg_OverlayUpdateRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_RspMsg_OverlayUpdateRsp_default_instance_;
    new (ptr) ::HaWC::RspMsg_OverlayUpdateRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::RspMsg_OverlayUpdateRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RspMsg_OverlayUpdateRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRspMsg_OverlayUpdateRsp}, {}};

static void InitDefaultsRspMsg_OverlayRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_RspMsg_OverlayRsp_default_instance_;
    new (ptr) ::HaWC::RspMsg_OverlayRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::RspMsg_OverlayRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_RspMsg_OverlayRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsRspMsg_OverlayRsp}, {
      &protobuf_HaWC_2eproto::scc_info_RspMsg_OverlayCreateRsp.base,
      &protobuf_HaWC_2eproto::scc_info_RspMsg_OverlayUpdateRsp.base,}};

static void InitDefaultsRspMsg_ViewFeedRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_RspMsg_ViewFeedRsp_default_instance_;
    new (ptr) ::HaWC::RspMsg_ViewFeedRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::RspMsg_ViewFeedRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RspMsg_ViewFeedRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRspMsg_ViewFeedRsp}, {}};

static void InitDefaultsRspMsg_ViewWindowRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_RspMsg_ViewWindowRsp_default_instance_;
    new (ptr) ::HaWC::RspMsg_ViewWindowRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::RspMsg_ViewWindowRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RspMsg_ViewWindowRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRspMsg_ViewWindowRsp}, {}};

static void InitDefaultsRspMsg_DisplayCfgRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_RspMsg_DisplayCfgRsp_default_instance_;
    new (ptr) ::HaWC::RspMsg_DisplayCfgRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::RspMsg_DisplayCfgRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_RspMsg_DisplayCfgRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsRspMsg_DisplayCfgRsp}, {
      &protobuf_HaWC_2eproto::scc_info_RspMsg_FeedSourceRsp.base,
      &protobuf_HaWC_2eproto::scc_info_RspMsg_OverlayRsp.base,
      &protobuf_HaWC_2eproto::scc_info_RspMsg_ViewFeedRsp.base,
      &protobuf_HaWC_2eproto::scc_info_RspMsg_ViewWindowRsp.base,}};

static void InitDefaultsRspMsg_SaveDisplayRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_RspMsg_SaveDisplayRsp_default_instance_;
    new (ptr) ::HaWC::RspMsg_SaveDisplayRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::RspMsg_SaveDisplayRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RspMsg_SaveDisplayRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRspMsg_SaveDisplayRsp}, {}};

static void InitDefaultsRspMsg_LoadDisplayRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_RspMsg_LoadDisplayRsp_default_instance_;
    new (ptr) ::HaWC::RspMsg_LoadDisplayRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::RspMsg_LoadDisplayRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RspMsg_LoadDisplayRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRspMsg_LoadDisplayRsp}, {}};

static void InitDefaultsRspMsg_LoadFontsRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_RspMsg_LoadFontsRsp_default_instance_;
    new (ptr) ::HaWC::RspMsg_LoadFontsRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::RspMsg_LoadFontsRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RspMsg_LoadFontsRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRspMsg_LoadFontsRsp}, {}};

static void InitDefaultsRspMsg_SaveOverlayToFileRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_RspMsg_SaveOverlayToFileRsp_default_instance_;
    new (ptr) ::HaWC::RspMsg_SaveOverlayToFileRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::RspMsg_SaveOverlayToFileRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RspMsg_SaveOverlayToFileRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRspMsg_SaveOverlayToFileRsp}, {}};

static void InitDefaultsRspMsg_LoadOverlayFromFileRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_RspMsg_LoadOverlayFromFileRsp_default_instance_;
    new (ptr) ::HaWC::RspMsg_LoadOverlayFromFileRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::RspMsg_LoadOverlayFromFileRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RspMsg_LoadOverlayFromFileRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRspMsg_LoadOverlayFromFileRsp}, {}};

static void InitDefaultsRspMsg_QosBcast() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_RspMsg_QosBcast_default_instance_;
    new (ptr) ::HaWC::RspMsg_QosBcast();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::RspMsg_QosBcast::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RspMsg_QosBcast =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRspMsg_QosBcast}, {}};

static void InitDefaultsRspMsg_DisplayRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_RspMsg_DisplayRsp_default_instance_;
    new (ptr) ::HaWC::RspMsg_DisplayRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::RspMsg_DisplayRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<7> scc_info_RspMsg_DisplayRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 7, InitDefaultsRspMsg_DisplayRsp}, {
      &protobuf_HaWC_2eproto::scc_info_RspMsg_DisplayCfgRsp.base,
      &protobuf_HaWC_2eproto::scc_info_RspMsg_SaveDisplayRsp.base,
      &protobuf_HaWC_2eproto::scc_info_RspMsg_LoadDisplayRsp.base,
      &protobuf_HaWC_2eproto::scc_info_RspMsg_LoadFontsRsp.base,
      &protobuf_HaWC_2eproto::scc_info_RspMsg_SaveOverlayToFileRsp.base,
      &protobuf_HaWC_2eproto::scc_info_RspMsg_LoadOverlayFromFileRsp.base,
      &protobuf_HaWC_2eproto::scc_info_RspMsg_QosBcast.base,}};

static void InitDefaultsRspMsg_IO_Bcast() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_RspMsg_IO_Bcast_default_instance_;
    new (ptr) ::HaWC::RspMsg_IO_Bcast();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::RspMsg_IO_Bcast::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RspMsg_IO_Bcast =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRspMsg_IO_Bcast}, {}};

static void InitDefaultsRspMsg_IO_Rsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_RspMsg_IO_Rsp_default_instance_;
    new (ptr) ::HaWC::RspMsg_IO_Rsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::RspMsg_IO_Rsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RspMsg_IO_Rsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRspMsg_IO_Rsp}, {
      &protobuf_HaWC_2eproto::scc_info_RspMsg_IO_Bcast.base,}};

static void InitDefaultsRspMsg() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HaWC::_RspMsg_default_instance_;
    new (ptr) ::HaWC::RspMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HaWC::RspMsg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_RspMsg =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsRspMsg}, {
      &protobuf_HaWC_2eproto::scc_info_RspMsg_AppManagerRsp.base,
      &protobuf_HaWC_2eproto::scc_info_RspMsg_DisplayRsp.base,
      &protobuf_HaWC_2eproto::scc_info_RspMsg_IO_Rsp.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_CmdMsg_CloseCmd.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CmdMsg_SaveDefaultConfigCmd.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CmdMsg_SaveConfigToFileCmd.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CmdMsg_LoadConfigFromFileCmd.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CmdMsg_RestoreFactoryConfigCmd.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CmdMsg_ParamSet.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CmdMsg_SetParamsCmd.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CmdMsg_ParamLoc.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CmdMsg_GetParamsCmd.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CmdMsg_GetParamsCfgnCmd.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CmdMsg_GetFileHashCmd.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CmdMsg_AppManagerCmd.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CmdMsg_LineProperty.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CmdMsg_LineProperties.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CmdMsg_CircleProperty.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CmdMsg_CircleProperties.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CmdMsg_RectangleProperty.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CmdMsg_RectangleProperties.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CmdMsg_ImageProperty.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CmdMsg_ImageProperties.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CmdMsg_FileListProperty.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CmdMsg_FileListProperties.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CmdMsg_ToolBarProperty.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CmdMsg_ListProperty.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CmdMsg_ListProperties.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CmdMsg_ToolBarProperties.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CmdMsg_MenuProperty.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CmdMsg_MenuProperties.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CmdMsg_LabelProperty.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CmdMsg_LabelProperties.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CmdMsg_Component.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CmdMsg_ComponentList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CmdMsg_OverlayCmd.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CmdMsg_SetFeedSourceCmd.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CmdMsg_SetViewFeedCmd.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CmdMsg_SetViewWindowCmd.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CmdMsg_SetDisplayCfgCmd.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CmdMsg_GetDisplayCfgCmd.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CmdMsg_SaveDefaultDisplayCmd.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CmdMsg_SaveDisplayToFileCmd.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CmdMsg_LoadDisplayFromFileCmd.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CmdMsg_SaveOverlayToFileCmd.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CmdMsg_LoadOverlayFromFileCmd.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CmdMsg_LoadFontsCmd.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CmdMsg_RestoreFactoryDisplayCmd.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CmdMsg_DisplayCmd.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CmdMsg_IO_Cmd.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CmdMsg.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RspMsg_ResetEvt.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RspMsg_SaveConfigRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RspMsg_LoadConfigRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RspMsg_ParamDetails.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RspMsg_ParamsRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RspMsg_ParamCfgn.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RspMsg_ParamsCfgnRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RspMsg_FileHashRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RspMsg_AppManagerRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RspMsg_FeedSourceRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RspMsg_OverlayCreateRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RspMsg_OverlayUpdateRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RspMsg_OverlayRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RspMsg_ViewFeedRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RspMsg_ViewWindowRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RspMsg_DisplayCfgRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RspMsg_SaveDisplayRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RspMsg_LoadDisplayRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RspMsg_LoadFontsRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RspMsg_SaveOverlayToFileRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RspMsg_LoadOverlayFromFileRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RspMsg_QosBcast.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RspMsg_DisplayRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RspMsg_IO_Bcast.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RspMsg_IO_Rsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RspMsg.base);
}

::google::protobuf::Metadata file_level_metadata[74];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[9];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_CloseCmd, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_CloseCmd, closeoption_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_SaveDefaultConfigCmd, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_SaveDefaultConfigCmd, reporterrstr_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_SaveConfigToFileCmd, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_SaveConfigToFileCmd, filename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_SaveConfigToFileCmd, reporterrstr_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_LoadConfigFromFileCmd, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_LoadConfigFromFileCmd, filename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_LoadConfigFromFileCmd, reporterrstr_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_RestoreFactoryConfigCmd, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_ParamSet, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_ParamSet, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_ParamSet, paramid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_ParamSet, offset_),
  offsetof(::HaWC::CmdMsg_ParamSetDefaultTypeInternal, boolval_),
  offsetof(::HaWC::CmdMsg_ParamSetDefaultTypeInternal, uintval_),
  offsetof(::HaWC::CmdMsg_ParamSetDefaultTypeInternal, intval_),
  offsetof(::HaWC::CmdMsg_ParamSetDefaultTypeInternal, doubleval_),
  offsetof(::HaWC::CmdMsg_ParamSetDefaultTypeInternal, strval_),
  offsetof(::HaWC::CmdMsg_ParamSetDefaultTypeInternal, databytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_ParamSet, Data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_SetParamsCmd, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_SetParamsCmd, target_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_SetParamsCmd, params_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_SetParamsCmd, reportparamvals_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_SetParamsCmd, reporterrstr_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_ParamLoc, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_ParamLoc, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_ParamLoc, offset_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_GetParamsCmd, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_GetParamsCmd, target_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_GetParamsCmd, locations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_GetParamsCmd, reporterrstr_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_GetParamsCfgnCmd, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_GetParamsCfgnCmd, target_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_GetParamsCfgnCmd, paramids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_GetParamsCfgnCmd, reportdescription_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_GetParamsCfgnCmd, reporterrstr_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_GetFileHashCmd, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_GetFileHashCmd, filename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_GetFileHashCmd, reporterrstr_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_AppManagerCmd, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_AppManagerCmd, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::HaWC::CmdMsg_AppManagerCmdDefaultTypeInternal, close_),
  offsetof(::HaWC::CmdMsg_AppManagerCmdDefaultTypeInternal, savedefaultconfig_),
  offsetof(::HaWC::CmdMsg_AppManagerCmdDefaultTypeInternal, saveconfigtofile_),
  offsetof(::HaWC::CmdMsg_AppManagerCmdDefaultTypeInternal, loadconfigfromfile_),
  offsetof(::HaWC::CmdMsg_AppManagerCmdDefaultTypeInternal, restorefactoryconfig_),
  offsetof(::HaWC::CmdMsg_AppManagerCmdDefaultTypeInternal, setparams_),
  offsetof(::HaWC::CmdMsg_AppManagerCmdDefaultTypeInternal, getparams_),
  offsetof(::HaWC::CmdMsg_AppManagerCmdDefaultTypeInternal, getparamscfgn_),
  offsetof(::HaWC::CmdMsg_AppManagerCmdDefaultTypeInternal, getfilehash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_AppManagerCmd, command_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_LineProperty, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_LineProperty, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::HaWC::CmdMsg_LinePropertyDefaultTypeInternal, visible_),
  offsetof(::HaWC::CmdMsg_LinePropertyDefaultTypeInternal, pt1x_),
  offsetof(::HaWC::CmdMsg_LinePropertyDefaultTypeInternal, pt1y_),
  offsetof(::HaWC::CmdMsg_LinePropertyDefaultTypeInternal, pt2x_),
  offsetof(::HaWC::CmdMsg_LinePropertyDefaultTypeInternal, pt2y_),
  offsetof(::HaWC::CmdMsg_LinePropertyDefaultTypeInternal, width_),
  offsetof(::HaWC::CmdMsg_LinePropertyDefaultTypeInternal, color_),
  offsetof(::HaWC::CmdMsg_LinePropertyDefaultTypeInternal, opacity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_LineProperty, property_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_LineProperties, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_LineProperties, properties_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_CircleProperty, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_CircleProperty, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::HaWC::CmdMsg_CirclePropertyDefaultTypeInternal, visible_),
  offsetof(::HaWC::CmdMsg_CirclePropertyDefaultTypeInternal, x_),
  offsetof(::HaWC::CmdMsg_CirclePropertyDefaultTypeInternal, y_),
  offsetof(::HaWC::CmdMsg_CirclePropertyDefaultTypeInternal, radius_),
  offsetof(::HaWC::CmdMsg_CirclePropertyDefaultTypeInternal, color_),
  offsetof(::HaWC::CmdMsg_CirclePropertyDefaultTypeInternal, border_width_),
  offsetof(::HaWC::CmdMsg_CirclePropertyDefaultTypeInternal, border_color_),
  offsetof(::HaWC::CmdMsg_CirclePropertyDefaultTypeInternal, opacity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_CircleProperty, property_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_CircleProperties, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_CircleProperties, properties_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_RectangleProperty, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_RectangleProperty, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::HaWC::CmdMsg_RectanglePropertyDefaultTypeInternal, visible_),
  offsetof(::HaWC::CmdMsg_RectanglePropertyDefaultTypeInternal, x_),
  offsetof(::HaWC::CmdMsg_RectanglePropertyDefaultTypeInternal, y_),
  offsetof(::HaWC::CmdMsg_RectanglePropertyDefaultTypeInternal, width_),
  offsetof(::HaWC::CmdMsg_RectanglePropertyDefaultTypeInternal, height_),
  offsetof(::HaWC::CmdMsg_RectanglePropertyDefaultTypeInternal, color_),
  offsetof(::HaWC::CmdMsg_RectanglePropertyDefaultTypeInternal, border_width_),
  offsetof(::HaWC::CmdMsg_RectanglePropertyDefaultTypeInternal, border_color_),
  offsetof(::HaWC::CmdMsg_RectanglePropertyDefaultTypeInternal, radius_),
  offsetof(::HaWC::CmdMsg_RectanglePropertyDefaultTypeInternal, opacity_),
  offsetof(::HaWC::CmdMsg_RectanglePropertyDefaultTypeInternal, rotation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_RectangleProperty, property_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_RectangleProperties, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_RectangleProperties, properties_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_ImageProperty, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_ImageProperty, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::HaWC::CmdMsg_ImagePropertyDefaultTypeInternal, visible_),
  offsetof(::HaWC::CmdMsg_ImagePropertyDefaultTypeInternal, x_),
  offsetof(::HaWC::CmdMsg_ImagePropertyDefaultTypeInternal, y_),
  offsetof(::HaWC::CmdMsg_ImagePropertyDefaultTypeInternal, width_),
  offsetof(::HaWC::CmdMsg_ImagePropertyDefaultTypeInternal, height_),
  offsetof(::HaWC::CmdMsg_ImagePropertyDefaultTypeInternal, source_),
  offsetof(::HaWC::CmdMsg_ImagePropertyDefaultTypeInternal, fillmode_),
  offsetof(::HaWC::CmdMsg_ImagePropertyDefaultTypeInternal, opacity_),
  offsetof(::HaWC::CmdMsg_ImagePropertyDefaultTypeInternal, rotation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_ImageProperty, property_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_ImageProperties, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_ImageProperties, properties_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_FileListProperty, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_FileListProperty, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::HaWC::CmdMsg_FileListPropertyDefaultTypeInternal, item_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_FileListProperty, property_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_FileListProperties, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_FileListProperties, properties_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_ToolBarProperty, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_ToolBarProperty, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::HaWC::CmdMsg_ToolBarPropertyDefaultTypeInternal, visible_),
  offsetof(::HaWC::CmdMsg_ToolBarPropertyDefaultTypeInternal, x_),
  offsetof(::HaWC::CmdMsg_ToolBarPropertyDefaultTypeInternal, y_),
  offsetof(::HaWC::CmdMsg_ToolBarPropertyDefaultTypeInternal, width_),
  offsetof(::HaWC::CmdMsg_ToolBarPropertyDefaultTypeInternal, height_),
  offsetof(::HaWC::CmdMsg_ToolBarPropertyDefaultTypeInternal, options____),
  offsetof(::HaWC::CmdMsg_ToolBarPropertyDefaultTypeInternal, iconsspacing_),
  offsetof(::HaWC::CmdMsg_ToolBarPropertyDefaultTypeInternal, margins_),
  offsetof(::HaWC::CmdMsg_ToolBarPropertyDefaultTypeInternal, isvertical_),
  offsetof(::HaWC::CmdMsg_ToolBarPropertyDefaultTypeInternal, backcolor_),
  offsetof(::HaWC::CmdMsg_ToolBarPropertyDefaultTypeInternal, selected_),
  offsetof(::HaWC::CmdMsg_ToolBarPropertyDefaultTypeInternal, selectedcolor_),
  offsetof(::HaWC::CmdMsg_ToolBarPropertyDefaultTypeInternal, selectedbordercolor_),
  offsetof(::HaWC::CmdMsg_ToolBarPropertyDefaultTypeInternal, selectedborderwidth_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_ToolBarProperty, property_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_ListProperty, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_ListProperty, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::HaWC::CmdMsg_ListPropertyDefaultTypeInternal, item_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_ListProperty, property_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_ListProperties, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_ListProperties, properties_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_ToolBarProperties, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_ToolBarProperties, properties_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_MenuProperty, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_MenuProperty, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::HaWC::CmdMsg_MenuPropertyDefaultTypeInternal, visible_),
  offsetof(::HaWC::CmdMsg_MenuPropertyDefaultTypeInternal, x_),
  offsetof(::HaWC::CmdMsg_MenuPropertyDefaultTypeInternal, y_),
  offsetof(::HaWC::CmdMsg_MenuPropertyDefaultTypeInternal, width_),
  offsetof(::HaWC::CmdMsg_MenuPropertyDefaultTypeInternal, itemheight_),
  offsetof(::HaWC::CmdMsg_MenuPropertyDefaultTypeInternal, options____),
  offsetof(::HaWC::CmdMsg_MenuPropertyDefaultTypeInternal, highlighttext_),
  offsetof(::HaWC::CmdMsg_MenuPropertyDefaultTypeInternal, backcolor_),
  offsetof(::HaWC::CmdMsg_MenuPropertyDefaultTypeInternal, textcolor_),
  offsetof(::HaWC::CmdMsg_MenuPropertyDefaultTypeInternal, selectedcolor_),
  offsetof(::HaWC::CmdMsg_MenuPropertyDefaultTypeInternal, selected_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_MenuProperty, property_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_MenuProperties, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_MenuProperties, properties_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_LabelProperty, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_LabelProperty, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::HaWC::CmdMsg_LabelPropertyDefaultTypeInternal, visible_),
  offsetof(::HaWC::CmdMsg_LabelPropertyDefaultTypeInternal, x_),
  offsetof(::HaWC::CmdMsg_LabelPropertyDefaultTypeInternal, y_),
  offsetof(::HaWC::CmdMsg_LabelPropertyDefaultTypeInternal, width_),
  offsetof(::HaWC::CmdMsg_LabelPropertyDefaultTypeInternal, height_),
  offsetof(::HaWC::CmdMsg_LabelPropertyDefaultTypeInternal, text_),
  offsetof(::HaWC::CmdMsg_LabelPropertyDefaultTypeInternal, font_family_),
  offsetof(::HaWC::CmdMsg_LabelPropertyDefaultTypeInternal, font_pointsize_),
  offsetof(::HaWC::CmdMsg_LabelPropertyDefaultTypeInternal, color_),
  offsetof(::HaWC::CmdMsg_LabelPropertyDefaultTypeInternal, opacity_),
  offsetof(::HaWC::CmdMsg_LabelPropertyDefaultTypeInternal, rotation_),
  offsetof(::HaWC::CmdMsg_LabelPropertyDefaultTypeInternal, wrapmode_),
  offsetof(::HaWC::CmdMsg_LabelPropertyDefaultTypeInternal, textformat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_LabelProperty, property_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_LabelProperties, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_LabelProperties, properties_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_Component, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_Component, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_Component, objectname_),
  offsetof(::HaWC::CmdMsg_ComponentDefaultTypeInternal, line_),
  offsetof(::HaWC::CmdMsg_ComponentDefaultTypeInternal, circle_),
  offsetof(::HaWC::CmdMsg_ComponentDefaultTypeInternal, rectangle_),
  offsetof(::HaWC::CmdMsg_ComponentDefaultTypeInternal, image_),
  offsetof(::HaWC::CmdMsg_ComponentDefaultTypeInternal, filelist_),
  offsetof(::HaWC::CmdMsg_ComponentDefaultTypeInternal, toolbar_),
  offsetof(::HaWC::CmdMsg_ComponentDefaultTypeInternal, list_),
  offsetof(::HaWC::CmdMsg_ComponentDefaultTypeInternal, menu_),
  offsetof(::HaWC::CmdMsg_ComponentDefaultTypeInternal, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_Component, properties_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_ComponentList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_ComponentList, components_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_OverlayCmd, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_OverlayCmd, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_OverlayCmd, viewportid_),
  offsetof(::HaWC::CmdMsg_OverlayCmdDefaultTypeInternal, createscreen_),
  offsetof(::HaWC::CmdMsg_OverlayCmdDefaultTypeInternal, updatesreen_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_OverlayCmd, command_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_SetFeedSourceCmd, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_SetFeedSourceCmd, feedid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_SetFeedSourceCmd, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_SetFeedSourceCmd, sourcestr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_SetFeedSourceCmd, qostimeout_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_SetFeedSourceCmd, qosrefresh_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_SetViewFeedCmd, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_SetViewFeedCmd, viewportid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_SetViewFeedCmd, feedid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_SetViewWindowCmd, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_SetViewWindowCmd, viewportid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_SetViewWindowCmd, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_SetViewWindowCmd, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_SetViewWindowCmd, z_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_SetViewWindowCmd, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_SetViewWindowCmd, height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_SetViewWindowCmd, alpha_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_SetViewWindowCmd, enableoverlay_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_SetDisplayCfgCmd, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_SetDisplayCfgCmd, reportparamvals_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_SetDisplayCfgCmd, reporterrstr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_SetDisplayCfgCmd, feedsrcs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_SetDisplayCfgCmd, mainoverlay_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_SetDisplayCfgCmd, viewfeeds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_SetDisplayCfgCmd, viewwindows_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_SetDisplayCfgCmd, viewoverlays_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_GetDisplayCfgCmd, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_GetDisplayCfgCmd, reporterrstr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_GetDisplayCfgCmd, feedsrcids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_GetDisplayCfgCmd, viewfeedids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_GetDisplayCfgCmd, viewwindowids_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_SaveDefaultDisplayCmd, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_SaveDefaultDisplayCmd, reporterrstr_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_SaveDisplayToFileCmd, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_SaveDisplayToFileCmd, filename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_SaveDisplayToFileCmd, reporterrstr_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_LoadDisplayFromFileCmd, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_LoadDisplayFromFileCmd, filename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_LoadDisplayFromFileCmd, reporterrstr_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_SaveOverlayToFileCmd, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_SaveOverlayToFileCmd, mainoverlay_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_SaveOverlayToFileCmd, viewportid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_SaveOverlayToFileCmd, filename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_SaveOverlayToFileCmd, reporterrstr_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_LoadOverlayFromFileCmd, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_LoadOverlayFromFileCmd, mainoverlay_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_LoadOverlayFromFileCmd, viewportid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_LoadOverlayFromFileCmd, filename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_LoadOverlayFromFileCmd, reporterrstr_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_LoadFontsCmd, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_LoadFontsCmd, reportparamvals_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_LoadFontsCmd, reporterrstr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_LoadFontsCmd, overwritefiles_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_LoadFontsCmd, fontfiles_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_RestoreFactoryDisplayCmd, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_DisplayCmd, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_DisplayCmd, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::HaWC::CmdMsg_DisplayCmdDefaultTypeInternal, setdisplaycfg_),
  offsetof(::HaWC::CmdMsg_DisplayCmdDefaultTypeInternal, getdisplaycfg_),
  offsetof(::HaWC::CmdMsg_DisplayCmdDefaultTypeInternal, savedefaultdisplaycmd_),
  offsetof(::HaWC::CmdMsg_DisplayCmdDefaultTypeInternal, savedisplaycmd_),
  offsetof(::HaWC::CmdMsg_DisplayCmdDefaultTypeInternal, loaddisplaycmd_),
  offsetof(::HaWC::CmdMsg_DisplayCmdDefaultTypeInternal, restorefactorydisplaycfgn_),
  offsetof(::HaWC::CmdMsg_DisplayCmdDefaultTypeInternal, loadfontscmd_),
  offsetof(::HaWC::CmdMsg_DisplayCmdDefaultTypeInternal, saveoverlaytofilecmd_),
  offsetof(::HaWC::CmdMsg_DisplayCmdDefaultTypeInternal, loadoverlayfromfilecmd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_DisplayCmd, command_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg_IO_Cmd, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg, seqnum_),
  offsetof(::HaWC::CmdMsgDefaultTypeInternal, appcmd_),
  offsetof(::HaWC::CmdMsgDefaultTypeInternal, displaycmd_),
  offsetof(::HaWC::CmdMsgDefaultTypeInternal, iocmd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::CmdMsg, command_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_ResetEvt, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_ResetEvt, sessionid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_SaveConfigRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_SaveConfigRsp, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_SaveConfigRsp, errstr_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_LoadConfigRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_LoadConfigRsp, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_LoadConfigRsp, errstr_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_ParamDetails, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_ParamDetails, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_ParamDetails, paramid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_ParamDetails, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_ParamDetails, updated_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_ParamDetails, saved_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_ParamDetails, takenaffect_),
  offsetof(::HaWC::RspMsg_ParamDetailsDefaultTypeInternal, boolval_),
  offsetof(::HaWC::RspMsg_ParamDetailsDefaultTypeInternal, uintval_),
  offsetof(::HaWC::RspMsg_ParamDetailsDefaultTypeInternal, intval_),
  offsetof(::HaWC::RspMsg_ParamDetailsDefaultTypeInternal, doubleval_),
  offsetof(::HaWC::RspMsg_ParamDetailsDefaultTypeInternal, strval_),
  offsetof(::HaWC::RspMsg_ParamDetailsDefaultTypeInternal, databytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_ParamDetails, Data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_ParamsRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_ParamsRsp, target_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_ParamsRsp, params_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_ParamsRsp, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_ParamsRsp, errstr_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_ParamCfgn, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_ParamCfgn, paramid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_ParamCfgn, datatype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_ParamCfgn, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_ParamCfgn, appresetreqd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_ParamCfgn, osresetreqd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_ParamCfgn, readble_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_ParamCfgn, writeable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_ParamCfgn, scriptable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_ParamCfgn, description_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_ParamsCfgnRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_ParamsCfgnRsp, target_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_ParamsCfgnRsp, params_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_ParamsCfgnRsp, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_ParamsCfgnRsp, errstr_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_FileHashRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_FileHashRsp, filehash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_FileHashRsp, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_FileHashRsp, errstr_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_AppManagerRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_AppManagerRsp, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::HaWC::RspMsg_AppManagerRspDefaultTypeInternal, saveconfig_),
  offsetof(::HaWC::RspMsg_AppManagerRspDefaultTypeInternal, loadconfigrsp_),
  offsetof(::HaWC::RspMsg_AppManagerRspDefaultTypeInternal, params_),
  offsetof(::HaWC::RspMsg_AppManagerRspDefaultTypeInternal, getparamscfgn_),
  offsetof(::HaWC::RspMsg_AppManagerRspDefaultTypeInternal, filehash_),
  offsetof(::HaWC::RspMsg_AppManagerRspDefaultTypeInternal, resetevent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_AppManagerRsp, response_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_FeedSourceRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_FeedSourceRsp, feedid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_FeedSourceRsp, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_FeedSourceRsp, sourcestr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_FeedSourceRsp, qosframetimeout_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_FeedSourceRsp, qosframerefresh_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_OverlayCreateRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_OverlayUpdateRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_OverlayRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_OverlayRsp, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_OverlayRsp, viewportid_),
  offsetof(::HaWC::RspMsg_OverlayRspDefaultTypeInternal, createscreen_),
  offsetof(::HaWC::RspMsg_OverlayRspDefaultTypeInternal, updatesreen_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_OverlayRsp, response_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_ViewFeedRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_ViewFeedRsp, viewportid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_ViewFeedRsp, feedid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_ViewWindowRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_ViewWindowRsp, viewportid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_ViewWindowRsp, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_ViewWindowRsp, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_ViewWindowRsp, z_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_ViewWindowRsp, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_ViewWindowRsp, height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_ViewWindowRsp, alpha_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_ViewWindowRsp, enableoverlay_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_DisplayCfgRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_DisplayCfgRsp, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_DisplayCfgRsp, errstr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_DisplayCfgRsp, feedsrcs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_DisplayCfgRsp, mainoverlayset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_DisplayCfgRsp, viewfeeds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_DisplayCfgRsp, viewwindows_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_DisplayCfgRsp, viewoverlaysset_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_SaveDisplayRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_SaveDisplayRsp, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_SaveDisplayRsp, errstr_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_LoadDisplayRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_LoadDisplayRsp, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_LoadDisplayRsp, errstr_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_LoadFontsRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_LoadFontsRsp, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_LoadFontsRsp, errstr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_LoadFontsRsp, fontfiles_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_SaveOverlayToFileRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_SaveOverlayToFileRsp, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_SaveOverlayToFileRsp, errstr_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_LoadOverlayFromFileRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_LoadOverlayFromFileRsp, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_LoadOverlayFromFileRsp, errstr_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_QosBcast, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_QosBcast, feedname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_QosBcast, feedtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_QosBcast, sourcestr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_QosBcast, qosstate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_QosBcast, repeat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_QosBcast, timesinceframe_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_DisplayRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_DisplayRsp, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::HaWC::RspMsg_DisplayRspDefaultTypeInternal, displaycfgrsp_),
  offsetof(::HaWC::RspMsg_DisplayRspDefaultTypeInternal, savedisplayrsp_),
  offsetof(::HaWC::RspMsg_DisplayRspDefaultTypeInternal, loaddisplayrsp_),
  offsetof(::HaWC::RspMsg_DisplayRspDefaultTypeInternal, loadfontsrsp_),
  offsetof(::HaWC::RspMsg_DisplayRspDefaultTypeInternal, saveoverlaytofilersp_),
  offsetof(::HaWC::RspMsg_DisplayRspDefaultTypeInternal, loadoverlayfromfilersp_),
  offsetof(::HaWC::RspMsg_DisplayRspDefaultTypeInternal, qosbcast_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_DisplayRsp, response_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_IO_Bcast, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_IO_Bcast, newdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_IO_Bcast, sessionid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_IO_Bcast, btns_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_IO_Bcast, leftrocker_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_IO_Bcast, leftx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_IO_Bcast, lefty_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_IO_Bcast, rightrocker_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_IO_Bcast, rightx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_IO_Bcast, righty_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_IO_Rsp, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_IO_Rsp, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::HaWC::RspMsg_IO_RspDefaultTypeInternal, iobcast_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg_IO_Rsp, response_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg, seqnum_),
  offsetof(::HaWC::RspMsgDefaultTypeInternal, apprsp_),
  offsetof(::HaWC::RspMsgDefaultTypeInternal, displayrsp_),
  offsetof(::HaWC::RspMsgDefaultTypeInternal, iorsp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HaWC::RspMsg, response_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::HaWC::CmdMsg_CloseCmd)},
  { 6, -1, sizeof(::HaWC::CmdMsg_SaveDefaultConfigCmd)},
  { 12, -1, sizeof(::HaWC::CmdMsg_SaveConfigToFileCmd)},
  { 19, -1, sizeof(::HaWC::CmdMsg_LoadConfigFromFileCmd)},
  { 26, -1, sizeof(::HaWC::CmdMsg_RestoreFactoryConfigCmd)},
  { 31, -1, sizeof(::HaWC::CmdMsg_ParamSet)},
  { 45, -1, sizeof(::HaWC::CmdMsg_SetParamsCmd)},
  { 54, -1, sizeof(::HaWC::CmdMsg_ParamLoc)},
  { 61, -1, sizeof(::HaWC::CmdMsg_GetParamsCmd)},
  { 69, -1, sizeof(::HaWC::CmdMsg_GetParamsCfgnCmd)},
  { 78, -1, sizeof(::HaWC::CmdMsg_GetFileHashCmd)},
  { 85, -1, sizeof(::HaWC::CmdMsg_AppManagerCmd)},
  { 100, -1, sizeof(::HaWC::CmdMsg_LineProperty)},
  { 114, -1, sizeof(::HaWC::CmdMsg_LineProperties)},
  { 120, -1, sizeof(::HaWC::CmdMsg_CircleProperty)},
  { 134, -1, sizeof(::HaWC::CmdMsg_CircleProperties)},
  { 140, -1, sizeof(::HaWC::CmdMsg_RectangleProperty)},
  { 157, -1, sizeof(::HaWC::CmdMsg_RectangleProperties)},
  { 163, -1, sizeof(::HaWC::CmdMsg_ImageProperty)},
  { 178, -1, sizeof(::HaWC::CmdMsg_ImageProperties)},
  { 184, -1, sizeof(::HaWC::CmdMsg_FileListProperty)},
  { 191, -1, sizeof(::HaWC::CmdMsg_FileListProperties)},
  { 197, -1, sizeof(::HaWC::CmdMsg_ToolBarProperty)},
  { 217, -1, sizeof(::HaWC::CmdMsg_ListProperty)},
  { 224, -1, sizeof(::HaWC::CmdMsg_ListProperties)},
  { 230, -1, sizeof(::HaWC::CmdMsg_ToolBarProperties)},
  { 236, -1, sizeof(::HaWC::CmdMsg_MenuProperty)},
  { 253, -1, sizeof(::HaWC::CmdMsg_MenuProperties)},
  { 259, -1, sizeof(::HaWC::CmdMsg_LabelProperty)},
  { 278, -1, sizeof(::HaWC::CmdMsg_LabelProperties)},
  { 284, -1, sizeof(::HaWC::CmdMsg_Component)},
  { 300, -1, sizeof(::HaWC::CmdMsg_ComponentList)},
  { 306, -1, sizeof(::HaWC::CmdMsg_OverlayCmd)},
  { 315, -1, sizeof(::HaWC::CmdMsg_SetFeedSourceCmd)},
  { 325, -1, sizeof(::HaWC::CmdMsg_SetViewFeedCmd)},
  { 332, -1, sizeof(::HaWC::CmdMsg_SetViewWindowCmd)},
  { 345, -1, sizeof(::HaWC::CmdMsg_SetDisplayCfgCmd)},
  { 357, -1, sizeof(::HaWC::CmdMsg_GetDisplayCfgCmd)},
  { 366, -1, sizeof(::HaWC::CmdMsg_SaveDefaultDisplayCmd)},
  { 372, -1, sizeof(::HaWC::CmdMsg_SaveDisplayToFileCmd)},
  { 379, -1, sizeof(::HaWC::CmdMsg_LoadDisplayFromFileCmd)},
  { 386, -1, sizeof(::HaWC::CmdMsg_SaveOverlayToFileCmd)},
  { 395, -1, sizeof(::HaWC::CmdMsg_LoadOverlayFromFileCmd)},
  { 404, -1, sizeof(::HaWC::CmdMsg_LoadFontsCmd)},
  { 413, -1, sizeof(::HaWC::CmdMsg_RestoreFactoryDisplayCmd)},
  { 418, -1, sizeof(::HaWC::CmdMsg_DisplayCmd)},
  { 433, -1, sizeof(::HaWC::CmdMsg_IO_Cmd)},
  { 438, -1, sizeof(::HaWC::CmdMsg)},
  { 448, -1, sizeof(::HaWC::RspMsg_ResetEvt)},
  { 454, -1, sizeof(::HaWC::RspMsg_SaveConfigRsp)},
  { 461, -1, sizeof(::HaWC::RspMsg_LoadConfigRsp)},
  { 468, -1, sizeof(::HaWC::RspMsg_ParamDetails)},
  { 485, -1, sizeof(::HaWC::RspMsg_ParamsRsp)},
  { 494, -1, sizeof(::HaWC::RspMsg_ParamCfgn)},
  { 508, -1, sizeof(::HaWC::RspMsg_ParamsCfgnRsp)},
  { 517, -1, sizeof(::HaWC::RspMsg_FileHashRsp)},
  { 525, -1, sizeof(::HaWC::RspMsg_AppManagerRsp)},
  { 537, -1, sizeof(::HaWC::RspMsg_FeedSourceRsp)},
  { 547, -1, sizeof(::HaWC::RspMsg_OverlayCreateRsp)},
  { 552, -1, sizeof(::HaWC::RspMsg_OverlayUpdateRsp)},
  { 557, -1, sizeof(::HaWC::RspMsg_OverlayRsp)},
  { 566, -1, sizeof(::HaWC::RspMsg_ViewFeedRsp)},
  { 573, -1, sizeof(::HaWC::RspMsg_ViewWindowRsp)},
  { 586, -1, sizeof(::HaWC::RspMsg_DisplayCfgRsp)},
  { 598, -1, sizeof(::HaWC::RspMsg_SaveDisplayRsp)},
  { 605, -1, sizeof(::HaWC::RspMsg_LoadDisplayRsp)},
  { 612, -1, sizeof(::HaWC::RspMsg_LoadFontsRsp)},
  { 620, -1, sizeof(::HaWC::RspMsg_SaveOverlayToFileRsp)},
  { 627, -1, sizeof(::HaWC::RspMsg_LoadOverlayFromFileRsp)},
  { 634, -1, sizeof(::HaWC::RspMsg_QosBcast)},
  { 645, -1, sizeof(::HaWC::RspMsg_DisplayRsp)},
  { 658, -1, sizeof(::HaWC::RspMsg_IO_Bcast)},
  { 672, -1, sizeof(::HaWC::RspMsg_IO_Rsp)},
  { 679, -1, sizeof(::HaWC::RspMsg)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_CmdMsg_CloseCmd_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_CmdMsg_SaveDefaultConfigCmd_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_CmdMsg_SaveConfigToFileCmd_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_CmdMsg_LoadConfigFromFileCmd_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_CmdMsg_RestoreFactoryConfigCmd_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_CmdMsg_ParamSet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_CmdMsg_SetParamsCmd_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_CmdMsg_ParamLoc_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_CmdMsg_GetParamsCmd_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_CmdMsg_GetParamsCfgnCmd_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_CmdMsg_GetFileHashCmd_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_CmdMsg_AppManagerCmd_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_CmdMsg_LineProperty_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_CmdMsg_LineProperties_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_CmdMsg_CircleProperty_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_CmdMsg_CircleProperties_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_CmdMsg_RectangleProperty_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_CmdMsg_RectangleProperties_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_CmdMsg_ImageProperty_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_CmdMsg_ImageProperties_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_CmdMsg_FileListProperty_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_CmdMsg_FileListProperties_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_CmdMsg_ToolBarProperty_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_CmdMsg_ListProperty_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_CmdMsg_ListProperties_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_CmdMsg_ToolBarProperties_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_CmdMsg_MenuProperty_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_CmdMsg_MenuProperties_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_CmdMsg_LabelProperty_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_CmdMsg_LabelProperties_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_CmdMsg_Component_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_CmdMsg_ComponentList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_CmdMsg_OverlayCmd_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_CmdMsg_SetFeedSourceCmd_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_CmdMsg_SetViewFeedCmd_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_CmdMsg_SetViewWindowCmd_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_CmdMsg_SetDisplayCfgCmd_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_CmdMsg_GetDisplayCfgCmd_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_CmdMsg_SaveDefaultDisplayCmd_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_CmdMsg_SaveDisplayToFileCmd_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_CmdMsg_LoadDisplayFromFileCmd_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_CmdMsg_SaveOverlayToFileCmd_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_CmdMsg_LoadOverlayFromFileCmd_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_CmdMsg_LoadFontsCmd_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_CmdMsg_RestoreFactoryDisplayCmd_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_CmdMsg_DisplayCmd_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_CmdMsg_IO_Cmd_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_CmdMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_RspMsg_ResetEvt_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_RspMsg_SaveConfigRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_RspMsg_LoadConfigRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_RspMsg_ParamDetails_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_RspMsg_ParamsRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_RspMsg_ParamCfgn_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_RspMsg_ParamsCfgnRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_RspMsg_FileHashRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_RspMsg_AppManagerRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_RspMsg_FeedSourceRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_RspMsg_OverlayCreateRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_RspMsg_OverlayUpdateRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_RspMsg_OverlayRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_RspMsg_ViewFeedRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_RspMsg_ViewWindowRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_RspMsg_DisplayCfgRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_RspMsg_SaveDisplayRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_RspMsg_LoadDisplayRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_RspMsg_LoadFontsRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_RspMsg_SaveOverlayToFileRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_RspMsg_LoadOverlayFromFileRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_RspMsg_QosBcast_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_RspMsg_DisplayRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_RspMsg_IO_Bcast_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_RspMsg_IO_Rsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HaWC::_RspMsg_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "HaWC.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 74);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\nHaWC.proto\022\004HaWC\"\3775\n\006CmdMsg\022\016\n\006seqNum\030"
      "\001 \001(\r\022,\n\006appCmd\030\004 \001(\0132\032.HaWC.CmdMsg.AppM"
      "anagerCmdH\000\022-\n\ndisplayCmd\030\005 \001(\0132\027.HaWC.C"
      "mdMsg.DisplayCmdH\000\022$\n\005ioCmd\030\006 \001(\0132\023.HaWC"
      ".CmdMsg.IO_CmdH\000\0329\n\010CloseCmd\022-\n\013closeOpt"
      "ion\030\001 \001(\0162\030.HaWC.CmdMsg.CloseAction\032,\n\024S"
      "aveDefaultConfigCmd\022\024\n\014reportErrStr\030\001 \001("
      "\010\032=\n\023SaveConfigToFileCmd\022\020\n\010fileName\030\001 \001"
      "(\t\022\024\n\014reportErrStr\030\002 \001(\010\032\?\n\025LoadConfigFr"
      "omFileCmd\022\020\n\010fileName\030\001 \001(\t\022\024\n\014reportErr"
      "Str\030\002 \001(\010\032\031\n\027RestoreFactoryConfigCmd\032\247\001\n"
      "\010ParamSet\022\017\n\007paramID\030\001 \001(\t\022\016\n\006offset\030\002 \001"
      "(\r\022\021\n\007boolVal\030\n \001(\010H\000\022\021\n\007uintVal\030\013 \001(\rH\000"
      "\022\020\n\006intVal\030\014 \001(\021H\000\022\023\n\tdoubleVal\030\r \001(\001H\000\022"
      "\020\n\006strVal\030\016 \001(\tH\000\022\023\n\tdataBytes\030\017 \001(\rH\000B\006"
      "\n\004Data\032\203\001\n\014SetParamsCmd\022\035\n\006target\030\001 \001(\0162"
      "\r.HaWC.Targets\022%\n\006params\030\002 \003(\0132\025.HaWC.Cm"
      "dMsg.ParamSet\022\027\n\017reportParamVals\030\003 \001(\010\022\024"
      "\n\014reportErrStr\030\004 \001(\010\032&\n\010ParamLoc\022\n\n\002id\030\001"
      " \001(\t\022\016\n\006offset\030\002 \001(\r\032m\n\014GetParamsCmd\022\035\n\006"
      "target\030\001 \001(\0162\r.HaWC.Targets\022(\n\tlocations"
      "\030\002 \003(\0132\025.HaWC.CmdMsg.ParamLoc\022\024\n\014reportE"
      "rrStr\030\003 \001(\010\032t\n\020GetParamsCfgnCmd\022\035\n\006targe"
      "t\030\001 \001(\0162\r.HaWC.Targets\022\020\n\010paramIDs\030\002 \003(\t"
      "\022\031\n\021reportDescription\030\003 \001(\010\022\024\n\014reportErr"
      "Str\030\004 \001(\010\0328\n\016GetFileHashCmd\022\020\n\010fileName\030"
      "\001 \001(\t\022\024\n\014reportErrStr\030\002 \001(\010\032\224\004\n\rAppManag"
      "erCmd\022&\n\005close\030\002 \001(\0132\025.HaWC.CmdMsg.Close"
      "CmdH\000\022>\n\021saveDefaultConfig\030\005 \001(\0132!.HaWC."
      "CmdMsg.SaveDefaultConfigCmdH\000\022<\n\020saveCon"
      "figToFile\030\006 \001(\0132 .HaWC.CmdMsg.SaveConfig"
      "ToFileCmdH\000\022@\n\022loadConfigFromFile\030\007 \001(\0132"
      "\".HaWC.CmdMsg.LoadConfigFromFileCmdH\000\022D\n"
      "\024restoreFactoryConfig\030\010 \001(\0132$.HaWC.CmdMs"
      "g.RestoreFactoryConfigCmdH\000\022.\n\tsetParams"
      "\030\t \001(\0132\031.HaWC.CmdMsg.SetParamsCmdH\000\022.\n\tg"
      "etParams\030\n \001(\0132\031.HaWC.CmdMsg.GetParamsCm"
      "dH\000\0226\n\rgetParamsCfgn\030\013 \001(\0132\035.HaWC.CmdMsg"
      ".GetParamsCfgnCmdH\000\0222\n\013getFileHash\030\017 \001(\013"
      "2\033.HaWC.CmdMsg.GetFileHashCmdH\000B\t\n\007comma"
      "nd\032\242\001\n\014LineProperty\022\021\n\007visible\030\001 \001(\010H\000\022\016"
      "\n\004pt1x\030\002 \001(\002H\000\022\016\n\004pt1y\030\003 \001(\002H\000\022\016\n\004pt2x\030\004"
      " \001(\002H\000\022\016\n\004pt2y\030\005 \001(\002H\000\022\017\n\005width\030\006 \001(\002H\000\022"
      "\017\n\005color\030\007 \001(\tH\000\022\021\n\007opacity\030\010 \001(\002H\000B\n\n\010p"
      "roperty\032\?\n\016LineProperties\022-\n\nproperties\030"
      "\002 \003(\0132\031.HaWC.CmdMsg.LineProperty\032\257\001\n\016Cir"
      "cleProperty\022\021\n\007visible\030\001 \001(\010H\000\022\013\n\001x\030\002 \001("
      "\002H\000\022\013\n\001y\030\003 \001(\002H\000\022\020\n\006radius\030\004 \001(\002H\000\022\017\n\005co"
      "lor\030\005 \001(\tH\000\022\026\n\014border_width\030\006 \001(\002H\000\022\026\n\014b"
      "order_color\030\007 \001(\tH\000\022\021\n\007opacity\030\010 \001(\002H\000B\n"
      "\n\010property\032C\n\020CircleProperties\022/\n\nproper"
      "ties\030\002 \003(\0132\033.HaWC.CmdMsg.CircleProperty\032"
      "\351\001\n\021RectangleProperty\022\021\n\007visible\030\001 \001(\010H\000"
      "\022\013\n\001x\030\002 \001(\002H\000\022\013\n\001y\030\003 \001(\002H\000\022\017\n\005width\030\004 \001("
      "\002H\000\022\020\n\006height\030\005 \001(\002H\000\022\017\n\005color\030\006 \001(\tH\000\022\026"
      "\n\014border_width\030\007 \001(\002H\000\022\026\n\014border_color\030\010"
      " \001(\tH\000\022\020\n\006radius\030\t \001(\002H\000\022\021\n\007opacity\030\n \001("
      "\002H\000\022\022\n\010rotation\030\013 \001(\002H\000B\n\n\010property\032I\n\023R"
      "ectangleProperties\0222\n\nproperties\030\002 \003(\0132\036"
      ".HaWC.CmdMsg.RectangleProperty\032\317\001\n\rImage"
      "Property\022\021\n\007visible\030\001 \001(\010H\000\022\013\n\001x\030\002 \001(\002H\000"
      "\022\013\n\001y\030\003 \001(\002H\000\022\017\n\005width\030\004 \001(\002H\000\022\020\n\006height"
      "\030\005 \001(\002H\000\022\020\n\006source\030\006 \001(\tH\000\022)\n\010fillMode\030\007"
      " \001(\0162\025.HaWC.CmdMsg.FillModeH\000\022\021\n\007opacity"
      "\030\010 \001(\002H\000\022\022\n\010rotation\030\t \001(\002H\000B\n\n\010property"
      "\032A\n\017ImageProperties\022.\n\nproperties\030\002 \003(\0132"
      "\032.HaWC.CmdMsg.ImageProperty\032.\n\020FileListP"
      "roperty\022\016\n\004item\030\001 \001(\tH\000B\n\n\010property\032G\n\022F"
      "ileListProperties\0221\n\nproperties\030\002 \003(\0132\035."
      "HaWC.CmdMsg.FileListProperty\032\304\002\n\017ToolBar"
      "Property\022\021\n\007visible\030\001 \001(\010H\000\022\013\n\001x\030\002 \001(\002H\000"
      "\022\013\n\001y\030\003 \001(\002H\000\022\017\n\005width\030\004 \001(\002H\000\022\020\n\006height"
      "\030\005 \001(\002H\000\022\024\n\noptions___\030\006 \001(\tH\000\022\026\n\014iconsS"
      "pacing\030\007 \001(\rH\000\022\021\n\007margins\030\010 \001(\rH\000\022\024\n\nisV"
      "ertical\030\t \001(\010H\000\022\023\n\tbackColor\030\n \001(\tH\000\022\022\n\010"
      "selected\030\013 \001(\005H\000\022\027\n\rselectedColor\030\014 \001(\tH"
      "\000\022\035\n\023selectedBorderColor\030\r \001(\tH\000\022\035\n\023sele"
      "ctedBorderWidth\030\016 \001(\005H\000B\n\n\010property\032*\n\014L"
      "istProperty\022\016\n\004item\030\001 \001(\tH\000B\n\n\010property\032"
      "\?\n\016ListProperties\022-\n\nproperties\030\002 \003(\0132\031."
      "HaWC.CmdMsg.ListProperty\032E\n\021ToolBarPrope"
      "rties\0220\n\nproperties\030\002 \003(\0132\034.HaWC.CmdMsg."
      "ToolBarProperty\032\364\001\n\014MenuProperty\022\021\n\007visi"
      "ble\030\001 \001(\010H\000\022\013\n\001x\030\002 \001(\002H\000\022\013\n\001y\030\003 \001(\002H\000\022\017\n"
      "\005width\030\004 \001(\002H\000\022\024\n\nitemHeight\030\005 \001(\002H\000\022\024\n\n"
      "options___\030\006 \001(\tH\000\022\027\n\rhighlightText\030\007 \001("
      "\010H\000\022\023\n\tbackColor\030\010 \001(\tH\000\022\023\n\ttextColor\030\t "
      "\001(\tH\000\022\027\n\rselectedColor\030\n \001(\tH\000\022\022\n\010select"
      "ed\030\013 \001(\005H\000B\n\n\010property\032\?\n\016MenuProperties"
      "\022-\n\nproperties\030\002 \003(\0132\031.HaWC.CmdMsg.MenuP"
      "roperty\032\276\002\n\rLabelProperty\022\021\n\007visible\030\001 \001"
      "(\010H\000\022\013\n\001x\030\002 \001(\002H\000\022\013\n\001y\030\003 \001(\002H\000\022\017\n\005width\030"
      "\004 \001(\002H\000\022\020\n\006height\030\005 \001(\002H\000\022\016\n\004text\030\006 \001(\tH"
      "\000\022\025\n\013font_family\030\007 \001(\tH\000\022\030\n\016font_pointSi"
      "ze\030\010 \001(\002H\000\022\017\n\005color\030\t \001(\tH\000\022\021\n\007opacity\030\n"
      " \001(\002H\000\022\022\n\010rotation\030\013 \001(\002H\000\022)\n\010wrapMode\030\014"
      " \001(\0162\025.HaWC.CmdMsg.WrapModeH\000\022-\n\ntextFor"
      "mat\030\r \001(\0162\027.HaWC.CmdMsg.TextFormatH\000B\n\n\010"
      "property\032A\n\017LabelProperties\022.\n\npropertie"
      "s\030\002 \003(\0132\032.HaWC.CmdMsg.LabelProperty\032\341\003\n\t"
      "Component\022\022\n\nobjectName\030\001 \001(\t\022+\n\004line\030\002 "
      "\001(\0132\033.HaWC.CmdMsg.LinePropertiesH\000\022/\n\006ci"
      "rcle\030\003 \001(\0132\035.HaWC.CmdMsg.CirclePropertie"
      "sH\000\0225\n\trectangle\030\004 \001(\0132 .HaWC.CmdMsg.Rec"
      "tanglePropertiesH\000\022-\n\005image\030\005 \001(\0132\034.HaWC"
      ".CmdMsg.ImagePropertiesH\000\0223\n\010fileList\030\006 "
      "\001(\0132\037.HaWC.CmdMsg.FileListPropertiesH\000\0221"
      "\n\007toolbar\030\007 \001(\0132\036.HaWC.CmdMsg.ToolBarPro"
      "pertiesH\000\022+\n\004list\030\010 \001(\0132\033.HaWC.CmdMsg.Li"
      "stPropertiesH\000\022+\n\004menu\030\t \001(\0132\033.HaWC.CmdM"
      "sg.MenuPropertiesH\000\022,\n\004text\030\n \001(\0132\034.HaWC"
      ".CmdMsg.LabelPropertiesH\000B\014\n\nproperties\032"
      ";\n\rComponentList\022*\n\ncomponents\030\001 \003(\0132\026.H"
      "aWC.CmdMsg.Component\032\236\001\n\nOverlayCmd\022\022\n\nv"
      "iewPortID\030\001 \001(\r\0222\n\014createScreen\030\005 \001(\0132\032."
      "HaWC.CmdMsg.ComponentListH\000\0221\n\013updateSre"
      "en\030\006 \001(\0132\032.HaWC.CmdMsg.ComponentListH\000B\t"
      "\n\007commandJ\004\010\007\020\010J\004\010\010\020\t\032{\n\020SetFeedSourceCm"
      "d\022\016\n\006feedID\030\001 \001(\005\022\034\n\004type\030\002 \001(\0162\016.HaWC.F"
      "eedType\022\021\n\tsourceStr\030\003 \001(\t\022\022\n\nqosTimeout"
      "\030\004 \001(\r\022\022\n\nqosRefresh\030\005 \001(\r\0324\n\016SetViewFee"
      "dCmd\022\022\n\nviewPortID\030\001 \001(\r\022\016\n\006feedID\030\002 \001(\005"
      "\032\214\001\n\020SetViewWindowCmd\022\022\n\nviewPortID\030\001 \001("
      "\r\022\t\n\001x\030\002 \001(\005\022\t\n\001y\030\003 \001(\005\022\t\n\001z\030\004 \001(\005\022\r\n\005wi"
      "dth\030\005 \001(\005\022\016\n\006height\030\006 \001(\005\022\r\n\005alpha\030\007 \001(\001"
      "\022\025\n\renableOverlay\030\010 \001(\010\032\277\002\n\020SetDisplayCf"
      "gCmd\022\027\n\017reportParamVals\030\001 \001(\010\022\024\n\014reportE"
      "rrStr\030\002 \001(\010\022/\n\010feedSrcs\030\005 \003(\0132\035.HaWC.Cmd"
      "Msg.SetFeedSourceCmd\022,\n\013mainOverlay\030\007 \001("
      "\0132\027.HaWC.CmdMsg.OverlayCmd\022.\n\tviewFeeds\030"
      "\t \003(\0132\033.HaWC.CmdMsg.SetViewFeedCmd\0222\n\013vi"
      "ewWindows\030\n \003(\0132\035.HaWC.CmdMsg.SetViewWin"
      "dowCmd\022-\n\014viewOverlays\030\014 \003(\0132\027.HaWC.CmdM"
      "sg.OverlayCmdJ\004\010\006\020\007J\004\010\013\020\014\032\200\001\n\020GetDisplay"
      "CfgCmd\022\024\n\014reportErrStr\030\002 \001(\010\022\022\n\nfeedSrcI"
      "Ds\030\005 \003(\005\022\023\n\013viewFeedIDs\030\t \003(\r\022\025\n\rviewWin"
      "dowIDs\030\n \003(\rJ\004\010\006\020\007J\004\010\007\020\010J\004\010\013\020\014J\004\010\014\020\r\032-\n\025"
      "SaveDefaultDisplayCmd\022\024\n\014reportErrStr\030\001 "
      "\001(\010\032>\n\024SaveDisplayToFileCmd\022\020\n\010fileName\030"
      "\001 \001(\t\022\024\n\014reportErrStr\030\002 \001(\010\032@\n\026LoadDispl"
      "ayFromFileCmd\022\020\n\010fileName\030\001 \001(\t\022\024\n\014repor"
      "tErrStr\030\002 \001(\010\032g\n\024SaveOverlayToFileCmd\022\023\n"
      "\013mainOverlay\030\001 \001(\010\022\022\n\nviewPortID\030\002 \001(\r\022\020"
      "\n\010filename\030\003 \001(\t\022\024\n\014reportErrStr\030\005 \001(\010\032i"
      "\n\026LoadOverlayFromFileCmd\022\023\n\013mainOverlay\030"
      "\001 \001(\010\022\022\n\nviewPortID\030\002 \001(\r\022\020\n\010filename\030\003 "
      "\001(\t\022\024\n\014reportErrStr\030\005 \001(\010\032h\n\014LoadFontsCm"
      "d\022\027\n\017reportParamVals\030\001 \001(\010\022\024\n\014reportErrS"
      "tr\030\002 \001(\010\022\026\n\016overwriteFiles\030\003 \001(\010\022\021\n\tfont"
      "Files\030\004 \003(\t\032\032\n\030RestoreFactoryDisplayCmd\032"
      "\321\004\n\nDisplayCmd\0226\n\rsetDisplayCfg\030\001 \001(\0132\035."
      "HaWC.CmdMsg.SetDisplayCfgCmdH\000\0226\n\rgetDis"
      "playCfg\030\002 \001(\0132\035.HaWC.CmdMsg.GetDisplayCf"
      "gCmdH\000\022C\n\025saveDefaultDisplayCmd\030\005 \001(\0132\"."
      "HaWC.CmdMsg.SaveDefaultDisplayCmdH\000\022;\n\016s"
      "aveDisplayCmd\030\006 \001(\0132!.HaWC.CmdMsg.SaveDi"
      "splayToFileCmdH\000\022=\n\016loadDisplayCmd\030\007 \001(\013"
      "2#.HaWC.CmdMsg.LoadDisplayFromFileCmdH\000\022"
      "J\n\031restoreFactoryDisplayCfgn\030\010 \001(\0132%.HaW"
      "C.CmdMsg.RestoreFactoryDisplayCmdH\000\0221\n\014l"
      "oadFontsCmd\030\n \001(\0132\031.HaWC.CmdMsg.LoadFont"
      "sCmdH\000\022A\n\024saveOverlayToFileCmd\030\017 \001(\0132!.H"
      "aWC.CmdMsg.SaveOverlayToFileCmdH\000\022E\n\026loa"
      "dOverlayFromFileCmd\030\020 \001(\0132#.HaWC.CmdMsg."
      "LoadOverlayFromFileCmdH\000B\t\n\007command\032\010\n\006I"
      "O_Cmd\"J\n\013CloseAction\022\016\n\nRestartApp\020\000\022\014\n\010"
      "CloseApp\020\001\022\r\n\tRestartOS\020\002\022\016\n\nShutdownOS\020"
      "\003\"s\n\010FillMode\022\013\n\007Stretch\020\000\022\022\n\016PreserveAs"
      "pect\020\001\022\026\n\022PreserveAspectCrop\020\002\022\010\n\004Tile\020\003"
      "\022\014\n\010TileVert\020\004\022\r\n\tTileHoriz\020\005\022\007\n\003Pad\020\006\"@"
      "\n\010WrapMode\022\n\n\006NoWrap\020\000\022\014\n\010WordWrap\020\001\022\020\n\014"
      "WrapAnywhere\020\002\022\010\n\004Wrap\020\003\"7\n\nTextFormat\022\014"
      "\n\010AutoText\020\000\022\r\n\tPlainText\020\001\022\014\n\010RichText\020"
      "\002B\t\n\007command\"\255\032\n\006RspMsg\022\016\n\006seqNum\030\001 \001(\005\022"
      ",\n\006appRsp\030\004 \001(\0132\032.HaWC.RspMsg.AppManager"
      "RspH\000\022-\n\ndisplayRsp\030\005 \001(\0132\027.HaWC.RspMsg."
      "DisplayRspH\000\022$\n\005ioRsp\030\006 \001(\0132\023.HaWC.RspMs"
      "g.IO_RspH\000\032\035\n\010ResetEvt\022\021\n\tsessionID\030\001 \001("
      "\r\032/\n\rSaveConfigRsp\022\016\n\006result\030\001 \001(\010\022\016\n\006er"
      "rStr\030\002 \001(\t\032/\n\rLoadConfigRsp\022\016\n\006result\030\001 "
      "\001(\010\022\016\n\006errStr\030\002 \001(\t\032\340\001\n\014ParamDetails\022\017\n\007"
      "paramID\030\001 \001(\t\022\016\n\006offset\030\002 \001(\r\022\017\n\007updated"
      "\030\003 \001(\010\022\r\n\005saved\030\004 \001(\010\022\023\n\013takenAffect\030\005 \001"
      "(\010\022\021\n\007boolVal\030\n \001(\010H\000\022\021\n\007uintVal\030\013 \001(\rH\000"
      "\022\020\n\006intVal\030\014 \001(\021H\000\022\023\n\tdoubleVal\030\r \001(\001H\000\022"
      "\020\n\006strVal\030\016 \001(\tH\000\022\023\n\tdataBytes\030\017 \001(\rH\000B\006"
      "\n\004Data\032u\n\tParamsRsp\022\035\n\006target\030\001 \001(\0162\r.Ha"
      "WC.Targets\022)\n\006params\030\002 \003(\0132\031.HaWC.RspMsg"
      ".ParamDetails\022\016\n\006result\030\003 \001(\010\022\016\n\006errStr\030"
      "\004 \001(\t\032\315\001\n\tParamCfgn\022\017\n\007paramID\030\001 \001(\t\022(\n\010"
      "dataType\030\002 \001(\0162\026.HaWC.RspMsg.DataTypes\022\r"
      "\n\005count\030\003 \001(\r\022\024\n\014appResetReqd\030\004 \001(\010\022\023\n\013o"
      "sResetReqd\030\005 \001(\010\022\017\n\007readble\030\006 \001(\010\022\021\n\twri"
      "teable\030\007 \001(\010\022\022\n\nscriptable\030\010 \001(\010\022\023\n\013desc"
      "ription\030\t \001(\t\032v\n\rParamsCfgnRsp\022\035\n\006target"
      "\030\001 \001(\0162\r.HaWC.Targets\022&\n\006params\030\002 \003(\0132\026."
      "HaWC.RspMsg.ParamCfgn\022\016\n\006result\030\003 \001(\010\022\016\n"
      "\006errStr\030\004 \001(\t\032\?\n\013FileHashRsp\022\020\n\010fileHash"
      "\030\001 \001(\014\022\016\n\006result\030\002 \001(\010\022\016\n\006errStr\030\003 \001(\t\032\274"
      "\002\n\rAppManagerRsp\0220\n\nsaveConfig\030\005 \001(\0132\032.H"
      "aWC.RspMsg.SaveConfigRspH\000\0223\n\rloadConfig"
      "Rsp\030\007 \001(\0132\032.HaWC.RspMsg.LoadConfigRspH\000\022"
      "(\n\006params\030\t \001(\0132\026.HaWC.RspMsg.ParamsRspH"
      "\000\0223\n\rgetParamsCfgn\030\013 \001(\0132\032.HaWC.RspMsg.P"
      "aramsCfgnRspH\000\022,\n\010fileHash\030\017 \001(\0132\030.HaWC."
      "RspMsg.FileHashRspH\000\022+\n\nresetEvent\030\031 \001(\013"
      "2\025.HaWC.RspMsg.ResetEvtH\000B\n\n\010response\032\202\001"
      "\n\rFeedSourceRsp\022\016\n\006feedID\030\001 \001(\005\022\034\n\004type\030"
      "\002 \001(\0162\016.HaWC.FeedType\022\021\n\tsourceStr\030\003 \001(\t"
      "\022\027\n\017qosFrameTimeout\030\004 \001(\r\022\027\n\017qosFrameRef"
      "resh\030\005 \001(\r\032\022\n\020OverlayCreateRsp\032\022\n\020Overla"
      "yUpdateRsp\032\245\001\n\nOverlayRsp\022\022\n\nviewPortID\030"
      "\001 \001(\r\0225\n\014createScreen\030\005 \001(\0132\035.HaWC.RspMs"
      "g.OverlayCreateRspH\000\0224\n\013updateSreen\030\006 \001("
      "\0132\035.HaWC.RspMsg.OverlayUpdateRspH\000B\n\n\010re"
      "sponseJ\004\010\007\020\010J\004\010\010\020\t\0321\n\013ViewFeedRsp\022\022\n\nvie"
      "wPortID\030\001 \001(\r\022\016\n\006feedID\030\002 \001(\005\032\211\001\n\rViewWi"
      "ndowRsp\022\022\n\nviewPortID\030\001 \001(\r\022\t\n\001x\030\002 \001(\005\022\t"
      "\n\001y\030\003 \001(\005\022\t\n\001z\030\004 \001(\005\022\r\n\005width\030\005 \001(\005\022\016\n\006h"
      "eight\030\006 \001(\005\022\r\n\005alpha\030\007 \001(\001\022\025\n\renableOver"
      "lay\030\010 \001(\010\032\252\002\n\rDisplayCfgRsp\022\016\n\006result\030\001 "
      "\001(\010\022\016\n\006errStr\030\002 \001(\t\022,\n\010feedSrcs\030\005 \003(\0132\032."
      "HaWC.RspMsg.FeedSourceRsp\022/\n\016mainOverlay"
      "Set\030\007 \001(\0132\027.HaWC.RspMsg.OverlayRsp\022+\n\tvi"
      "ewFeeds\030\t \003(\0132\030.HaWC.RspMsg.ViewFeedRsp\022"
      "/\n\013viewWindows\030\n \003(\0132\032.HaWC.RspMsg.ViewW"
      "indowRsp\0220\n\017viewOverlaysSet\030\014 \003(\0132\027.HaWC"
      ".RspMsg.OverlayRspJ\004\010\006\020\007J\004\010\013\020\014\0320\n\016SaveDi"
      "splayRsp\022\016\n\006result\030\001 \001(\010\022\016\n\006errStr\030\002 \001(\t"
      "\0320\n\016LoadDisplayRsp\022\016\n\006result\030\001 \001(\010\022\016\n\006er"
      "rStr\030\002 \001(\t\032A\n\014LoadFontsRsp\022\016\n\006result\030\001 \001"
      "(\010\022\016\n\006errStr\030\002 \001(\t\022\021\n\tfontFiles\030\004 \003(\t\0326\n"
      "\024SaveOverlayToFileRsp\022\016\n\006result\030\001 \001(\010\022\016\n"
      "\006errStr\030\002 \001(\t\0328\n\026LoadOverlayFromFileRsp\022"
      "\016\n\006result\030\001 \001(\010\022\016\n\006errStr\030\002 \001(\t\032\234\001\n\010QosB"
      "cast\022\020\n\010feedName\030\001 \001(\t\022 \n\010feedType\030\002 \001(\016"
      "2\016.HaWC.FeedType\022\021\n\tsourceStr\030\003 \001(\t\022!\n\010q"
      "osState\030\004 \001(\0162\017.HaWC.QosStates\022\016\n\006repeat"
      "\030\005 \001(\010\022\026\n\016timeSinceFrame\030\006 \001(\005\032\243\003\n\nDispl"
      "ayRsp\0223\n\rdisplayCfgRsp\030\001 \001(\0132\032.HaWC.RspM"
      "sg.DisplayCfgRspH\000\0225\n\016saveDisplayRsp\030\005 \001"
      "(\0132\033.HaWC.RspMsg.SaveDisplayRspH\000\0225\n\016loa"
      "dDisplayRsp\030\007 \001(\0132\033.HaWC.RspMsg.LoadDisp"
      "layRspH\000\0221\n\014loadFontsRsp\030\n \001(\0132\031.HaWC.Rs"
      "pMsg.LoadFontsRspH\000\022A\n\024saveOverlayToFile"
      "Rsp\030\017 \001(\0132!.HaWC.RspMsg.SaveOverlayToFil"
      "eRspH\000\022E\n\026loadOverlayFromFileRsp\030\020 \001(\0132#"
      ".HaWC.RspMsg.LoadOverlayFromFileRspH\000\022)\n"
      "\010qosBcast\030\024 \001(\0132\025.HaWC.RspMsg.QosBcastH\000"
      "B\n\n\010response\032\243\001\n\010IO_Bcast\022\017\n\007newData\030\001 \001"
      "(\010\022\021\n\tsessionID\030\002 \001(\r\022\014\n\004btns\030\005 \001(\r\022\022\n\nl"
      "eftRocker\030\006 \001(\021\022\r\n\005leftX\030\007 \001(\021\022\r\n\005leftY\030"
      "\010 \001(\021\022\023\n\013rightRocker\030\t \001(\021\022\016\n\006rightX\030\n \001"
      "(\021\022\016\n\006rightY\030\013 \001(\021\032>\n\006IO_Rsp\022(\n\007ioBcast\030"
      "\031 \001(\0132\025.HaWC.RspMsg.IO_BcastH\000B\n\n\010respon"
      "se\"\\\n\tDataTypes\022\t\n\005Bytes\020\000\022\t\n\005Bools\020\001\022\t\n"
      "\005UInts\020\002\022\010\n\004Ints\020\003\022\013\n\007Doubles\020\004\022\n\n\006Strin"
      "g\020\005\022\013\n\007Unknown\020dB\n\n\010response*\207\001\n\007Targets"
      "\022\007\n\003App\020\000\022\013\n\007Display\020\001\022\006\n\002IO\020\002\022\016\n\nMsgHan"
      "dler\020\003\022\024\n\020Serial_RS422_485\020\004\022\016\n\nSerial_U"
      "SB\020\005\022\007\n\003CAN\020\006\022\014\n\010Ethernet\020\007\022\021\n\rUnknownTa"
      "rget\020d*o\n\010FeedType\022\025\n\021UnconfigdFeedType\020"
      "\000\022\017\n\013StaticImage\020\001\022\016\n\nTestSource\020\002\022\n\n\006Ca"
      "mera\020\003\022\021\n\rH264RTPCamera\020\004\022\014\n\010H264File\020\005*"
      "K\n\006FeedID\022\r\n\tFirstFeed\020\000\022\030\n\013DefaultFeed\020"
      "\377\377\377\377\377\377\377\377\377\001\022\030\n\013UnknownFeed\020\376\377\377\377\377\377\377\377\377\001*o\n\t"
      "QosStates\022\013\n\007QosInit\020\000\022\024\n\020QosStartOfStre"
      "am\020\001\022\026\n\022QosReceivingFrames\020\002\022\023\n\017QosFrame"
      "Timeout\020\003\022\022\n\016QosEndOfStream\020\004B2\n\022com.Est"
      "erline.HaWCB\013HaWC_Protos\252\002\016Esterline.HaW"
      "Cb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 10809);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "HaWC.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_HaWC_2eproto
namespace HaWC {
const ::google::protobuf::EnumDescriptor* CmdMsg_CloseAction_descriptor() {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_HaWC_2eproto::file_level_enum_descriptors[0];
}
bool CmdMsg_CloseAction_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CmdMsg_CloseAction CmdMsg::RestartApp;
const CmdMsg_CloseAction CmdMsg::CloseApp;
const CmdMsg_CloseAction CmdMsg::RestartOS;
const CmdMsg_CloseAction CmdMsg::ShutdownOS;
const CmdMsg_CloseAction CmdMsg::CloseAction_MIN;
const CmdMsg_CloseAction CmdMsg::CloseAction_MAX;
const int CmdMsg::CloseAction_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CmdMsg_FillMode_descriptor() {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_HaWC_2eproto::file_level_enum_descriptors[1];
}
bool CmdMsg_FillMode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CmdMsg_FillMode CmdMsg::Stretch;
const CmdMsg_FillMode CmdMsg::PreserveAspect;
const CmdMsg_FillMode CmdMsg::PreserveAspectCrop;
const CmdMsg_FillMode CmdMsg::Tile;
const CmdMsg_FillMode CmdMsg::TileVert;
const CmdMsg_FillMode CmdMsg::TileHoriz;
const CmdMsg_FillMode CmdMsg::Pad;
const CmdMsg_FillMode CmdMsg::FillMode_MIN;
const CmdMsg_FillMode CmdMsg::FillMode_MAX;
const int CmdMsg::FillMode_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CmdMsg_WrapMode_descriptor() {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_HaWC_2eproto::file_level_enum_descriptors[2];
}
bool CmdMsg_WrapMode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CmdMsg_WrapMode CmdMsg::NoWrap;
const CmdMsg_WrapMode CmdMsg::WordWrap;
const CmdMsg_WrapMode CmdMsg::WrapAnywhere;
const CmdMsg_WrapMode CmdMsg::Wrap;
const CmdMsg_WrapMode CmdMsg::WrapMode_MIN;
const CmdMsg_WrapMode CmdMsg::WrapMode_MAX;
const int CmdMsg::WrapMode_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CmdMsg_TextFormat_descriptor() {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_HaWC_2eproto::file_level_enum_descriptors[3];
}
bool CmdMsg_TextFormat_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CmdMsg_TextFormat CmdMsg::AutoText;
const CmdMsg_TextFormat CmdMsg::PlainText;
const CmdMsg_TextFormat CmdMsg::RichText;
const CmdMsg_TextFormat CmdMsg::TextFormat_MIN;
const CmdMsg_TextFormat CmdMsg::TextFormat_MAX;
const int CmdMsg::TextFormat_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* RspMsg_DataTypes_descriptor() {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_HaWC_2eproto::file_level_enum_descriptors[4];
}
bool RspMsg_DataTypes_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 100:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const RspMsg_DataTypes RspMsg::Bytes;
const RspMsg_DataTypes RspMsg::Bools;
const RspMsg_DataTypes RspMsg::UInts;
const RspMsg_DataTypes RspMsg::Ints;
const RspMsg_DataTypes RspMsg::Doubles;
const RspMsg_DataTypes RspMsg::String;
const RspMsg_DataTypes RspMsg::Unknown;
const RspMsg_DataTypes RspMsg::DataTypes_MIN;
const RspMsg_DataTypes RspMsg::DataTypes_MAX;
const int RspMsg::DataTypes_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Targets_descriptor() {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_HaWC_2eproto::file_level_enum_descriptors[5];
}
bool Targets_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 100:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* FeedType_descriptor() {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_HaWC_2eproto::file_level_enum_descriptors[6];
}
bool FeedType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* FeedID_descriptor() {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_HaWC_2eproto::file_level_enum_descriptors[7];
}
bool FeedID_IsValid(int value) {
  switch (value) {
    case -2:
    case -1:
    case 0:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* QosStates_descriptor() {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_HaWC_2eproto::file_level_enum_descriptors[8];
}
bool QosStates_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void CmdMsg_CloseCmd::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CmdMsg_CloseCmd::kCloseOptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CmdMsg_CloseCmd::CmdMsg_CloseCmd()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_CloseCmd.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.CmdMsg.CloseCmd)
}
CmdMsg_CloseCmd::CmdMsg_CloseCmd(const CmdMsg_CloseCmd& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  closeoption_ = from.closeoption_;
  // @@protoc_insertion_point(copy_constructor:HaWC.CmdMsg.CloseCmd)
}

void CmdMsg_CloseCmd::SharedCtor() {
  closeoption_ = 0;
}

CmdMsg_CloseCmd::~CmdMsg_CloseCmd() {
  // @@protoc_insertion_point(destructor:HaWC.CmdMsg.CloseCmd)
  SharedDtor();
}

void CmdMsg_CloseCmd::SharedDtor() {
}

void CmdMsg_CloseCmd::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CmdMsg_CloseCmd::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CmdMsg_CloseCmd& CmdMsg_CloseCmd::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_CmdMsg_CloseCmd.base);
  return *internal_default_instance();
}


void CmdMsg_CloseCmd::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.CmdMsg.CloseCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  closeoption_ = 0;
  _internal_metadata_.Clear();
}

bool CmdMsg_CloseCmd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.CmdMsg.CloseCmd)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .HaWC.CmdMsg.CloseAction closeOption = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_closeoption(static_cast< ::HaWC::CmdMsg_CloseAction >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.CmdMsg.CloseCmd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.CmdMsg.CloseCmd)
  return false;
#undef DO_
}

void CmdMsg_CloseCmd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.CmdMsg.CloseCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .HaWC.CmdMsg.CloseAction closeOption = 1;
  if (this->closeoption() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->closeoption(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.CmdMsg.CloseCmd)
}

::google::protobuf::uint8* CmdMsg_CloseCmd::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.CmdMsg.CloseCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .HaWC.CmdMsg.CloseAction closeOption = 1;
  if (this->closeoption() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->closeoption(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.CmdMsg.CloseCmd)
  return target;
}

size_t CmdMsg_CloseCmd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.CmdMsg.CloseCmd)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .HaWC.CmdMsg.CloseAction closeOption = 1;
  if (this->closeoption() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->closeoption());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CmdMsg_CloseCmd::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.CmdMsg.CloseCmd)
  GOOGLE_DCHECK_NE(&from, this);
  const CmdMsg_CloseCmd* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CmdMsg_CloseCmd>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.CmdMsg.CloseCmd)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.CmdMsg.CloseCmd)
    MergeFrom(*source);
  }
}

void CmdMsg_CloseCmd::MergeFrom(const CmdMsg_CloseCmd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.CmdMsg.CloseCmd)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.closeoption() != 0) {
    set_closeoption(from.closeoption());
  }
}

void CmdMsg_CloseCmd::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.CmdMsg.CloseCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CmdMsg_CloseCmd::CopyFrom(const CmdMsg_CloseCmd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.CmdMsg.CloseCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CmdMsg_CloseCmd::IsInitialized() const {
  return true;
}

void CmdMsg_CloseCmd::Swap(CmdMsg_CloseCmd* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CmdMsg_CloseCmd::InternalSwap(CmdMsg_CloseCmd* other) {
  using std::swap;
  swap(closeoption_, other->closeoption_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CmdMsg_CloseCmd::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CmdMsg_SaveDefaultConfigCmd::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CmdMsg_SaveDefaultConfigCmd::kReportErrStrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CmdMsg_SaveDefaultConfigCmd::CmdMsg_SaveDefaultConfigCmd()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_SaveDefaultConfigCmd.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.CmdMsg.SaveDefaultConfigCmd)
}
CmdMsg_SaveDefaultConfigCmd::CmdMsg_SaveDefaultConfigCmd(const CmdMsg_SaveDefaultConfigCmd& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reporterrstr_ = from.reporterrstr_;
  // @@protoc_insertion_point(copy_constructor:HaWC.CmdMsg.SaveDefaultConfigCmd)
}

void CmdMsg_SaveDefaultConfigCmd::SharedCtor() {
  reporterrstr_ = false;
}

CmdMsg_SaveDefaultConfigCmd::~CmdMsg_SaveDefaultConfigCmd() {
  // @@protoc_insertion_point(destructor:HaWC.CmdMsg.SaveDefaultConfigCmd)
  SharedDtor();
}

void CmdMsg_SaveDefaultConfigCmd::SharedDtor() {
}

void CmdMsg_SaveDefaultConfigCmd::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CmdMsg_SaveDefaultConfigCmd::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CmdMsg_SaveDefaultConfigCmd& CmdMsg_SaveDefaultConfigCmd::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_CmdMsg_SaveDefaultConfigCmd.base);
  return *internal_default_instance();
}


void CmdMsg_SaveDefaultConfigCmd::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.CmdMsg.SaveDefaultConfigCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reporterrstr_ = false;
  _internal_metadata_.Clear();
}

bool CmdMsg_SaveDefaultConfigCmd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.CmdMsg.SaveDefaultConfigCmd)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool reportErrStr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &reporterrstr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.CmdMsg.SaveDefaultConfigCmd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.CmdMsg.SaveDefaultConfigCmd)
  return false;
#undef DO_
}

void CmdMsg_SaveDefaultConfigCmd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.CmdMsg.SaveDefaultConfigCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool reportErrStr = 1;
  if (this->reporterrstr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->reporterrstr(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.CmdMsg.SaveDefaultConfigCmd)
}

::google::protobuf::uint8* CmdMsg_SaveDefaultConfigCmd::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.CmdMsg.SaveDefaultConfigCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool reportErrStr = 1;
  if (this->reporterrstr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->reporterrstr(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.CmdMsg.SaveDefaultConfigCmd)
  return target;
}

size_t CmdMsg_SaveDefaultConfigCmd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.CmdMsg.SaveDefaultConfigCmd)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool reportErrStr = 1;
  if (this->reporterrstr() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CmdMsg_SaveDefaultConfigCmd::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.CmdMsg.SaveDefaultConfigCmd)
  GOOGLE_DCHECK_NE(&from, this);
  const CmdMsg_SaveDefaultConfigCmd* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CmdMsg_SaveDefaultConfigCmd>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.CmdMsg.SaveDefaultConfigCmd)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.CmdMsg.SaveDefaultConfigCmd)
    MergeFrom(*source);
  }
}

void CmdMsg_SaveDefaultConfigCmd::MergeFrom(const CmdMsg_SaveDefaultConfigCmd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.CmdMsg.SaveDefaultConfigCmd)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reporterrstr() != 0) {
    set_reporterrstr(from.reporterrstr());
  }
}

void CmdMsg_SaveDefaultConfigCmd::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.CmdMsg.SaveDefaultConfigCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CmdMsg_SaveDefaultConfigCmd::CopyFrom(const CmdMsg_SaveDefaultConfigCmd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.CmdMsg.SaveDefaultConfigCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CmdMsg_SaveDefaultConfigCmd::IsInitialized() const {
  return true;
}

void CmdMsg_SaveDefaultConfigCmd::Swap(CmdMsg_SaveDefaultConfigCmd* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CmdMsg_SaveDefaultConfigCmd::InternalSwap(CmdMsg_SaveDefaultConfigCmd* other) {
  using std::swap;
  swap(reporterrstr_, other->reporterrstr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CmdMsg_SaveDefaultConfigCmd::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CmdMsg_SaveConfigToFileCmd::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CmdMsg_SaveConfigToFileCmd::kFileNameFieldNumber;
const int CmdMsg_SaveConfigToFileCmd::kReportErrStrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CmdMsg_SaveConfigToFileCmd::CmdMsg_SaveConfigToFileCmd()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_SaveConfigToFileCmd.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.CmdMsg.SaveConfigToFileCmd)
}
CmdMsg_SaveConfigToFileCmd::CmdMsg_SaveConfigToFileCmd(const CmdMsg_SaveConfigToFileCmd& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filename().size() > 0) {
    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  reporterrstr_ = from.reporterrstr_;
  // @@protoc_insertion_point(copy_constructor:HaWC.CmdMsg.SaveConfigToFileCmd)
}

void CmdMsg_SaveConfigToFileCmd::SharedCtor() {
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reporterrstr_ = false;
}

CmdMsg_SaveConfigToFileCmd::~CmdMsg_SaveConfigToFileCmd() {
  // @@protoc_insertion_point(destructor:HaWC.CmdMsg.SaveConfigToFileCmd)
  SharedDtor();
}

void CmdMsg_SaveConfigToFileCmd::SharedDtor() {
  filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CmdMsg_SaveConfigToFileCmd::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CmdMsg_SaveConfigToFileCmd::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CmdMsg_SaveConfigToFileCmd& CmdMsg_SaveConfigToFileCmd::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_CmdMsg_SaveConfigToFileCmd.base);
  return *internal_default_instance();
}


void CmdMsg_SaveConfigToFileCmd::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.CmdMsg.SaveConfigToFileCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reporterrstr_ = false;
  _internal_metadata_.Clear();
}

bool CmdMsg_SaveConfigToFileCmd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.CmdMsg.SaveConfigToFileCmd)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string fileName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filename().data(), static_cast<int>(this->filename().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HaWC.CmdMsg.SaveConfigToFileCmd.fileName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool reportErrStr = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &reporterrstr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.CmdMsg.SaveConfigToFileCmd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.CmdMsg.SaveConfigToFileCmd)
  return false;
#undef DO_
}

void CmdMsg_SaveConfigToFileCmd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.CmdMsg.SaveConfigToFileCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string fileName = 1;
  if (this->filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.CmdMsg.SaveConfigToFileCmd.fileName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->filename(), output);
  }

  // bool reportErrStr = 2;
  if (this->reporterrstr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->reporterrstr(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.CmdMsg.SaveConfigToFileCmd)
}

::google::protobuf::uint8* CmdMsg_SaveConfigToFileCmd::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.CmdMsg.SaveConfigToFileCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string fileName = 1;
  if (this->filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.CmdMsg.SaveConfigToFileCmd.fileName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->filename(), target);
  }

  // bool reportErrStr = 2;
  if (this->reporterrstr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->reporterrstr(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.CmdMsg.SaveConfigToFileCmd)
  return target;
}

size_t CmdMsg_SaveConfigToFileCmd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.CmdMsg.SaveConfigToFileCmd)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string fileName = 1;
  if (this->filename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filename());
  }

  // bool reportErrStr = 2;
  if (this->reporterrstr() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CmdMsg_SaveConfigToFileCmd::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.CmdMsg.SaveConfigToFileCmd)
  GOOGLE_DCHECK_NE(&from, this);
  const CmdMsg_SaveConfigToFileCmd* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CmdMsg_SaveConfigToFileCmd>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.CmdMsg.SaveConfigToFileCmd)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.CmdMsg.SaveConfigToFileCmd)
    MergeFrom(*source);
  }
}

void CmdMsg_SaveConfigToFileCmd::MergeFrom(const CmdMsg_SaveConfigToFileCmd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.CmdMsg.SaveConfigToFileCmd)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.filename().size() > 0) {

    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  if (from.reporterrstr() != 0) {
    set_reporterrstr(from.reporterrstr());
  }
}

void CmdMsg_SaveConfigToFileCmd::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.CmdMsg.SaveConfigToFileCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CmdMsg_SaveConfigToFileCmd::CopyFrom(const CmdMsg_SaveConfigToFileCmd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.CmdMsg.SaveConfigToFileCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CmdMsg_SaveConfigToFileCmd::IsInitialized() const {
  return true;
}

void CmdMsg_SaveConfigToFileCmd::Swap(CmdMsg_SaveConfigToFileCmd* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CmdMsg_SaveConfigToFileCmd::InternalSwap(CmdMsg_SaveConfigToFileCmd* other) {
  using std::swap;
  filename_.Swap(&other->filename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(reporterrstr_, other->reporterrstr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CmdMsg_SaveConfigToFileCmd::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CmdMsg_LoadConfigFromFileCmd::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CmdMsg_LoadConfigFromFileCmd::kFileNameFieldNumber;
const int CmdMsg_LoadConfigFromFileCmd::kReportErrStrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CmdMsg_LoadConfigFromFileCmd::CmdMsg_LoadConfigFromFileCmd()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_LoadConfigFromFileCmd.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.CmdMsg.LoadConfigFromFileCmd)
}
CmdMsg_LoadConfigFromFileCmd::CmdMsg_LoadConfigFromFileCmd(const CmdMsg_LoadConfigFromFileCmd& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filename().size() > 0) {
    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  reporterrstr_ = from.reporterrstr_;
  // @@protoc_insertion_point(copy_constructor:HaWC.CmdMsg.LoadConfigFromFileCmd)
}

void CmdMsg_LoadConfigFromFileCmd::SharedCtor() {
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reporterrstr_ = false;
}

CmdMsg_LoadConfigFromFileCmd::~CmdMsg_LoadConfigFromFileCmd() {
  // @@protoc_insertion_point(destructor:HaWC.CmdMsg.LoadConfigFromFileCmd)
  SharedDtor();
}

void CmdMsg_LoadConfigFromFileCmd::SharedDtor() {
  filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CmdMsg_LoadConfigFromFileCmd::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CmdMsg_LoadConfigFromFileCmd::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CmdMsg_LoadConfigFromFileCmd& CmdMsg_LoadConfigFromFileCmd::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_CmdMsg_LoadConfigFromFileCmd.base);
  return *internal_default_instance();
}


void CmdMsg_LoadConfigFromFileCmd::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.CmdMsg.LoadConfigFromFileCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reporterrstr_ = false;
  _internal_metadata_.Clear();
}

bool CmdMsg_LoadConfigFromFileCmd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.CmdMsg.LoadConfigFromFileCmd)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string fileName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filename().data(), static_cast<int>(this->filename().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HaWC.CmdMsg.LoadConfigFromFileCmd.fileName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool reportErrStr = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &reporterrstr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.CmdMsg.LoadConfigFromFileCmd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.CmdMsg.LoadConfigFromFileCmd)
  return false;
#undef DO_
}

void CmdMsg_LoadConfigFromFileCmd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.CmdMsg.LoadConfigFromFileCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string fileName = 1;
  if (this->filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.CmdMsg.LoadConfigFromFileCmd.fileName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->filename(), output);
  }

  // bool reportErrStr = 2;
  if (this->reporterrstr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->reporterrstr(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.CmdMsg.LoadConfigFromFileCmd)
}

::google::protobuf::uint8* CmdMsg_LoadConfigFromFileCmd::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.CmdMsg.LoadConfigFromFileCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string fileName = 1;
  if (this->filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.CmdMsg.LoadConfigFromFileCmd.fileName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->filename(), target);
  }

  // bool reportErrStr = 2;
  if (this->reporterrstr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->reporterrstr(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.CmdMsg.LoadConfigFromFileCmd)
  return target;
}

size_t CmdMsg_LoadConfigFromFileCmd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.CmdMsg.LoadConfigFromFileCmd)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string fileName = 1;
  if (this->filename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filename());
  }

  // bool reportErrStr = 2;
  if (this->reporterrstr() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CmdMsg_LoadConfigFromFileCmd::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.CmdMsg.LoadConfigFromFileCmd)
  GOOGLE_DCHECK_NE(&from, this);
  const CmdMsg_LoadConfigFromFileCmd* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CmdMsg_LoadConfigFromFileCmd>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.CmdMsg.LoadConfigFromFileCmd)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.CmdMsg.LoadConfigFromFileCmd)
    MergeFrom(*source);
  }
}

void CmdMsg_LoadConfigFromFileCmd::MergeFrom(const CmdMsg_LoadConfigFromFileCmd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.CmdMsg.LoadConfigFromFileCmd)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.filename().size() > 0) {

    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  if (from.reporterrstr() != 0) {
    set_reporterrstr(from.reporterrstr());
  }
}

void CmdMsg_LoadConfigFromFileCmd::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.CmdMsg.LoadConfigFromFileCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CmdMsg_LoadConfigFromFileCmd::CopyFrom(const CmdMsg_LoadConfigFromFileCmd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.CmdMsg.LoadConfigFromFileCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CmdMsg_LoadConfigFromFileCmd::IsInitialized() const {
  return true;
}

void CmdMsg_LoadConfigFromFileCmd::Swap(CmdMsg_LoadConfigFromFileCmd* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CmdMsg_LoadConfigFromFileCmd::InternalSwap(CmdMsg_LoadConfigFromFileCmd* other) {
  using std::swap;
  filename_.Swap(&other->filename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(reporterrstr_, other->reporterrstr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CmdMsg_LoadConfigFromFileCmd::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CmdMsg_RestoreFactoryConfigCmd::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CmdMsg_RestoreFactoryConfigCmd::CmdMsg_RestoreFactoryConfigCmd()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_RestoreFactoryConfigCmd.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.CmdMsg.RestoreFactoryConfigCmd)
}
CmdMsg_RestoreFactoryConfigCmd::CmdMsg_RestoreFactoryConfigCmd(const CmdMsg_RestoreFactoryConfigCmd& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:HaWC.CmdMsg.RestoreFactoryConfigCmd)
}

void CmdMsg_RestoreFactoryConfigCmd::SharedCtor() {
}

CmdMsg_RestoreFactoryConfigCmd::~CmdMsg_RestoreFactoryConfigCmd() {
  // @@protoc_insertion_point(destructor:HaWC.CmdMsg.RestoreFactoryConfigCmd)
  SharedDtor();
}

void CmdMsg_RestoreFactoryConfigCmd::SharedDtor() {
}

void CmdMsg_RestoreFactoryConfigCmd::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CmdMsg_RestoreFactoryConfigCmd::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CmdMsg_RestoreFactoryConfigCmd& CmdMsg_RestoreFactoryConfigCmd::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_CmdMsg_RestoreFactoryConfigCmd.base);
  return *internal_default_instance();
}


void CmdMsg_RestoreFactoryConfigCmd::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.CmdMsg.RestoreFactoryConfigCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool CmdMsg_RestoreFactoryConfigCmd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.CmdMsg.RestoreFactoryConfigCmd)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.CmdMsg.RestoreFactoryConfigCmd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.CmdMsg.RestoreFactoryConfigCmd)
  return false;
#undef DO_
}

void CmdMsg_RestoreFactoryConfigCmd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.CmdMsg.RestoreFactoryConfigCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.CmdMsg.RestoreFactoryConfigCmd)
}

::google::protobuf::uint8* CmdMsg_RestoreFactoryConfigCmd::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.CmdMsg.RestoreFactoryConfigCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.CmdMsg.RestoreFactoryConfigCmd)
  return target;
}

size_t CmdMsg_RestoreFactoryConfigCmd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.CmdMsg.RestoreFactoryConfigCmd)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CmdMsg_RestoreFactoryConfigCmd::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.CmdMsg.RestoreFactoryConfigCmd)
  GOOGLE_DCHECK_NE(&from, this);
  const CmdMsg_RestoreFactoryConfigCmd* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CmdMsg_RestoreFactoryConfigCmd>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.CmdMsg.RestoreFactoryConfigCmd)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.CmdMsg.RestoreFactoryConfigCmd)
    MergeFrom(*source);
  }
}

void CmdMsg_RestoreFactoryConfigCmd::MergeFrom(const CmdMsg_RestoreFactoryConfigCmd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.CmdMsg.RestoreFactoryConfigCmd)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CmdMsg_RestoreFactoryConfigCmd::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.CmdMsg.RestoreFactoryConfigCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CmdMsg_RestoreFactoryConfigCmd::CopyFrom(const CmdMsg_RestoreFactoryConfigCmd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.CmdMsg.RestoreFactoryConfigCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CmdMsg_RestoreFactoryConfigCmd::IsInitialized() const {
  return true;
}

void CmdMsg_RestoreFactoryConfigCmd::Swap(CmdMsg_RestoreFactoryConfigCmd* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CmdMsg_RestoreFactoryConfigCmd::InternalSwap(CmdMsg_RestoreFactoryConfigCmd* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CmdMsg_RestoreFactoryConfigCmd::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CmdMsg_ParamSet::InitAsDefaultInstance() {
  ::HaWC::_CmdMsg_ParamSet_default_instance_.boolval_ = false;
  ::HaWC::_CmdMsg_ParamSet_default_instance_.uintval_ = 0u;
  ::HaWC::_CmdMsg_ParamSet_default_instance_.intval_ = 0;
  ::HaWC::_CmdMsg_ParamSet_default_instance_.doubleval_ = 0;
  ::HaWC::_CmdMsg_ParamSet_default_instance_.strval_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::HaWC::_CmdMsg_ParamSet_default_instance_.databytes_ = 0u;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CmdMsg_ParamSet::kParamIDFieldNumber;
const int CmdMsg_ParamSet::kOffsetFieldNumber;
const int CmdMsg_ParamSet::kBoolValFieldNumber;
const int CmdMsg_ParamSet::kUintValFieldNumber;
const int CmdMsg_ParamSet::kIntValFieldNumber;
const int CmdMsg_ParamSet::kDoubleValFieldNumber;
const int CmdMsg_ParamSet::kStrValFieldNumber;
const int CmdMsg_ParamSet::kDataBytesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CmdMsg_ParamSet::CmdMsg_ParamSet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_ParamSet.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.CmdMsg.ParamSet)
}
CmdMsg_ParamSet::CmdMsg_ParamSet(const CmdMsg_ParamSet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  paramid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.paramid().size() > 0) {
    paramid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.paramid_);
  }
  offset_ = from.offset_;
  clear_has_Data();
  switch (from.Data_case()) {
    case kBoolVal: {
      set_boolval(from.boolval());
      break;
    }
    case kUintVal: {
      set_uintval(from.uintval());
      break;
    }
    case kIntVal: {
      set_intval(from.intval());
      break;
    }
    case kDoubleVal: {
      set_doubleval(from.doubleval());
      break;
    }
    case kStrVal: {
      set_strval(from.strval());
      break;
    }
    case kDataBytes: {
      set_databytes(from.databytes());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:HaWC.CmdMsg.ParamSet)
}

void CmdMsg_ParamSet::SharedCtor() {
  paramid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  offset_ = 0u;
  clear_has_Data();
}

CmdMsg_ParamSet::~CmdMsg_ParamSet() {
  // @@protoc_insertion_point(destructor:HaWC.CmdMsg.ParamSet)
  SharedDtor();
}

void CmdMsg_ParamSet::SharedDtor() {
  paramid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_Data()) {
    clear_Data();
  }
}

void CmdMsg_ParamSet::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CmdMsg_ParamSet::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CmdMsg_ParamSet& CmdMsg_ParamSet::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_CmdMsg_ParamSet.base);
  return *internal_default_instance();
}


void CmdMsg_ParamSet::clear_Data() {
// @@protoc_insertion_point(one_of_clear_start:HaWC.CmdMsg.ParamSet)
  switch (Data_case()) {
    case kBoolVal: {
      // No need to clear
      break;
    }
    case kUintVal: {
      // No need to clear
      break;
    }
    case kIntVal: {
      // No need to clear
      break;
    }
    case kDoubleVal: {
      // No need to clear
      break;
    }
    case kStrVal: {
      Data_.strval_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kDataBytes: {
      // No need to clear
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DATA_NOT_SET;
}


void CmdMsg_ParamSet::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.CmdMsg.ParamSet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  paramid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  offset_ = 0u;
  clear_Data();
  _internal_metadata_.Clear();
}

bool CmdMsg_ParamSet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.CmdMsg.ParamSet)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string paramID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_paramid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->paramid().data(), static_cast<int>(this->paramid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HaWC.CmdMsg.ParamSet.paramID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 offset = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool boolVal = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          clear_Data();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &Data_.boolval_)));
          set_has_boolval();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uintVal = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          clear_Data();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &Data_.uintval_)));
          set_has_uintval();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 intVal = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          clear_Data();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &Data_.intval_)));
          set_has_intval();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double doubleVal = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(105u /* 105 & 0xFF */)) {
          clear_Data();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &Data_.doubleval_)));
          set_has_doubleval();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strVal = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strval()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strval().data(), static_cast<int>(this->strval().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HaWC.CmdMsg.ParamSet.strVal"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 dataBytes = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          clear_Data();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &Data_.databytes_)));
          set_has_databytes();
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.CmdMsg.ParamSet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.CmdMsg.ParamSet)
  return false;
#undef DO_
}

void CmdMsg_ParamSet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.CmdMsg.ParamSet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string paramID = 1;
  if (this->paramid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->paramid().data(), static_cast<int>(this->paramid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.CmdMsg.ParamSet.paramID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->paramid(), output);
  }

  // uint32 offset = 2;
  if (this->offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->offset(), output);
  }

  // bool boolVal = 10;
  if (has_boolval()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->boolval(), output);
  }

  // uint32 uintVal = 11;
  if (has_uintval()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->uintval(), output);
  }

  // sint32 intVal = 12;
  if (has_intval()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(12, this->intval(), output);
  }

  // double doubleVal = 13;
  if (has_doubleval()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(13, this->doubleval(), output);
  }

  // string strVal = 14;
  if (has_strval()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strval().data(), static_cast<int>(this->strval().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.CmdMsg.ParamSet.strVal");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->strval(), output);
  }

  // uint32 dataBytes = 15;
  if (has_databytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->databytes(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.CmdMsg.ParamSet)
}

::google::protobuf::uint8* CmdMsg_ParamSet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.CmdMsg.ParamSet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string paramID = 1;
  if (this->paramid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->paramid().data(), static_cast<int>(this->paramid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.CmdMsg.ParamSet.paramID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->paramid(), target);
  }

  // uint32 offset = 2;
  if (this->offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->offset(), target);
  }

  // bool boolVal = 10;
  if (has_boolval()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->boolval(), target);
  }

  // uint32 uintVal = 11;
  if (has_uintval()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->uintval(), target);
  }

  // sint32 intVal = 12;
  if (has_intval()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(12, this->intval(), target);
  }

  // double doubleVal = 13;
  if (has_doubleval()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(13, this->doubleval(), target);
  }

  // string strVal = 14;
  if (has_strval()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strval().data(), static_cast<int>(this->strval().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.CmdMsg.ParamSet.strVal");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->strval(), target);
  }

  // uint32 dataBytes = 15;
  if (has_databytes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->databytes(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.CmdMsg.ParamSet)
  return target;
}

size_t CmdMsg_ParamSet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.CmdMsg.ParamSet)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string paramID = 1;
  if (this->paramid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->paramid());
  }

  // uint32 offset = 2;
  if (this->offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->offset());
  }

  switch (Data_case()) {
    // bool boolVal = 10;
    case kBoolVal: {
      total_size += 1 + 1;
      break;
    }
    // uint32 uintVal = 11;
    case kUintVal: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->uintval());
      break;
    }
    // sint32 intVal = 12;
    case kIntVal: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->intval());
      break;
    }
    // double doubleVal = 13;
    case kDoubleVal: {
      total_size += 1 + 8;
      break;
    }
    // string strVal = 14;
    case kStrVal: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strval());
      break;
    }
    // uint32 dataBytes = 15;
    case kDataBytes: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->databytes());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CmdMsg_ParamSet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.CmdMsg.ParamSet)
  GOOGLE_DCHECK_NE(&from, this);
  const CmdMsg_ParamSet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CmdMsg_ParamSet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.CmdMsg.ParamSet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.CmdMsg.ParamSet)
    MergeFrom(*source);
  }
}

void CmdMsg_ParamSet::MergeFrom(const CmdMsg_ParamSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.CmdMsg.ParamSet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.paramid().size() > 0) {

    paramid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.paramid_);
  }
  if (from.offset() != 0) {
    set_offset(from.offset());
  }
  switch (from.Data_case()) {
    case kBoolVal: {
      set_boolval(from.boolval());
      break;
    }
    case kUintVal: {
      set_uintval(from.uintval());
      break;
    }
    case kIntVal: {
      set_intval(from.intval());
      break;
    }
    case kDoubleVal: {
      set_doubleval(from.doubleval());
      break;
    }
    case kStrVal: {
      set_strval(from.strval());
      break;
    }
    case kDataBytes: {
      set_databytes(from.databytes());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
}

void CmdMsg_ParamSet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.CmdMsg.ParamSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CmdMsg_ParamSet::CopyFrom(const CmdMsg_ParamSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.CmdMsg.ParamSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CmdMsg_ParamSet::IsInitialized() const {
  return true;
}

void CmdMsg_ParamSet::Swap(CmdMsg_ParamSet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CmdMsg_ParamSet::InternalSwap(CmdMsg_ParamSet* other) {
  using std::swap;
  paramid_.Swap(&other->paramid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(offset_, other->offset_);
  swap(Data_, other->Data_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CmdMsg_ParamSet::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CmdMsg_SetParamsCmd::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CmdMsg_SetParamsCmd::kTargetFieldNumber;
const int CmdMsg_SetParamsCmd::kParamsFieldNumber;
const int CmdMsg_SetParamsCmd::kReportParamValsFieldNumber;
const int CmdMsg_SetParamsCmd::kReportErrStrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CmdMsg_SetParamsCmd::CmdMsg_SetParamsCmd()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_SetParamsCmd.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.CmdMsg.SetParamsCmd)
}
CmdMsg_SetParamsCmd::CmdMsg_SetParamsCmd(const CmdMsg_SetParamsCmd& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      params_(from.params_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&target_, &from.target_,
    static_cast<size_t>(reinterpret_cast<char*>(&reporterrstr_) -
    reinterpret_cast<char*>(&target_)) + sizeof(reporterrstr_));
  // @@protoc_insertion_point(copy_constructor:HaWC.CmdMsg.SetParamsCmd)
}

void CmdMsg_SetParamsCmd::SharedCtor() {
  ::memset(&target_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reporterrstr_) -
      reinterpret_cast<char*>(&target_)) + sizeof(reporterrstr_));
}

CmdMsg_SetParamsCmd::~CmdMsg_SetParamsCmd() {
  // @@protoc_insertion_point(destructor:HaWC.CmdMsg.SetParamsCmd)
  SharedDtor();
}

void CmdMsg_SetParamsCmd::SharedDtor() {
}

void CmdMsg_SetParamsCmd::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CmdMsg_SetParamsCmd::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CmdMsg_SetParamsCmd& CmdMsg_SetParamsCmd::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_CmdMsg_SetParamsCmd.base);
  return *internal_default_instance();
}


void CmdMsg_SetParamsCmd::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.CmdMsg.SetParamsCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  params_.Clear();
  ::memset(&target_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reporterrstr_) -
      reinterpret_cast<char*>(&target_)) + sizeof(reporterrstr_));
  _internal_metadata_.Clear();
}

bool CmdMsg_SetParamsCmd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.CmdMsg.SetParamsCmd)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .HaWC.Targets target = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_target(static_cast< ::HaWC::Targets >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .HaWC.CmdMsg.ParamSet params = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool reportParamVals = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &reportparamvals_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool reportErrStr = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &reporterrstr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.CmdMsg.SetParamsCmd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.CmdMsg.SetParamsCmd)
  return false;
#undef DO_
}

void CmdMsg_SetParamsCmd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.CmdMsg.SetParamsCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .HaWC.Targets target = 1;
  if (this->target() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->target(), output);
  }

  // repeated .HaWC.CmdMsg.ParamSet params = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->params_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->params(static_cast<int>(i)),
      output);
  }

  // bool reportParamVals = 3;
  if (this->reportparamvals() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->reportparamvals(), output);
  }

  // bool reportErrStr = 4;
  if (this->reporterrstr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->reporterrstr(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.CmdMsg.SetParamsCmd)
}

::google::protobuf::uint8* CmdMsg_SetParamsCmd::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.CmdMsg.SetParamsCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .HaWC.Targets target = 1;
  if (this->target() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->target(), target);
  }

  // repeated .HaWC.CmdMsg.ParamSet params = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->params_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->params(static_cast<int>(i)), deterministic, target);
  }

  // bool reportParamVals = 3;
  if (this->reportparamvals() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->reportparamvals(), target);
  }

  // bool reportErrStr = 4;
  if (this->reporterrstr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->reporterrstr(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.CmdMsg.SetParamsCmd)
  return target;
}

size_t CmdMsg_SetParamsCmd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.CmdMsg.SetParamsCmd)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .HaWC.CmdMsg.ParamSet params = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->params_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->params(static_cast<int>(i)));
    }
  }

  // .HaWC.Targets target = 1;
  if (this->target() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->target());
  }

  // bool reportParamVals = 3;
  if (this->reportparamvals() != 0) {
    total_size += 1 + 1;
  }

  // bool reportErrStr = 4;
  if (this->reporterrstr() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CmdMsg_SetParamsCmd::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.CmdMsg.SetParamsCmd)
  GOOGLE_DCHECK_NE(&from, this);
  const CmdMsg_SetParamsCmd* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CmdMsg_SetParamsCmd>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.CmdMsg.SetParamsCmd)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.CmdMsg.SetParamsCmd)
    MergeFrom(*source);
  }
}

void CmdMsg_SetParamsCmd::MergeFrom(const CmdMsg_SetParamsCmd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.CmdMsg.SetParamsCmd)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  params_.MergeFrom(from.params_);
  if (from.target() != 0) {
    set_target(from.target());
  }
  if (from.reportparamvals() != 0) {
    set_reportparamvals(from.reportparamvals());
  }
  if (from.reporterrstr() != 0) {
    set_reporterrstr(from.reporterrstr());
  }
}

void CmdMsg_SetParamsCmd::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.CmdMsg.SetParamsCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CmdMsg_SetParamsCmd::CopyFrom(const CmdMsg_SetParamsCmd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.CmdMsg.SetParamsCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CmdMsg_SetParamsCmd::IsInitialized() const {
  return true;
}

void CmdMsg_SetParamsCmd::Swap(CmdMsg_SetParamsCmd* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CmdMsg_SetParamsCmd::InternalSwap(CmdMsg_SetParamsCmd* other) {
  using std::swap;
  CastToBase(&params_)->InternalSwap(CastToBase(&other->params_));
  swap(target_, other->target_);
  swap(reportparamvals_, other->reportparamvals_);
  swap(reporterrstr_, other->reporterrstr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CmdMsg_SetParamsCmd::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CmdMsg_ParamLoc::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CmdMsg_ParamLoc::kIdFieldNumber;
const int CmdMsg_ParamLoc::kOffsetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CmdMsg_ParamLoc::CmdMsg_ParamLoc()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_ParamLoc.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.CmdMsg.ParamLoc)
}
CmdMsg_ParamLoc::CmdMsg_ParamLoc(const CmdMsg_ParamLoc& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  offset_ = from.offset_;
  // @@protoc_insertion_point(copy_constructor:HaWC.CmdMsg.ParamLoc)
}

void CmdMsg_ParamLoc::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  offset_ = 0u;
}

CmdMsg_ParamLoc::~CmdMsg_ParamLoc() {
  // @@protoc_insertion_point(destructor:HaWC.CmdMsg.ParamLoc)
  SharedDtor();
}

void CmdMsg_ParamLoc::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CmdMsg_ParamLoc::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CmdMsg_ParamLoc::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CmdMsg_ParamLoc& CmdMsg_ParamLoc::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_CmdMsg_ParamLoc.base);
  return *internal_default_instance();
}


void CmdMsg_ParamLoc::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.CmdMsg.ParamLoc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  offset_ = 0u;
  _internal_metadata_.Clear();
}

bool CmdMsg_ParamLoc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.CmdMsg.ParamLoc)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HaWC.CmdMsg.ParamLoc.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 offset = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.CmdMsg.ParamLoc)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.CmdMsg.ParamLoc)
  return false;
#undef DO_
}

void CmdMsg_ParamLoc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.CmdMsg.ParamLoc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.CmdMsg.ParamLoc.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // uint32 offset = 2;
  if (this->offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->offset(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.CmdMsg.ParamLoc)
}

::google::protobuf::uint8* CmdMsg_ParamLoc::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.CmdMsg.ParamLoc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.CmdMsg.ParamLoc.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // uint32 offset = 2;
  if (this->offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->offset(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.CmdMsg.ParamLoc)
  return target;
}

size_t CmdMsg_ParamLoc::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.CmdMsg.ParamLoc)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // uint32 offset = 2;
  if (this->offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->offset());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CmdMsg_ParamLoc::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.CmdMsg.ParamLoc)
  GOOGLE_DCHECK_NE(&from, this);
  const CmdMsg_ParamLoc* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CmdMsg_ParamLoc>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.CmdMsg.ParamLoc)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.CmdMsg.ParamLoc)
    MergeFrom(*source);
  }
}

void CmdMsg_ParamLoc::MergeFrom(const CmdMsg_ParamLoc& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.CmdMsg.ParamLoc)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.offset() != 0) {
    set_offset(from.offset());
  }
}

void CmdMsg_ParamLoc::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.CmdMsg.ParamLoc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CmdMsg_ParamLoc::CopyFrom(const CmdMsg_ParamLoc& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.CmdMsg.ParamLoc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CmdMsg_ParamLoc::IsInitialized() const {
  return true;
}

void CmdMsg_ParamLoc::Swap(CmdMsg_ParamLoc* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CmdMsg_ParamLoc::InternalSwap(CmdMsg_ParamLoc* other) {
  using std::swap;
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(offset_, other->offset_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CmdMsg_ParamLoc::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CmdMsg_GetParamsCmd::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CmdMsg_GetParamsCmd::kTargetFieldNumber;
const int CmdMsg_GetParamsCmd::kLocationsFieldNumber;
const int CmdMsg_GetParamsCmd::kReportErrStrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CmdMsg_GetParamsCmd::CmdMsg_GetParamsCmd()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_GetParamsCmd.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.CmdMsg.GetParamsCmd)
}
CmdMsg_GetParamsCmd::CmdMsg_GetParamsCmd(const CmdMsg_GetParamsCmd& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      locations_(from.locations_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&target_, &from.target_,
    static_cast<size_t>(reinterpret_cast<char*>(&reporterrstr_) -
    reinterpret_cast<char*>(&target_)) + sizeof(reporterrstr_));
  // @@protoc_insertion_point(copy_constructor:HaWC.CmdMsg.GetParamsCmd)
}

void CmdMsg_GetParamsCmd::SharedCtor() {
  ::memset(&target_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reporterrstr_) -
      reinterpret_cast<char*>(&target_)) + sizeof(reporterrstr_));
}

CmdMsg_GetParamsCmd::~CmdMsg_GetParamsCmd() {
  // @@protoc_insertion_point(destructor:HaWC.CmdMsg.GetParamsCmd)
  SharedDtor();
}

void CmdMsg_GetParamsCmd::SharedDtor() {
}

void CmdMsg_GetParamsCmd::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CmdMsg_GetParamsCmd::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CmdMsg_GetParamsCmd& CmdMsg_GetParamsCmd::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_CmdMsg_GetParamsCmd.base);
  return *internal_default_instance();
}


void CmdMsg_GetParamsCmd::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.CmdMsg.GetParamsCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  locations_.Clear();
  ::memset(&target_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reporterrstr_) -
      reinterpret_cast<char*>(&target_)) + sizeof(reporterrstr_));
  _internal_metadata_.Clear();
}

bool CmdMsg_GetParamsCmd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.CmdMsg.GetParamsCmd)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .HaWC.Targets target = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_target(static_cast< ::HaWC::Targets >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .HaWC.CmdMsg.ParamLoc locations = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_locations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool reportErrStr = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &reporterrstr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.CmdMsg.GetParamsCmd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.CmdMsg.GetParamsCmd)
  return false;
#undef DO_
}

void CmdMsg_GetParamsCmd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.CmdMsg.GetParamsCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .HaWC.Targets target = 1;
  if (this->target() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->target(), output);
  }

  // repeated .HaWC.CmdMsg.ParamLoc locations = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->locations_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->locations(static_cast<int>(i)),
      output);
  }

  // bool reportErrStr = 3;
  if (this->reporterrstr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->reporterrstr(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.CmdMsg.GetParamsCmd)
}

::google::protobuf::uint8* CmdMsg_GetParamsCmd::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.CmdMsg.GetParamsCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .HaWC.Targets target = 1;
  if (this->target() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->target(), target);
  }

  // repeated .HaWC.CmdMsg.ParamLoc locations = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->locations_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->locations(static_cast<int>(i)), deterministic, target);
  }

  // bool reportErrStr = 3;
  if (this->reporterrstr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->reporterrstr(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.CmdMsg.GetParamsCmd)
  return target;
}

size_t CmdMsg_GetParamsCmd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.CmdMsg.GetParamsCmd)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .HaWC.CmdMsg.ParamLoc locations = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->locations_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->locations(static_cast<int>(i)));
    }
  }

  // .HaWC.Targets target = 1;
  if (this->target() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->target());
  }

  // bool reportErrStr = 3;
  if (this->reporterrstr() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CmdMsg_GetParamsCmd::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.CmdMsg.GetParamsCmd)
  GOOGLE_DCHECK_NE(&from, this);
  const CmdMsg_GetParamsCmd* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CmdMsg_GetParamsCmd>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.CmdMsg.GetParamsCmd)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.CmdMsg.GetParamsCmd)
    MergeFrom(*source);
  }
}

void CmdMsg_GetParamsCmd::MergeFrom(const CmdMsg_GetParamsCmd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.CmdMsg.GetParamsCmd)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  locations_.MergeFrom(from.locations_);
  if (from.target() != 0) {
    set_target(from.target());
  }
  if (from.reporterrstr() != 0) {
    set_reporterrstr(from.reporterrstr());
  }
}

void CmdMsg_GetParamsCmd::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.CmdMsg.GetParamsCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CmdMsg_GetParamsCmd::CopyFrom(const CmdMsg_GetParamsCmd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.CmdMsg.GetParamsCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CmdMsg_GetParamsCmd::IsInitialized() const {
  return true;
}

void CmdMsg_GetParamsCmd::Swap(CmdMsg_GetParamsCmd* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CmdMsg_GetParamsCmd::InternalSwap(CmdMsg_GetParamsCmd* other) {
  using std::swap;
  CastToBase(&locations_)->InternalSwap(CastToBase(&other->locations_));
  swap(target_, other->target_);
  swap(reporterrstr_, other->reporterrstr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CmdMsg_GetParamsCmd::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CmdMsg_GetParamsCfgnCmd::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CmdMsg_GetParamsCfgnCmd::kTargetFieldNumber;
const int CmdMsg_GetParamsCfgnCmd::kParamIDsFieldNumber;
const int CmdMsg_GetParamsCfgnCmd::kReportDescriptionFieldNumber;
const int CmdMsg_GetParamsCfgnCmd::kReportErrStrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CmdMsg_GetParamsCfgnCmd::CmdMsg_GetParamsCfgnCmd()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_GetParamsCfgnCmd.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.CmdMsg.GetParamsCfgnCmd)
}
CmdMsg_GetParamsCfgnCmd::CmdMsg_GetParamsCfgnCmd(const CmdMsg_GetParamsCfgnCmd& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      paramids_(from.paramids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&target_, &from.target_,
    static_cast<size_t>(reinterpret_cast<char*>(&reporterrstr_) -
    reinterpret_cast<char*>(&target_)) + sizeof(reporterrstr_));
  // @@protoc_insertion_point(copy_constructor:HaWC.CmdMsg.GetParamsCfgnCmd)
}

void CmdMsg_GetParamsCfgnCmd::SharedCtor() {
  ::memset(&target_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reporterrstr_) -
      reinterpret_cast<char*>(&target_)) + sizeof(reporterrstr_));
}

CmdMsg_GetParamsCfgnCmd::~CmdMsg_GetParamsCfgnCmd() {
  // @@protoc_insertion_point(destructor:HaWC.CmdMsg.GetParamsCfgnCmd)
  SharedDtor();
}

void CmdMsg_GetParamsCfgnCmd::SharedDtor() {
}

void CmdMsg_GetParamsCfgnCmd::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CmdMsg_GetParamsCfgnCmd::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CmdMsg_GetParamsCfgnCmd& CmdMsg_GetParamsCfgnCmd::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_CmdMsg_GetParamsCfgnCmd.base);
  return *internal_default_instance();
}


void CmdMsg_GetParamsCfgnCmd::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.CmdMsg.GetParamsCfgnCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  paramids_.Clear();
  ::memset(&target_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reporterrstr_) -
      reinterpret_cast<char*>(&target_)) + sizeof(reporterrstr_));
  _internal_metadata_.Clear();
}

bool CmdMsg_GetParamsCfgnCmd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.CmdMsg.GetParamsCfgnCmd)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .HaWC.Targets target = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_target(static_cast< ::HaWC::Targets >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string paramIDs = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_paramids()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->paramids(this->paramids_size() - 1).data(),
            static_cast<int>(this->paramids(this->paramids_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HaWC.CmdMsg.GetParamsCfgnCmd.paramIDs"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool reportDescription = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &reportdescription_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool reportErrStr = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &reporterrstr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.CmdMsg.GetParamsCfgnCmd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.CmdMsg.GetParamsCfgnCmd)
  return false;
#undef DO_
}

void CmdMsg_GetParamsCfgnCmd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.CmdMsg.GetParamsCfgnCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .HaWC.Targets target = 1;
  if (this->target() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->target(), output);
  }

  // repeated string paramIDs = 2;
  for (int i = 0, n = this->paramids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->paramids(i).data(), static_cast<int>(this->paramids(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.CmdMsg.GetParamsCfgnCmd.paramIDs");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->paramids(i), output);
  }

  // bool reportDescription = 3;
  if (this->reportdescription() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->reportdescription(), output);
  }

  // bool reportErrStr = 4;
  if (this->reporterrstr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->reporterrstr(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.CmdMsg.GetParamsCfgnCmd)
}

::google::protobuf::uint8* CmdMsg_GetParamsCfgnCmd::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.CmdMsg.GetParamsCfgnCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .HaWC.Targets target = 1;
  if (this->target() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->target(), target);
  }

  // repeated string paramIDs = 2;
  for (int i = 0, n = this->paramids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->paramids(i).data(), static_cast<int>(this->paramids(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.CmdMsg.GetParamsCfgnCmd.paramIDs");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->paramids(i), target);
  }

  // bool reportDescription = 3;
  if (this->reportdescription() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->reportdescription(), target);
  }

  // bool reportErrStr = 4;
  if (this->reporterrstr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->reporterrstr(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.CmdMsg.GetParamsCfgnCmd)
  return target;
}

size_t CmdMsg_GetParamsCfgnCmd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.CmdMsg.GetParamsCfgnCmd)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string paramIDs = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->paramids_size());
  for (int i = 0, n = this->paramids_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->paramids(i));
  }

  // .HaWC.Targets target = 1;
  if (this->target() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->target());
  }

  // bool reportDescription = 3;
  if (this->reportdescription() != 0) {
    total_size += 1 + 1;
  }

  // bool reportErrStr = 4;
  if (this->reporterrstr() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CmdMsg_GetParamsCfgnCmd::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.CmdMsg.GetParamsCfgnCmd)
  GOOGLE_DCHECK_NE(&from, this);
  const CmdMsg_GetParamsCfgnCmd* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CmdMsg_GetParamsCfgnCmd>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.CmdMsg.GetParamsCfgnCmd)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.CmdMsg.GetParamsCfgnCmd)
    MergeFrom(*source);
  }
}

void CmdMsg_GetParamsCfgnCmd::MergeFrom(const CmdMsg_GetParamsCfgnCmd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.CmdMsg.GetParamsCfgnCmd)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  paramids_.MergeFrom(from.paramids_);
  if (from.target() != 0) {
    set_target(from.target());
  }
  if (from.reportdescription() != 0) {
    set_reportdescription(from.reportdescription());
  }
  if (from.reporterrstr() != 0) {
    set_reporterrstr(from.reporterrstr());
  }
}

void CmdMsg_GetParamsCfgnCmd::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.CmdMsg.GetParamsCfgnCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CmdMsg_GetParamsCfgnCmd::CopyFrom(const CmdMsg_GetParamsCfgnCmd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.CmdMsg.GetParamsCfgnCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CmdMsg_GetParamsCfgnCmd::IsInitialized() const {
  return true;
}

void CmdMsg_GetParamsCfgnCmd::Swap(CmdMsg_GetParamsCfgnCmd* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CmdMsg_GetParamsCfgnCmd::InternalSwap(CmdMsg_GetParamsCfgnCmd* other) {
  using std::swap;
  paramids_.InternalSwap(CastToBase(&other->paramids_));
  swap(target_, other->target_);
  swap(reportdescription_, other->reportdescription_);
  swap(reporterrstr_, other->reporterrstr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CmdMsg_GetParamsCfgnCmd::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CmdMsg_GetFileHashCmd::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CmdMsg_GetFileHashCmd::kFileNameFieldNumber;
const int CmdMsg_GetFileHashCmd::kReportErrStrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CmdMsg_GetFileHashCmd::CmdMsg_GetFileHashCmd()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_GetFileHashCmd.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.CmdMsg.GetFileHashCmd)
}
CmdMsg_GetFileHashCmd::CmdMsg_GetFileHashCmd(const CmdMsg_GetFileHashCmd& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filename().size() > 0) {
    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  reporterrstr_ = from.reporterrstr_;
  // @@protoc_insertion_point(copy_constructor:HaWC.CmdMsg.GetFileHashCmd)
}

void CmdMsg_GetFileHashCmd::SharedCtor() {
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reporterrstr_ = false;
}

CmdMsg_GetFileHashCmd::~CmdMsg_GetFileHashCmd() {
  // @@protoc_insertion_point(destructor:HaWC.CmdMsg.GetFileHashCmd)
  SharedDtor();
}

void CmdMsg_GetFileHashCmd::SharedDtor() {
  filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CmdMsg_GetFileHashCmd::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CmdMsg_GetFileHashCmd::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CmdMsg_GetFileHashCmd& CmdMsg_GetFileHashCmd::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_CmdMsg_GetFileHashCmd.base);
  return *internal_default_instance();
}


void CmdMsg_GetFileHashCmd::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.CmdMsg.GetFileHashCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reporterrstr_ = false;
  _internal_metadata_.Clear();
}

bool CmdMsg_GetFileHashCmd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.CmdMsg.GetFileHashCmd)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string fileName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filename().data(), static_cast<int>(this->filename().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HaWC.CmdMsg.GetFileHashCmd.fileName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool reportErrStr = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &reporterrstr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.CmdMsg.GetFileHashCmd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.CmdMsg.GetFileHashCmd)
  return false;
#undef DO_
}

void CmdMsg_GetFileHashCmd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.CmdMsg.GetFileHashCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string fileName = 1;
  if (this->filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.CmdMsg.GetFileHashCmd.fileName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->filename(), output);
  }

  // bool reportErrStr = 2;
  if (this->reporterrstr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->reporterrstr(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.CmdMsg.GetFileHashCmd)
}

::google::protobuf::uint8* CmdMsg_GetFileHashCmd::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.CmdMsg.GetFileHashCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string fileName = 1;
  if (this->filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.CmdMsg.GetFileHashCmd.fileName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->filename(), target);
  }

  // bool reportErrStr = 2;
  if (this->reporterrstr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->reporterrstr(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.CmdMsg.GetFileHashCmd)
  return target;
}

size_t CmdMsg_GetFileHashCmd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.CmdMsg.GetFileHashCmd)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string fileName = 1;
  if (this->filename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filename());
  }

  // bool reportErrStr = 2;
  if (this->reporterrstr() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CmdMsg_GetFileHashCmd::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.CmdMsg.GetFileHashCmd)
  GOOGLE_DCHECK_NE(&from, this);
  const CmdMsg_GetFileHashCmd* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CmdMsg_GetFileHashCmd>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.CmdMsg.GetFileHashCmd)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.CmdMsg.GetFileHashCmd)
    MergeFrom(*source);
  }
}

void CmdMsg_GetFileHashCmd::MergeFrom(const CmdMsg_GetFileHashCmd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.CmdMsg.GetFileHashCmd)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.filename().size() > 0) {

    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  if (from.reporterrstr() != 0) {
    set_reporterrstr(from.reporterrstr());
  }
}

void CmdMsg_GetFileHashCmd::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.CmdMsg.GetFileHashCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CmdMsg_GetFileHashCmd::CopyFrom(const CmdMsg_GetFileHashCmd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.CmdMsg.GetFileHashCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CmdMsg_GetFileHashCmd::IsInitialized() const {
  return true;
}

void CmdMsg_GetFileHashCmd::Swap(CmdMsg_GetFileHashCmd* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CmdMsg_GetFileHashCmd::InternalSwap(CmdMsg_GetFileHashCmd* other) {
  using std::swap;
  filename_.Swap(&other->filename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(reporterrstr_, other->reporterrstr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CmdMsg_GetFileHashCmd::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CmdMsg_AppManagerCmd::InitAsDefaultInstance() {
  ::HaWC::_CmdMsg_AppManagerCmd_default_instance_.close_ = const_cast< ::HaWC::CmdMsg_CloseCmd*>(
      ::HaWC::CmdMsg_CloseCmd::internal_default_instance());
  ::HaWC::_CmdMsg_AppManagerCmd_default_instance_.savedefaultconfig_ = const_cast< ::HaWC::CmdMsg_SaveDefaultConfigCmd*>(
      ::HaWC::CmdMsg_SaveDefaultConfigCmd::internal_default_instance());
  ::HaWC::_CmdMsg_AppManagerCmd_default_instance_.saveconfigtofile_ = const_cast< ::HaWC::CmdMsg_SaveConfigToFileCmd*>(
      ::HaWC::CmdMsg_SaveConfigToFileCmd::internal_default_instance());
  ::HaWC::_CmdMsg_AppManagerCmd_default_instance_.loadconfigfromfile_ = const_cast< ::HaWC::CmdMsg_LoadConfigFromFileCmd*>(
      ::HaWC::CmdMsg_LoadConfigFromFileCmd::internal_default_instance());
  ::HaWC::_CmdMsg_AppManagerCmd_default_instance_.restorefactoryconfig_ = const_cast< ::HaWC::CmdMsg_RestoreFactoryConfigCmd*>(
      ::HaWC::CmdMsg_RestoreFactoryConfigCmd::internal_default_instance());
  ::HaWC::_CmdMsg_AppManagerCmd_default_instance_.setparams_ = const_cast< ::HaWC::CmdMsg_SetParamsCmd*>(
      ::HaWC::CmdMsg_SetParamsCmd::internal_default_instance());
  ::HaWC::_CmdMsg_AppManagerCmd_default_instance_.getparams_ = const_cast< ::HaWC::CmdMsg_GetParamsCmd*>(
      ::HaWC::CmdMsg_GetParamsCmd::internal_default_instance());
  ::HaWC::_CmdMsg_AppManagerCmd_default_instance_.getparamscfgn_ = const_cast< ::HaWC::CmdMsg_GetParamsCfgnCmd*>(
      ::HaWC::CmdMsg_GetParamsCfgnCmd::internal_default_instance());
  ::HaWC::_CmdMsg_AppManagerCmd_default_instance_.getfilehash_ = const_cast< ::HaWC::CmdMsg_GetFileHashCmd*>(
      ::HaWC::CmdMsg_GetFileHashCmd::internal_default_instance());
}
void CmdMsg_AppManagerCmd::set_allocated_close(::HaWC::CmdMsg_CloseCmd* close) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_command();
  if (close) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      close = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, close, submessage_arena);
    }
    set_has_close();
    command_.close_ = close;
  }
  // @@protoc_insertion_point(field_set_allocated:HaWC.CmdMsg.AppManagerCmd.close)
}
void CmdMsg_AppManagerCmd::set_allocated_savedefaultconfig(::HaWC::CmdMsg_SaveDefaultConfigCmd* savedefaultconfig) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_command();
  if (savedefaultconfig) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      savedefaultconfig = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, savedefaultconfig, submessage_arena);
    }
    set_has_savedefaultconfig();
    command_.savedefaultconfig_ = savedefaultconfig;
  }
  // @@protoc_insertion_point(field_set_allocated:HaWC.CmdMsg.AppManagerCmd.saveDefaultConfig)
}
void CmdMsg_AppManagerCmd::set_allocated_saveconfigtofile(::HaWC::CmdMsg_SaveConfigToFileCmd* saveconfigtofile) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_command();
  if (saveconfigtofile) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      saveconfigtofile = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, saveconfigtofile, submessage_arena);
    }
    set_has_saveconfigtofile();
    command_.saveconfigtofile_ = saveconfigtofile;
  }
  // @@protoc_insertion_point(field_set_allocated:HaWC.CmdMsg.AppManagerCmd.saveConfigToFile)
}
void CmdMsg_AppManagerCmd::set_allocated_loadconfigfromfile(::HaWC::CmdMsg_LoadConfigFromFileCmd* loadconfigfromfile) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_command();
  if (loadconfigfromfile) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      loadconfigfromfile = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, loadconfigfromfile, submessage_arena);
    }
    set_has_loadconfigfromfile();
    command_.loadconfigfromfile_ = loadconfigfromfile;
  }
  // @@protoc_insertion_point(field_set_allocated:HaWC.CmdMsg.AppManagerCmd.loadConfigFromFile)
}
void CmdMsg_AppManagerCmd::set_allocated_restorefactoryconfig(::HaWC::CmdMsg_RestoreFactoryConfigCmd* restorefactoryconfig) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_command();
  if (restorefactoryconfig) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      restorefactoryconfig = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, restorefactoryconfig, submessage_arena);
    }
    set_has_restorefactoryconfig();
    command_.restorefactoryconfig_ = restorefactoryconfig;
  }
  // @@protoc_insertion_point(field_set_allocated:HaWC.CmdMsg.AppManagerCmd.restoreFactoryConfig)
}
void CmdMsg_AppManagerCmd::set_allocated_setparams(::HaWC::CmdMsg_SetParamsCmd* setparams) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_command();
  if (setparams) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      setparams = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, setparams, submessage_arena);
    }
    set_has_setparams();
    command_.setparams_ = setparams;
  }
  // @@protoc_insertion_point(field_set_allocated:HaWC.CmdMsg.AppManagerCmd.setParams)
}
void CmdMsg_AppManagerCmd::set_allocated_getparams(::HaWC::CmdMsg_GetParamsCmd* getparams) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_command();
  if (getparams) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      getparams = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, getparams, submessage_arena);
    }
    set_has_getparams();
    command_.getparams_ = getparams;
  }
  // @@protoc_insertion_point(field_set_allocated:HaWC.CmdMsg.AppManagerCmd.getParams)
}
void CmdMsg_AppManagerCmd::set_allocated_getparamscfgn(::HaWC::CmdMsg_GetParamsCfgnCmd* getparamscfgn) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_command();
  if (getparamscfgn) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      getparamscfgn = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, getparamscfgn, submessage_arena);
    }
    set_has_getparamscfgn();
    command_.getparamscfgn_ = getparamscfgn;
  }
  // @@protoc_insertion_point(field_set_allocated:HaWC.CmdMsg.AppManagerCmd.getParamsCfgn)
}
void CmdMsg_AppManagerCmd::set_allocated_getfilehash(::HaWC::CmdMsg_GetFileHashCmd* getfilehash) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_command();
  if (getfilehash) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      getfilehash = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, getfilehash, submessage_arena);
    }
    set_has_getfilehash();
    command_.getfilehash_ = getfilehash;
  }
  // @@protoc_insertion_point(field_set_allocated:HaWC.CmdMsg.AppManagerCmd.getFileHash)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CmdMsg_AppManagerCmd::kCloseFieldNumber;
const int CmdMsg_AppManagerCmd::kSaveDefaultConfigFieldNumber;
const int CmdMsg_AppManagerCmd::kSaveConfigToFileFieldNumber;
const int CmdMsg_AppManagerCmd::kLoadConfigFromFileFieldNumber;
const int CmdMsg_AppManagerCmd::kRestoreFactoryConfigFieldNumber;
const int CmdMsg_AppManagerCmd::kSetParamsFieldNumber;
const int CmdMsg_AppManagerCmd::kGetParamsFieldNumber;
const int CmdMsg_AppManagerCmd::kGetParamsCfgnFieldNumber;
const int CmdMsg_AppManagerCmd::kGetFileHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CmdMsg_AppManagerCmd::CmdMsg_AppManagerCmd()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_AppManagerCmd.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.CmdMsg.AppManagerCmd)
}
CmdMsg_AppManagerCmd::CmdMsg_AppManagerCmd(const CmdMsg_AppManagerCmd& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_command();
  switch (from.command_case()) {
    case kClose: {
      mutable_close()->::HaWC::CmdMsg_CloseCmd::MergeFrom(from.close());
      break;
    }
    case kSaveDefaultConfig: {
      mutable_savedefaultconfig()->::HaWC::CmdMsg_SaveDefaultConfigCmd::MergeFrom(from.savedefaultconfig());
      break;
    }
    case kSaveConfigToFile: {
      mutable_saveconfigtofile()->::HaWC::CmdMsg_SaveConfigToFileCmd::MergeFrom(from.saveconfigtofile());
      break;
    }
    case kLoadConfigFromFile: {
      mutable_loadconfigfromfile()->::HaWC::CmdMsg_LoadConfigFromFileCmd::MergeFrom(from.loadconfigfromfile());
      break;
    }
    case kRestoreFactoryConfig: {
      mutable_restorefactoryconfig()->::HaWC::CmdMsg_RestoreFactoryConfigCmd::MergeFrom(from.restorefactoryconfig());
      break;
    }
    case kSetParams: {
      mutable_setparams()->::HaWC::CmdMsg_SetParamsCmd::MergeFrom(from.setparams());
      break;
    }
    case kGetParams: {
      mutable_getparams()->::HaWC::CmdMsg_GetParamsCmd::MergeFrom(from.getparams());
      break;
    }
    case kGetParamsCfgn: {
      mutable_getparamscfgn()->::HaWC::CmdMsg_GetParamsCfgnCmd::MergeFrom(from.getparamscfgn());
      break;
    }
    case kGetFileHash: {
      mutable_getfilehash()->::HaWC::CmdMsg_GetFileHashCmd::MergeFrom(from.getfilehash());
      break;
    }
    case COMMAND_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:HaWC.CmdMsg.AppManagerCmd)
}

void CmdMsg_AppManagerCmd::SharedCtor() {
  clear_has_command();
}

CmdMsg_AppManagerCmd::~CmdMsg_AppManagerCmd() {
  // @@protoc_insertion_point(destructor:HaWC.CmdMsg.AppManagerCmd)
  SharedDtor();
}

void CmdMsg_AppManagerCmd::SharedDtor() {
  if (has_command()) {
    clear_command();
  }
}

void CmdMsg_AppManagerCmd::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CmdMsg_AppManagerCmd::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CmdMsg_AppManagerCmd& CmdMsg_AppManagerCmd::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_CmdMsg_AppManagerCmd.base);
  return *internal_default_instance();
}


void CmdMsg_AppManagerCmd::clear_command() {
// @@protoc_insertion_point(one_of_clear_start:HaWC.CmdMsg.AppManagerCmd)
  switch (command_case()) {
    case kClose: {
      delete command_.close_;
      break;
    }
    case kSaveDefaultConfig: {
      delete command_.savedefaultconfig_;
      break;
    }
    case kSaveConfigToFile: {
      delete command_.saveconfigtofile_;
      break;
    }
    case kLoadConfigFromFile: {
      delete command_.loadconfigfromfile_;
      break;
    }
    case kRestoreFactoryConfig: {
      delete command_.restorefactoryconfig_;
      break;
    }
    case kSetParams: {
      delete command_.setparams_;
      break;
    }
    case kGetParams: {
      delete command_.getparams_;
      break;
    }
    case kGetParamsCfgn: {
      delete command_.getparamscfgn_;
      break;
    }
    case kGetFileHash: {
      delete command_.getfilehash_;
      break;
    }
    case COMMAND_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = COMMAND_NOT_SET;
}


void CmdMsg_AppManagerCmd::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.CmdMsg.AppManagerCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_command();
  _internal_metadata_.Clear();
}

bool CmdMsg_AppManagerCmd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.CmdMsg.AppManagerCmd)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .HaWC.CmdMsg.CloseCmd close = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_close()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .HaWC.CmdMsg.SaveDefaultConfigCmd saveDefaultConfig = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_savedefaultconfig()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .HaWC.CmdMsg.SaveConfigToFileCmd saveConfigToFile = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_saveconfigtofile()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .HaWC.CmdMsg.LoadConfigFromFileCmd loadConfigFromFile = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_loadconfigfromfile()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .HaWC.CmdMsg.RestoreFactoryConfigCmd restoreFactoryConfig = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_restorefactoryconfig()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .HaWC.CmdMsg.SetParamsCmd setParams = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_setparams()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .HaWC.CmdMsg.GetParamsCmd getParams = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_getparams()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .HaWC.CmdMsg.GetParamsCfgnCmd getParamsCfgn = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_getparamscfgn()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .HaWC.CmdMsg.GetFileHashCmd getFileHash = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_getfilehash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.CmdMsg.AppManagerCmd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.CmdMsg.AppManagerCmd)
  return false;
#undef DO_
}

void CmdMsg_AppManagerCmd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.CmdMsg.AppManagerCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .HaWC.CmdMsg.CloseCmd close = 2;
  if (has_close()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_close(), output);
  }

  // .HaWC.CmdMsg.SaveDefaultConfigCmd saveDefaultConfig = 5;
  if (has_savedefaultconfig()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_savedefaultconfig(), output);
  }

  // .HaWC.CmdMsg.SaveConfigToFileCmd saveConfigToFile = 6;
  if (has_saveconfigtofile()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_saveconfigtofile(), output);
  }

  // .HaWC.CmdMsg.LoadConfigFromFileCmd loadConfigFromFile = 7;
  if (has_loadconfigfromfile()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_loadconfigfromfile(), output);
  }

  // .HaWC.CmdMsg.RestoreFactoryConfigCmd restoreFactoryConfig = 8;
  if (has_restorefactoryconfig()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_restorefactoryconfig(), output);
  }

  // .HaWC.CmdMsg.SetParamsCmd setParams = 9;
  if (has_setparams()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_setparams(), output);
  }

  // .HaWC.CmdMsg.GetParamsCmd getParams = 10;
  if (has_getparams()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_getparams(), output);
  }

  // .HaWC.CmdMsg.GetParamsCfgnCmd getParamsCfgn = 11;
  if (has_getparamscfgn()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_getparamscfgn(), output);
  }

  // .HaWC.CmdMsg.GetFileHashCmd getFileHash = 15;
  if (has_getfilehash()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->_internal_getfilehash(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.CmdMsg.AppManagerCmd)
}

::google::protobuf::uint8* CmdMsg_AppManagerCmd::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.CmdMsg.AppManagerCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .HaWC.CmdMsg.CloseCmd close = 2;
  if (has_close()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_close(), deterministic, target);
  }

  // .HaWC.CmdMsg.SaveDefaultConfigCmd saveDefaultConfig = 5;
  if (has_savedefaultconfig()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_savedefaultconfig(), deterministic, target);
  }

  // .HaWC.CmdMsg.SaveConfigToFileCmd saveConfigToFile = 6;
  if (has_saveconfigtofile()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_saveconfigtofile(), deterministic, target);
  }

  // .HaWC.CmdMsg.LoadConfigFromFileCmd loadConfigFromFile = 7;
  if (has_loadconfigfromfile()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_loadconfigfromfile(), deterministic, target);
  }

  // .HaWC.CmdMsg.RestoreFactoryConfigCmd restoreFactoryConfig = 8;
  if (has_restorefactoryconfig()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_restorefactoryconfig(), deterministic, target);
  }

  // .HaWC.CmdMsg.SetParamsCmd setParams = 9;
  if (has_setparams()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_setparams(), deterministic, target);
  }

  // .HaWC.CmdMsg.GetParamsCmd getParams = 10;
  if (has_getparams()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_getparams(), deterministic, target);
  }

  // .HaWC.CmdMsg.GetParamsCfgnCmd getParamsCfgn = 11;
  if (has_getparamscfgn()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_getparamscfgn(), deterministic, target);
  }

  // .HaWC.CmdMsg.GetFileHashCmd getFileHash = 15;
  if (has_getfilehash()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->_internal_getfilehash(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.CmdMsg.AppManagerCmd)
  return target;
}

size_t CmdMsg_AppManagerCmd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.CmdMsg.AppManagerCmd)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (command_case()) {
    // .HaWC.CmdMsg.CloseCmd close = 2;
    case kClose: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *command_.close_);
      break;
    }
    // .HaWC.CmdMsg.SaveDefaultConfigCmd saveDefaultConfig = 5;
    case kSaveDefaultConfig: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *command_.savedefaultconfig_);
      break;
    }
    // .HaWC.CmdMsg.SaveConfigToFileCmd saveConfigToFile = 6;
    case kSaveConfigToFile: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *command_.saveconfigtofile_);
      break;
    }
    // .HaWC.CmdMsg.LoadConfigFromFileCmd loadConfigFromFile = 7;
    case kLoadConfigFromFile: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *command_.loadconfigfromfile_);
      break;
    }
    // .HaWC.CmdMsg.RestoreFactoryConfigCmd restoreFactoryConfig = 8;
    case kRestoreFactoryConfig: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *command_.restorefactoryconfig_);
      break;
    }
    // .HaWC.CmdMsg.SetParamsCmd setParams = 9;
    case kSetParams: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *command_.setparams_);
      break;
    }
    // .HaWC.CmdMsg.GetParamsCmd getParams = 10;
    case kGetParams: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *command_.getparams_);
      break;
    }
    // .HaWC.CmdMsg.GetParamsCfgnCmd getParamsCfgn = 11;
    case kGetParamsCfgn: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *command_.getparamscfgn_);
      break;
    }
    // .HaWC.CmdMsg.GetFileHashCmd getFileHash = 15;
    case kGetFileHash: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *command_.getfilehash_);
      break;
    }
    case COMMAND_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CmdMsg_AppManagerCmd::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.CmdMsg.AppManagerCmd)
  GOOGLE_DCHECK_NE(&from, this);
  const CmdMsg_AppManagerCmd* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CmdMsg_AppManagerCmd>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.CmdMsg.AppManagerCmd)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.CmdMsg.AppManagerCmd)
    MergeFrom(*source);
  }
}

void CmdMsg_AppManagerCmd::MergeFrom(const CmdMsg_AppManagerCmd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.CmdMsg.AppManagerCmd)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.command_case()) {
    case kClose: {
      mutable_close()->::HaWC::CmdMsg_CloseCmd::MergeFrom(from.close());
      break;
    }
    case kSaveDefaultConfig: {
      mutable_savedefaultconfig()->::HaWC::CmdMsg_SaveDefaultConfigCmd::MergeFrom(from.savedefaultconfig());
      break;
    }
    case kSaveConfigToFile: {
      mutable_saveconfigtofile()->::HaWC::CmdMsg_SaveConfigToFileCmd::MergeFrom(from.saveconfigtofile());
      break;
    }
    case kLoadConfigFromFile: {
      mutable_loadconfigfromfile()->::HaWC::CmdMsg_LoadConfigFromFileCmd::MergeFrom(from.loadconfigfromfile());
      break;
    }
    case kRestoreFactoryConfig: {
      mutable_restorefactoryconfig()->::HaWC::CmdMsg_RestoreFactoryConfigCmd::MergeFrom(from.restorefactoryconfig());
      break;
    }
    case kSetParams: {
      mutable_setparams()->::HaWC::CmdMsg_SetParamsCmd::MergeFrom(from.setparams());
      break;
    }
    case kGetParams: {
      mutable_getparams()->::HaWC::CmdMsg_GetParamsCmd::MergeFrom(from.getparams());
      break;
    }
    case kGetParamsCfgn: {
      mutable_getparamscfgn()->::HaWC::CmdMsg_GetParamsCfgnCmd::MergeFrom(from.getparamscfgn());
      break;
    }
    case kGetFileHash: {
      mutable_getfilehash()->::HaWC::CmdMsg_GetFileHashCmd::MergeFrom(from.getfilehash());
      break;
    }
    case COMMAND_NOT_SET: {
      break;
    }
  }
}

void CmdMsg_AppManagerCmd::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.CmdMsg.AppManagerCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CmdMsg_AppManagerCmd::CopyFrom(const CmdMsg_AppManagerCmd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.CmdMsg.AppManagerCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CmdMsg_AppManagerCmd::IsInitialized() const {
  return true;
}

void CmdMsg_AppManagerCmd::Swap(CmdMsg_AppManagerCmd* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CmdMsg_AppManagerCmd::InternalSwap(CmdMsg_AppManagerCmd* other) {
  using std::swap;
  swap(command_, other->command_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CmdMsg_AppManagerCmd::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CmdMsg_LineProperty::InitAsDefaultInstance() {
  ::HaWC::_CmdMsg_LineProperty_default_instance_.visible_ = false;
  ::HaWC::_CmdMsg_LineProperty_default_instance_.pt1x_ = 0;
  ::HaWC::_CmdMsg_LineProperty_default_instance_.pt1y_ = 0;
  ::HaWC::_CmdMsg_LineProperty_default_instance_.pt2x_ = 0;
  ::HaWC::_CmdMsg_LineProperty_default_instance_.pt2y_ = 0;
  ::HaWC::_CmdMsg_LineProperty_default_instance_.width_ = 0;
  ::HaWC::_CmdMsg_LineProperty_default_instance_.color_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::HaWC::_CmdMsg_LineProperty_default_instance_.opacity_ = 0;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CmdMsg_LineProperty::kVisibleFieldNumber;
const int CmdMsg_LineProperty::kPt1XFieldNumber;
const int CmdMsg_LineProperty::kPt1YFieldNumber;
const int CmdMsg_LineProperty::kPt2XFieldNumber;
const int CmdMsg_LineProperty::kPt2YFieldNumber;
const int CmdMsg_LineProperty::kWidthFieldNumber;
const int CmdMsg_LineProperty::kColorFieldNumber;
const int CmdMsg_LineProperty::kOpacityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CmdMsg_LineProperty::CmdMsg_LineProperty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_LineProperty.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.CmdMsg.LineProperty)
}
CmdMsg_LineProperty::CmdMsg_LineProperty(const CmdMsg_LineProperty& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_property();
  switch (from.property_case()) {
    case kVisible: {
      set_visible(from.visible());
      break;
    }
    case kPt1X: {
      set_pt1x(from.pt1x());
      break;
    }
    case kPt1Y: {
      set_pt1y(from.pt1y());
      break;
    }
    case kPt2X: {
      set_pt2x(from.pt2x());
      break;
    }
    case kPt2Y: {
      set_pt2y(from.pt2y());
      break;
    }
    case kWidth: {
      set_width(from.width());
      break;
    }
    case kColor: {
      set_color(from.color());
      break;
    }
    case kOpacity: {
      set_opacity(from.opacity());
      break;
    }
    case PROPERTY_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:HaWC.CmdMsg.LineProperty)
}

void CmdMsg_LineProperty::SharedCtor() {
  clear_has_property();
}

CmdMsg_LineProperty::~CmdMsg_LineProperty() {
  // @@protoc_insertion_point(destructor:HaWC.CmdMsg.LineProperty)
  SharedDtor();
}

void CmdMsg_LineProperty::SharedDtor() {
  if (has_property()) {
    clear_property();
  }
}

void CmdMsg_LineProperty::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CmdMsg_LineProperty::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CmdMsg_LineProperty& CmdMsg_LineProperty::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_CmdMsg_LineProperty.base);
  return *internal_default_instance();
}


void CmdMsg_LineProperty::clear_property() {
// @@protoc_insertion_point(one_of_clear_start:HaWC.CmdMsg.LineProperty)
  switch (property_case()) {
    case kVisible: {
      // No need to clear
      break;
    }
    case kPt1X: {
      // No need to clear
      break;
    }
    case kPt1Y: {
      // No need to clear
      break;
    }
    case kPt2X: {
      // No need to clear
      break;
    }
    case kPt2Y: {
      // No need to clear
      break;
    }
    case kWidth: {
      // No need to clear
      break;
    }
    case kColor: {
      property_.color_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kOpacity: {
      // No need to clear
      break;
    }
    case PROPERTY_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PROPERTY_NOT_SET;
}


void CmdMsg_LineProperty::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.CmdMsg.LineProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_property();
  _internal_metadata_.Clear();
}

bool CmdMsg_LineProperty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.CmdMsg.LineProperty)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool visible = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          clear_property();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &property_.visible_)));
          set_has_visible();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float pt1x = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          clear_property();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &property_.pt1x_)));
          set_has_pt1x();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float pt1y = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          clear_property();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &property_.pt1y_)));
          set_has_pt1y();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float pt2x = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          clear_property();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &property_.pt2x_)));
          set_has_pt2x();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float pt2y = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {
          clear_property();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &property_.pt2y_)));
          set_has_pt2y();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float width = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {
          clear_property();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &property_.width_)));
          set_has_width();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string color = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_color()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->color().data(), static_cast<int>(this->color().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HaWC.CmdMsg.LineProperty.color"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float opacity = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {
          clear_property();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &property_.opacity_)));
          set_has_opacity();
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.CmdMsg.LineProperty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.CmdMsg.LineProperty)
  return false;
#undef DO_
}

void CmdMsg_LineProperty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.CmdMsg.LineProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool visible = 1;
  if (has_visible()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->visible(), output);
  }

  // float pt1x = 2;
  if (has_pt1x()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->pt1x(), output);
  }

  // float pt1y = 3;
  if (has_pt1y()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->pt1y(), output);
  }

  // float pt2x = 4;
  if (has_pt2x()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->pt2x(), output);
  }

  // float pt2y = 5;
  if (has_pt2y()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->pt2y(), output);
  }

  // float width = 6;
  if (has_width()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->width(), output);
  }

  // string color = 7;
  if (has_color()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->color().data(), static_cast<int>(this->color().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.CmdMsg.LineProperty.color");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->color(), output);
  }

  // float opacity = 8;
  if (has_opacity()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->opacity(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.CmdMsg.LineProperty)
}

::google::protobuf::uint8* CmdMsg_LineProperty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.CmdMsg.LineProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool visible = 1;
  if (has_visible()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->visible(), target);
  }

  // float pt1x = 2;
  if (has_pt1x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->pt1x(), target);
  }

  // float pt1y = 3;
  if (has_pt1y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->pt1y(), target);
  }

  // float pt2x = 4;
  if (has_pt2x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->pt2x(), target);
  }

  // float pt2y = 5;
  if (has_pt2y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->pt2y(), target);
  }

  // float width = 6;
  if (has_width()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->width(), target);
  }

  // string color = 7;
  if (has_color()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->color().data(), static_cast<int>(this->color().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.CmdMsg.LineProperty.color");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->color(), target);
  }

  // float opacity = 8;
  if (has_opacity()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->opacity(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.CmdMsg.LineProperty)
  return target;
}

size_t CmdMsg_LineProperty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.CmdMsg.LineProperty)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (property_case()) {
    // bool visible = 1;
    case kVisible: {
      total_size += 1 + 1;
      break;
    }
    // float pt1x = 2;
    case kPt1X: {
      total_size += 1 + 4;
      break;
    }
    // float pt1y = 3;
    case kPt1Y: {
      total_size += 1 + 4;
      break;
    }
    // float pt2x = 4;
    case kPt2X: {
      total_size += 1 + 4;
      break;
    }
    // float pt2y = 5;
    case kPt2Y: {
      total_size += 1 + 4;
      break;
    }
    // float width = 6;
    case kWidth: {
      total_size += 1 + 4;
      break;
    }
    // string color = 7;
    case kColor: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->color());
      break;
    }
    // float opacity = 8;
    case kOpacity: {
      total_size += 1 + 4;
      break;
    }
    case PROPERTY_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CmdMsg_LineProperty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.CmdMsg.LineProperty)
  GOOGLE_DCHECK_NE(&from, this);
  const CmdMsg_LineProperty* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CmdMsg_LineProperty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.CmdMsg.LineProperty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.CmdMsg.LineProperty)
    MergeFrom(*source);
  }
}

void CmdMsg_LineProperty::MergeFrom(const CmdMsg_LineProperty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.CmdMsg.LineProperty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.property_case()) {
    case kVisible: {
      set_visible(from.visible());
      break;
    }
    case kPt1X: {
      set_pt1x(from.pt1x());
      break;
    }
    case kPt1Y: {
      set_pt1y(from.pt1y());
      break;
    }
    case kPt2X: {
      set_pt2x(from.pt2x());
      break;
    }
    case kPt2Y: {
      set_pt2y(from.pt2y());
      break;
    }
    case kWidth: {
      set_width(from.width());
      break;
    }
    case kColor: {
      set_color(from.color());
      break;
    }
    case kOpacity: {
      set_opacity(from.opacity());
      break;
    }
    case PROPERTY_NOT_SET: {
      break;
    }
  }
}

void CmdMsg_LineProperty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.CmdMsg.LineProperty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CmdMsg_LineProperty::CopyFrom(const CmdMsg_LineProperty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.CmdMsg.LineProperty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CmdMsg_LineProperty::IsInitialized() const {
  return true;
}

void CmdMsg_LineProperty::Swap(CmdMsg_LineProperty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CmdMsg_LineProperty::InternalSwap(CmdMsg_LineProperty* other) {
  using std::swap;
  swap(property_, other->property_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CmdMsg_LineProperty::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CmdMsg_LineProperties::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CmdMsg_LineProperties::kPropertiesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CmdMsg_LineProperties::CmdMsg_LineProperties()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_LineProperties.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.CmdMsg.LineProperties)
}
CmdMsg_LineProperties::CmdMsg_LineProperties(const CmdMsg_LineProperties& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      properties_(from.properties_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:HaWC.CmdMsg.LineProperties)
}

void CmdMsg_LineProperties::SharedCtor() {
}

CmdMsg_LineProperties::~CmdMsg_LineProperties() {
  // @@protoc_insertion_point(destructor:HaWC.CmdMsg.LineProperties)
  SharedDtor();
}

void CmdMsg_LineProperties::SharedDtor() {
}

void CmdMsg_LineProperties::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CmdMsg_LineProperties::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CmdMsg_LineProperties& CmdMsg_LineProperties::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_CmdMsg_LineProperties.base);
  return *internal_default_instance();
}


void CmdMsg_LineProperties::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.CmdMsg.LineProperties)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  properties_.Clear();
  _internal_metadata_.Clear();
}

bool CmdMsg_LineProperties::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.CmdMsg.LineProperties)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .HaWC.CmdMsg.LineProperty properties = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_properties()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.CmdMsg.LineProperties)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.CmdMsg.LineProperties)
  return false;
#undef DO_
}

void CmdMsg_LineProperties::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.CmdMsg.LineProperties)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .HaWC.CmdMsg.LineProperty properties = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->properties_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->properties(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.CmdMsg.LineProperties)
}

::google::protobuf::uint8* CmdMsg_LineProperties::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.CmdMsg.LineProperties)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .HaWC.CmdMsg.LineProperty properties = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->properties_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->properties(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.CmdMsg.LineProperties)
  return target;
}

size_t CmdMsg_LineProperties::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.CmdMsg.LineProperties)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .HaWC.CmdMsg.LineProperty properties = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->properties_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->properties(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CmdMsg_LineProperties::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.CmdMsg.LineProperties)
  GOOGLE_DCHECK_NE(&from, this);
  const CmdMsg_LineProperties* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CmdMsg_LineProperties>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.CmdMsg.LineProperties)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.CmdMsg.LineProperties)
    MergeFrom(*source);
  }
}

void CmdMsg_LineProperties::MergeFrom(const CmdMsg_LineProperties& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.CmdMsg.LineProperties)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  properties_.MergeFrom(from.properties_);
}

void CmdMsg_LineProperties::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.CmdMsg.LineProperties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CmdMsg_LineProperties::CopyFrom(const CmdMsg_LineProperties& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.CmdMsg.LineProperties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CmdMsg_LineProperties::IsInitialized() const {
  return true;
}

void CmdMsg_LineProperties::Swap(CmdMsg_LineProperties* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CmdMsg_LineProperties::InternalSwap(CmdMsg_LineProperties* other) {
  using std::swap;
  CastToBase(&properties_)->InternalSwap(CastToBase(&other->properties_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CmdMsg_LineProperties::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CmdMsg_CircleProperty::InitAsDefaultInstance() {
  ::HaWC::_CmdMsg_CircleProperty_default_instance_.visible_ = false;
  ::HaWC::_CmdMsg_CircleProperty_default_instance_.x_ = 0;
  ::HaWC::_CmdMsg_CircleProperty_default_instance_.y_ = 0;
  ::HaWC::_CmdMsg_CircleProperty_default_instance_.radius_ = 0;
  ::HaWC::_CmdMsg_CircleProperty_default_instance_.color_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::HaWC::_CmdMsg_CircleProperty_default_instance_.border_width_ = 0;
  ::HaWC::_CmdMsg_CircleProperty_default_instance_.border_color_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::HaWC::_CmdMsg_CircleProperty_default_instance_.opacity_ = 0;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CmdMsg_CircleProperty::kVisibleFieldNumber;
const int CmdMsg_CircleProperty::kXFieldNumber;
const int CmdMsg_CircleProperty::kYFieldNumber;
const int CmdMsg_CircleProperty::kRadiusFieldNumber;
const int CmdMsg_CircleProperty::kColorFieldNumber;
const int CmdMsg_CircleProperty::kBorderWidthFieldNumber;
const int CmdMsg_CircleProperty::kBorderColorFieldNumber;
const int CmdMsg_CircleProperty::kOpacityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CmdMsg_CircleProperty::CmdMsg_CircleProperty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_CircleProperty.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.CmdMsg.CircleProperty)
}
CmdMsg_CircleProperty::CmdMsg_CircleProperty(const CmdMsg_CircleProperty& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_property();
  switch (from.property_case()) {
    case kVisible: {
      set_visible(from.visible());
      break;
    }
    case kX: {
      set_x(from.x());
      break;
    }
    case kY: {
      set_y(from.y());
      break;
    }
    case kRadius: {
      set_radius(from.radius());
      break;
    }
    case kColor: {
      set_color(from.color());
      break;
    }
    case kBorderWidth: {
      set_border_width(from.border_width());
      break;
    }
    case kBorderColor: {
      set_border_color(from.border_color());
      break;
    }
    case kOpacity: {
      set_opacity(from.opacity());
      break;
    }
    case PROPERTY_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:HaWC.CmdMsg.CircleProperty)
}

void CmdMsg_CircleProperty::SharedCtor() {
  clear_has_property();
}

CmdMsg_CircleProperty::~CmdMsg_CircleProperty() {
  // @@protoc_insertion_point(destructor:HaWC.CmdMsg.CircleProperty)
  SharedDtor();
}

void CmdMsg_CircleProperty::SharedDtor() {
  if (has_property()) {
    clear_property();
  }
}

void CmdMsg_CircleProperty::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CmdMsg_CircleProperty::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CmdMsg_CircleProperty& CmdMsg_CircleProperty::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_CmdMsg_CircleProperty.base);
  return *internal_default_instance();
}


void CmdMsg_CircleProperty::clear_property() {
// @@protoc_insertion_point(one_of_clear_start:HaWC.CmdMsg.CircleProperty)
  switch (property_case()) {
    case kVisible: {
      // No need to clear
      break;
    }
    case kX: {
      // No need to clear
      break;
    }
    case kY: {
      // No need to clear
      break;
    }
    case kRadius: {
      // No need to clear
      break;
    }
    case kColor: {
      property_.color_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kBorderWidth: {
      // No need to clear
      break;
    }
    case kBorderColor: {
      property_.border_color_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kOpacity: {
      // No need to clear
      break;
    }
    case PROPERTY_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PROPERTY_NOT_SET;
}


void CmdMsg_CircleProperty::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.CmdMsg.CircleProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_property();
  _internal_metadata_.Clear();
}

bool CmdMsg_CircleProperty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.CmdMsg.CircleProperty)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool visible = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          clear_property();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &property_.visible_)));
          set_has_visible();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float x = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          clear_property();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &property_.x_)));
          set_has_x();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          clear_property();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &property_.y_)));
          set_has_y();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float radius = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          clear_property();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &property_.radius_)));
          set_has_radius();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string color = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_color()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->color().data(), static_cast<int>(this->color().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HaWC.CmdMsg.CircleProperty.color"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float border_width = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {
          clear_property();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &property_.border_width_)));
          set_has_border_width();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string border_color = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_border_color()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->border_color().data(), static_cast<int>(this->border_color().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HaWC.CmdMsg.CircleProperty.border_color"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float opacity = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {
          clear_property();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &property_.opacity_)));
          set_has_opacity();
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.CmdMsg.CircleProperty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.CmdMsg.CircleProperty)
  return false;
#undef DO_
}

void CmdMsg_CircleProperty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.CmdMsg.CircleProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool visible = 1;
  if (has_visible()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->visible(), output);
  }

  // float x = 2;
  if (has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->x(), output);
  }

  // float y = 3;
  if (has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->y(), output);
  }

  // float radius = 4;
  if (has_radius()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->radius(), output);
  }

  // string color = 5;
  if (has_color()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->color().data(), static_cast<int>(this->color().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.CmdMsg.CircleProperty.color");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->color(), output);
  }

  // float border_width = 6;
  if (has_border_width()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->border_width(), output);
  }

  // string border_color = 7;
  if (has_border_color()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->border_color().data(), static_cast<int>(this->border_color().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.CmdMsg.CircleProperty.border_color");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->border_color(), output);
  }

  // float opacity = 8;
  if (has_opacity()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->opacity(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.CmdMsg.CircleProperty)
}

::google::protobuf::uint8* CmdMsg_CircleProperty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.CmdMsg.CircleProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool visible = 1;
  if (has_visible()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->visible(), target);
  }

  // float x = 2;
  if (has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->x(), target);
  }

  // float y = 3;
  if (has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->y(), target);
  }

  // float radius = 4;
  if (has_radius()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->radius(), target);
  }

  // string color = 5;
  if (has_color()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->color().data(), static_cast<int>(this->color().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.CmdMsg.CircleProperty.color");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->color(), target);
  }

  // float border_width = 6;
  if (has_border_width()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->border_width(), target);
  }

  // string border_color = 7;
  if (has_border_color()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->border_color().data(), static_cast<int>(this->border_color().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.CmdMsg.CircleProperty.border_color");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->border_color(), target);
  }

  // float opacity = 8;
  if (has_opacity()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->opacity(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.CmdMsg.CircleProperty)
  return target;
}

size_t CmdMsg_CircleProperty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.CmdMsg.CircleProperty)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (property_case()) {
    // bool visible = 1;
    case kVisible: {
      total_size += 1 + 1;
      break;
    }
    // float x = 2;
    case kX: {
      total_size += 1 + 4;
      break;
    }
    // float y = 3;
    case kY: {
      total_size += 1 + 4;
      break;
    }
    // float radius = 4;
    case kRadius: {
      total_size += 1 + 4;
      break;
    }
    // string color = 5;
    case kColor: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->color());
      break;
    }
    // float border_width = 6;
    case kBorderWidth: {
      total_size += 1 + 4;
      break;
    }
    // string border_color = 7;
    case kBorderColor: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->border_color());
      break;
    }
    // float opacity = 8;
    case kOpacity: {
      total_size += 1 + 4;
      break;
    }
    case PROPERTY_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CmdMsg_CircleProperty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.CmdMsg.CircleProperty)
  GOOGLE_DCHECK_NE(&from, this);
  const CmdMsg_CircleProperty* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CmdMsg_CircleProperty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.CmdMsg.CircleProperty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.CmdMsg.CircleProperty)
    MergeFrom(*source);
  }
}

void CmdMsg_CircleProperty::MergeFrom(const CmdMsg_CircleProperty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.CmdMsg.CircleProperty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.property_case()) {
    case kVisible: {
      set_visible(from.visible());
      break;
    }
    case kX: {
      set_x(from.x());
      break;
    }
    case kY: {
      set_y(from.y());
      break;
    }
    case kRadius: {
      set_radius(from.radius());
      break;
    }
    case kColor: {
      set_color(from.color());
      break;
    }
    case kBorderWidth: {
      set_border_width(from.border_width());
      break;
    }
    case kBorderColor: {
      set_border_color(from.border_color());
      break;
    }
    case kOpacity: {
      set_opacity(from.opacity());
      break;
    }
    case PROPERTY_NOT_SET: {
      break;
    }
  }
}

void CmdMsg_CircleProperty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.CmdMsg.CircleProperty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CmdMsg_CircleProperty::CopyFrom(const CmdMsg_CircleProperty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.CmdMsg.CircleProperty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CmdMsg_CircleProperty::IsInitialized() const {
  return true;
}

void CmdMsg_CircleProperty::Swap(CmdMsg_CircleProperty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CmdMsg_CircleProperty::InternalSwap(CmdMsg_CircleProperty* other) {
  using std::swap;
  swap(property_, other->property_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CmdMsg_CircleProperty::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CmdMsg_CircleProperties::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CmdMsg_CircleProperties::kPropertiesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CmdMsg_CircleProperties::CmdMsg_CircleProperties()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_CircleProperties.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.CmdMsg.CircleProperties)
}
CmdMsg_CircleProperties::CmdMsg_CircleProperties(const CmdMsg_CircleProperties& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      properties_(from.properties_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:HaWC.CmdMsg.CircleProperties)
}

void CmdMsg_CircleProperties::SharedCtor() {
}

CmdMsg_CircleProperties::~CmdMsg_CircleProperties() {
  // @@protoc_insertion_point(destructor:HaWC.CmdMsg.CircleProperties)
  SharedDtor();
}

void CmdMsg_CircleProperties::SharedDtor() {
}

void CmdMsg_CircleProperties::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CmdMsg_CircleProperties::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CmdMsg_CircleProperties& CmdMsg_CircleProperties::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_CmdMsg_CircleProperties.base);
  return *internal_default_instance();
}


void CmdMsg_CircleProperties::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.CmdMsg.CircleProperties)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  properties_.Clear();
  _internal_metadata_.Clear();
}

bool CmdMsg_CircleProperties::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.CmdMsg.CircleProperties)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .HaWC.CmdMsg.CircleProperty properties = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_properties()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.CmdMsg.CircleProperties)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.CmdMsg.CircleProperties)
  return false;
#undef DO_
}

void CmdMsg_CircleProperties::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.CmdMsg.CircleProperties)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .HaWC.CmdMsg.CircleProperty properties = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->properties_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->properties(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.CmdMsg.CircleProperties)
}

::google::protobuf::uint8* CmdMsg_CircleProperties::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.CmdMsg.CircleProperties)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .HaWC.CmdMsg.CircleProperty properties = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->properties_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->properties(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.CmdMsg.CircleProperties)
  return target;
}

size_t CmdMsg_CircleProperties::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.CmdMsg.CircleProperties)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .HaWC.CmdMsg.CircleProperty properties = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->properties_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->properties(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CmdMsg_CircleProperties::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.CmdMsg.CircleProperties)
  GOOGLE_DCHECK_NE(&from, this);
  const CmdMsg_CircleProperties* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CmdMsg_CircleProperties>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.CmdMsg.CircleProperties)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.CmdMsg.CircleProperties)
    MergeFrom(*source);
  }
}

void CmdMsg_CircleProperties::MergeFrom(const CmdMsg_CircleProperties& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.CmdMsg.CircleProperties)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  properties_.MergeFrom(from.properties_);
}

void CmdMsg_CircleProperties::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.CmdMsg.CircleProperties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CmdMsg_CircleProperties::CopyFrom(const CmdMsg_CircleProperties& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.CmdMsg.CircleProperties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CmdMsg_CircleProperties::IsInitialized() const {
  return true;
}

void CmdMsg_CircleProperties::Swap(CmdMsg_CircleProperties* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CmdMsg_CircleProperties::InternalSwap(CmdMsg_CircleProperties* other) {
  using std::swap;
  CastToBase(&properties_)->InternalSwap(CastToBase(&other->properties_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CmdMsg_CircleProperties::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CmdMsg_RectangleProperty::InitAsDefaultInstance() {
  ::HaWC::_CmdMsg_RectangleProperty_default_instance_.visible_ = false;
  ::HaWC::_CmdMsg_RectangleProperty_default_instance_.x_ = 0;
  ::HaWC::_CmdMsg_RectangleProperty_default_instance_.y_ = 0;
  ::HaWC::_CmdMsg_RectangleProperty_default_instance_.width_ = 0;
  ::HaWC::_CmdMsg_RectangleProperty_default_instance_.height_ = 0;
  ::HaWC::_CmdMsg_RectangleProperty_default_instance_.color_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::HaWC::_CmdMsg_RectangleProperty_default_instance_.border_width_ = 0;
  ::HaWC::_CmdMsg_RectangleProperty_default_instance_.border_color_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::HaWC::_CmdMsg_RectangleProperty_default_instance_.radius_ = 0;
  ::HaWC::_CmdMsg_RectangleProperty_default_instance_.opacity_ = 0;
  ::HaWC::_CmdMsg_RectangleProperty_default_instance_.rotation_ = 0;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CmdMsg_RectangleProperty::kVisibleFieldNumber;
const int CmdMsg_RectangleProperty::kXFieldNumber;
const int CmdMsg_RectangleProperty::kYFieldNumber;
const int CmdMsg_RectangleProperty::kWidthFieldNumber;
const int CmdMsg_RectangleProperty::kHeightFieldNumber;
const int CmdMsg_RectangleProperty::kColorFieldNumber;
const int CmdMsg_RectangleProperty::kBorderWidthFieldNumber;
const int CmdMsg_RectangleProperty::kBorderColorFieldNumber;
const int CmdMsg_RectangleProperty::kRadiusFieldNumber;
const int CmdMsg_RectangleProperty::kOpacityFieldNumber;
const int CmdMsg_RectangleProperty::kRotationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CmdMsg_RectangleProperty::CmdMsg_RectangleProperty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_RectangleProperty.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.CmdMsg.RectangleProperty)
}
CmdMsg_RectangleProperty::CmdMsg_RectangleProperty(const CmdMsg_RectangleProperty& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_property();
  switch (from.property_case()) {
    case kVisible: {
      set_visible(from.visible());
      break;
    }
    case kX: {
      set_x(from.x());
      break;
    }
    case kY: {
      set_y(from.y());
      break;
    }
    case kWidth: {
      set_width(from.width());
      break;
    }
    case kHeight: {
      set_height(from.height());
      break;
    }
    case kColor: {
      set_color(from.color());
      break;
    }
    case kBorderWidth: {
      set_border_width(from.border_width());
      break;
    }
    case kBorderColor: {
      set_border_color(from.border_color());
      break;
    }
    case kRadius: {
      set_radius(from.radius());
      break;
    }
    case kOpacity: {
      set_opacity(from.opacity());
      break;
    }
    case kRotation: {
      set_rotation(from.rotation());
      break;
    }
    case PROPERTY_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:HaWC.CmdMsg.RectangleProperty)
}

void CmdMsg_RectangleProperty::SharedCtor() {
  clear_has_property();
}

CmdMsg_RectangleProperty::~CmdMsg_RectangleProperty() {
  // @@protoc_insertion_point(destructor:HaWC.CmdMsg.RectangleProperty)
  SharedDtor();
}

void CmdMsg_RectangleProperty::SharedDtor() {
  if (has_property()) {
    clear_property();
  }
}

void CmdMsg_RectangleProperty::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CmdMsg_RectangleProperty::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CmdMsg_RectangleProperty& CmdMsg_RectangleProperty::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_CmdMsg_RectangleProperty.base);
  return *internal_default_instance();
}


void CmdMsg_RectangleProperty::clear_property() {
// @@protoc_insertion_point(one_of_clear_start:HaWC.CmdMsg.RectangleProperty)
  switch (property_case()) {
    case kVisible: {
      // No need to clear
      break;
    }
    case kX: {
      // No need to clear
      break;
    }
    case kY: {
      // No need to clear
      break;
    }
    case kWidth: {
      // No need to clear
      break;
    }
    case kHeight: {
      // No need to clear
      break;
    }
    case kColor: {
      property_.color_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kBorderWidth: {
      // No need to clear
      break;
    }
    case kBorderColor: {
      property_.border_color_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kRadius: {
      // No need to clear
      break;
    }
    case kOpacity: {
      // No need to clear
      break;
    }
    case kRotation: {
      // No need to clear
      break;
    }
    case PROPERTY_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PROPERTY_NOT_SET;
}


void CmdMsg_RectangleProperty::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.CmdMsg.RectangleProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_property();
  _internal_metadata_.Clear();
}

bool CmdMsg_RectangleProperty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.CmdMsg.RectangleProperty)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool visible = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          clear_property();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &property_.visible_)));
          set_has_visible();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float x = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          clear_property();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &property_.x_)));
          set_has_x();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          clear_property();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &property_.y_)));
          set_has_y();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float width = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          clear_property();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &property_.width_)));
          set_has_width();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float height = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {
          clear_property();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &property_.height_)));
          set_has_height();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string color = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_color()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->color().data(), static_cast<int>(this->color().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HaWC.CmdMsg.RectangleProperty.color"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float border_width = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {
          clear_property();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &property_.border_width_)));
          set_has_border_width();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string border_color = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_border_color()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->border_color().data(), static_cast<int>(this->border_color().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HaWC.CmdMsg.RectangleProperty.border_color"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float radius = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {
          clear_property();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &property_.radius_)));
          set_has_radius();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float opacity = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(85u /* 85 & 0xFF */)) {
          clear_property();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &property_.opacity_)));
          set_has_opacity();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float rotation = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(93u /* 93 & 0xFF */)) {
          clear_property();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &property_.rotation_)));
          set_has_rotation();
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.CmdMsg.RectangleProperty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.CmdMsg.RectangleProperty)
  return false;
#undef DO_
}

void CmdMsg_RectangleProperty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.CmdMsg.RectangleProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool visible = 1;
  if (has_visible()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->visible(), output);
  }

  // float x = 2;
  if (has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->x(), output);
  }

  // float y = 3;
  if (has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->y(), output);
  }

  // float width = 4;
  if (has_width()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->width(), output);
  }

  // float height = 5;
  if (has_height()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->height(), output);
  }

  // string color = 6;
  if (has_color()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->color().data(), static_cast<int>(this->color().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.CmdMsg.RectangleProperty.color");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->color(), output);
  }

  // float border_width = 7;
  if (has_border_width()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->border_width(), output);
  }

  // string border_color = 8;
  if (has_border_color()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->border_color().data(), static_cast<int>(this->border_color().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.CmdMsg.RectangleProperty.border_color");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->border_color(), output);
  }

  // float radius = 9;
  if (has_radius()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->radius(), output);
  }

  // float opacity = 10;
  if (has_opacity()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->opacity(), output);
  }

  // float rotation = 11;
  if (has_rotation()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(11, this->rotation(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.CmdMsg.RectangleProperty)
}

::google::protobuf::uint8* CmdMsg_RectangleProperty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.CmdMsg.RectangleProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool visible = 1;
  if (has_visible()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->visible(), target);
  }

  // float x = 2;
  if (has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->x(), target);
  }

  // float y = 3;
  if (has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->y(), target);
  }

  // float width = 4;
  if (has_width()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->width(), target);
  }

  // float height = 5;
  if (has_height()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->height(), target);
  }

  // string color = 6;
  if (has_color()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->color().data(), static_cast<int>(this->color().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.CmdMsg.RectangleProperty.color");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->color(), target);
  }

  // float border_width = 7;
  if (has_border_width()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->border_width(), target);
  }

  // string border_color = 8;
  if (has_border_color()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->border_color().data(), static_cast<int>(this->border_color().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.CmdMsg.RectangleProperty.border_color");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->border_color(), target);
  }

  // float radius = 9;
  if (has_radius()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->radius(), target);
  }

  // float opacity = 10;
  if (has_opacity()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->opacity(), target);
  }

  // float rotation = 11;
  if (has_rotation()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(11, this->rotation(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.CmdMsg.RectangleProperty)
  return target;
}

size_t CmdMsg_RectangleProperty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.CmdMsg.RectangleProperty)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (property_case()) {
    // bool visible = 1;
    case kVisible: {
      total_size += 1 + 1;
      break;
    }
    // float x = 2;
    case kX: {
      total_size += 1 + 4;
      break;
    }
    // float y = 3;
    case kY: {
      total_size += 1 + 4;
      break;
    }
    // float width = 4;
    case kWidth: {
      total_size += 1 + 4;
      break;
    }
    // float height = 5;
    case kHeight: {
      total_size += 1 + 4;
      break;
    }
    // string color = 6;
    case kColor: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->color());
      break;
    }
    // float border_width = 7;
    case kBorderWidth: {
      total_size += 1 + 4;
      break;
    }
    // string border_color = 8;
    case kBorderColor: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->border_color());
      break;
    }
    // float radius = 9;
    case kRadius: {
      total_size += 1 + 4;
      break;
    }
    // float opacity = 10;
    case kOpacity: {
      total_size += 1 + 4;
      break;
    }
    // float rotation = 11;
    case kRotation: {
      total_size += 1 + 4;
      break;
    }
    case PROPERTY_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CmdMsg_RectangleProperty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.CmdMsg.RectangleProperty)
  GOOGLE_DCHECK_NE(&from, this);
  const CmdMsg_RectangleProperty* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CmdMsg_RectangleProperty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.CmdMsg.RectangleProperty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.CmdMsg.RectangleProperty)
    MergeFrom(*source);
  }
}

void CmdMsg_RectangleProperty::MergeFrom(const CmdMsg_RectangleProperty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.CmdMsg.RectangleProperty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.property_case()) {
    case kVisible: {
      set_visible(from.visible());
      break;
    }
    case kX: {
      set_x(from.x());
      break;
    }
    case kY: {
      set_y(from.y());
      break;
    }
    case kWidth: {
      set_width(from.width());
      break;
    }
    case kHeight: {
      set_height(from.height());
      break;
    }
    case kColor: {
      set_color(from.color());
      break;
    }
    case kBorderWidth: {
      set_border_width(from.border_width());
      break;
    }
    case kBorderColor: {
      set_border_color(from.border_color());
      break;
    }
    case kRadius: {
      set_radius(from.radius());
      break;
    }
    case kOpacity: {
      set_opacity(from.opacity());
      break;
    }
    case kRotation: {
      set_rotation(from.rotation());
      break;
    }
    case PROPERTY_NOT_SET: {
      break;
    }
  }
}

void CmdMsg_RectangleProperty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.CmdMsg.RectangleProperty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CmdMsg_RectangleProperty::CopyFrom(const CmdMsg_RectangleProperty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.CmdMsg.RectangleProperty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CmdMsg_RectangleProperty::IsInitialized() const {
  return true;
}

void CmdMsg_RectangleProperty::Swap(CmdMsg_RectangleProperty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CmdMsg_RectangleProperty::InternalSwap(CmdMsg_RectangleProperty* other) {
  using std::swap;
  swap(property_, other->property_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CmdMsg_RectangleProperty::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CmdMsg_RectangleProperties::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CmdMsg_RectangleProperties::kPropertiesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CmdMsg_RectangleProperties::CmdMsg_RectangleProperties()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_RectangleProperties.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.CmdMsg.RectangleProperties)
}
CmdMsg_RectangleProperties::CmdMsg_RectangleProperties(const CmdMsg_RectangleProperties& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      properties_(from.properties_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:HaWC.CmdMsg.RectangleProperties)
}

void CmdMsg_RectangleProperties::SharedCtor() {
}

CmdMsg_RectangleProperties::~CmdMsg_RectangleProperties() {
  // @@protoc_insertion_point(destructor:HaWC.CmdMsg.RectangleProperties)
  SharedDtor();
}

void CmdMsg_RectangleProperties::SharedDtor() {
}

void CmdMsg_RectangleProperties::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CmdMsg_RectangleProperties::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CmdMsg_RectangleProperties& CmdMsg_RectangleProperties::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_CmdMsg_RectangleProperties.base);
  return *internal_default_instance();
}


void CmdMsg_RectangleProperties::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.CmdMsg.RectangleProperties)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  properties_.Clear();
  _internal_metadata_.Clear();
}

bool CmdMsg_RectangleProperties::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.CmdMsg.RectangleProperties)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .HaWC.CmdMsg.RectangleProperty properties = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_properties()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.CmdMsg.RectangleProperties)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.CmdMsg.RectangleProperties)
  return false;
#undef DO_
}

void CmdMsg_RectangleProperties::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.CmdMsg.RectangleProperties)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .HaWC.CmdMsg.RectangleProperty properties = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->properties_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->properties(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.CmdMsg.RectangleProperties)
}

::google::protobuf::uint8* CmdMsg_RectangleProperties::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.CmdMsg.RectangleProperties)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .HaWC.CmdMsg.RectangleProperty properties = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->properties_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->properties(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.CmdMsg.RectangleProperties)
  return target;
}

size_t CmdMsg_RectangleProperties::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.CmdMsg.RectangleProperties)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .HaWC.CmdMsg.RectangleProperty properties = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->properties_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->properties(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CmdMsg_RectangleProperties::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.CmdMsg.RectangleProperties)
  GOOGLE_DCHECK_NE(&from, this);
  const CmdMsg_RectangleProperties* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CmdMsg_RectangleProperties>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.CmdMsg.RectangleProperties)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.CmdMsg.RectangleProperties)
    MergeFrom(*source);
  }
}

void CmdMsg_RectangleProperties::MergeFrom(const CmdMsg_RectangleProperties& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.CmdMsg.RectangleProperties)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  properties_.MergeFrom(from.properties_);
}

void CmdMsg_RectangleProperties::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.CmdMsg.RectangleProperties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CmdMsg_RectangleProperties::CopyFrom(const CmdMsg_RectangleProperties& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.CmdMsg.RectangleProperties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CmdMsg_RectangleProperties::IsInitialized() const {
  return true;
}

void CmdMsg_RectangleProperties::Swap(CmdMsg_RectangleProperties* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CmdMsg_RectangleProperties::InternalSwap(CmdMsg_RectangleProperties* other) {
  using std::swap;
  CastToBase(&properties_)->InternalSwap(CastToBase(&other->properties_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CmdMsg_RectangleProperties::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CmdMsg_ImageProperty::InitAsDefaultInstance() {
  ::HaWC::_CmdMsg_ImageProperty_default_instance_.visible_ = false;
  ::HaWC::_CmdMsg_ImageProperty_default_instance_.x_ = 0;
  ::HaWC::_CmdMsg_ImageProperty_default_instance_.y_ = 0;
  ::HaWC::_CmdMsg_ImageProperty_default_instance_.width_ = 0;
  ::HaWC::_CmdMsg_ImageProperty_default_instance_.height_ = 0;
  ::HaWC::_CmdMsg_ImageProperty_default_instance_.source_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::HaWC::_CmdMsg_ImageProperty_default_instance_.fillmode_ = 0;
  ::HaWC::_CmdMsg_ImageProperty_default_instance_.opacity_ = 0;
  ::HaWC::_CmdMsg_ImageProperty_default_instance_.rotation_ = 0;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CmdMsg_ImageProperty::kVisibleFieldNumber;
const int CmdMsg_ImageProperty::kXFieldNumber;
const int CmdMsg_ImageProperty::kYFieldNumber;
const int CmdMsg_ImageProperty::kWidthFieldNumber;
const int CmdMsg_ImageProperty::kHeightFieldNumber;
const int CmdMsg_ImageProperty::kSourceFieldNumber;
const int CmdMsg_ImageProperty::kFillModeFieldNumber;
const int CmdMsg_ImageProperty::kOpacityFieldNumber;
const int CmdMsg_ImageProperty::kRotationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CmdMsg_ImageProperty::CmdMsg_ImageProperty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_ImageProperty.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.CmdMsg.ImageProperty)
}
CmdMsg_ImageProperty::CmdMsg_ImageProperty(const CmdMsg_ImageProperty& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_property();
  switch (from.property_case()) {
    case kVisible: {
      set_visible(from.visible());
      break;
    }
    case kX: {
      set_x(from.x());
      break;
    }
    case kY: {
      set_y(from.y());
      break;
    }
    case kWidth: {
      set_width(from.width());
      break;
    }
    case kHeight: {
      set_height(from.height());
      break;
    }
    case kSource: {
      set_source(from.source());
      break;
    }
    case kFillMode: {
      set_fillmode(from.fillmode());
      break;
    }
    case kOpacity: {
      set_opacity(from.opacity());
      break;
    }
    case kRotation: {
      set_rotation(from.rotation());
      break;
    }
    case PROPERTY_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:HaWC.CmdMsg.ImageProperty)
}

void CmdMsg_ImageProperty::SharedCtor() {
  clear_has_property();
}

CmdMsg_ImageProperty::~CmdMsg_ImageProperty() {
  // @@protoc_insertion_point(destructor:HaWC.CmdMsg.ImageProperty)
  SharedDtor();
}

void CmdMsg_ImageProperty::SharedDtor() {
  if (has_property()) {
    clear_property();
  }
}

void CmdMsg_ImageProperty::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CmdMsg_ImageProperty::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CmdMsg_ImageProperty& CmdMsg_ImageProperty::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_CmdMsg_ImageProperty.base);
  return *internal_default_instance();
}


void CmdMsg_ImageProperty::clear_property() {
// @@protoc_insertion_point(one_of_clear_start:HaWC.CmdMsg.ImageProperty)
  switch (property_case()) {
    case kVisible: {
      // No need to clear
      break;
    }
    case kX: {
      // No need to clear
      break;
    }
    case kY: {
      // No need to clear
      break;
    }
    case kWidth: {
      // No need to clear
      break;
    }
    case kHeight: {
      // No need to clear
      break;
    }
    case kSource: {
      property_.source_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kFillMode: {
      // No need to clear
      break;
    }
    case kOpacity: {
      // No need to clear
      break;
    }
    case kRotation: {
      // No need to clear
      break;
    }
    case PROPERTY_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PROPERTY_NOT_SET;
}


void CmdMsg_ImageProperty::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.CmdMsg.ImageProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_property();
  _internal_metadata_.Clear();
}

bool CmdMsg_ImageProperty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.CmdMsg.ImageProperty)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool visible = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          clear_property();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &property_.visible_)));
          set_has_visible();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float x = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          clear_property();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &property_.x_)));
          set_has_x();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          clear_property();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &property_.y_)));
          set_has_y();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float width = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          clear_property();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &property_.width_)));
          set_has_width();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float height = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {
          clear_property();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &property_.height_)));
          set_has_height();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string source = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->source().data(), static_cast<int>(this->source().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HaWC.CmdMsg.ImageProperty.source"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .HaWC.CmdMsg.FillMode fillMode = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_fillmode(static_cast< ::HaWC::CmdMsg_FillMode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float opacity = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {
          clear_property();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &property_.opacity_)));
          set_has_opacity();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float rotation = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {
          clear_property();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &property_.rotation_)));
          set_has_rotation();
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.CmdMsg.ImageProperty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.CmdMsg.ImageProperty)
  return false;
#undef DO_
}

void CmdMsg_ImageProperty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.CmdMsg.ImageProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool visible = 1;
  if (has_visible()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->visible(), output);
  }

  // float x = 2;
  if (has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->x(), output);
  }

  // float y = 3;
  if (has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->y(), output);
  }

  // float width = 4;
  if (has_width()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->width(), output);
  }

  // float height = 5;
  if (has_height()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->height(), output);
  }

  // string source = 6;
  if (has_source()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source().data(), static_cast<int>(this->source().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.CmdMsg.ImageProperty.source");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->source(), output);
  }

  // .HaWC.CmdMsg.FillMode fillMode = 7;
  if (has_fillmode()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->fillmode(), output);
  }

  // float opacity = 8;
  if (has_opacity()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->opacity(), output);
  }

  // float rotation = 9;
  if (has_rotation()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->rotation(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.CmdMsg.ImageProperty)
}

::google::protobuf::uint8* CmdMsg_ImageProperty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.CmdMsg.ImageProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool visible = 1;
  if (has_visible()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->visible(), target);
  }

  // float x = 2;
  if (has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->x(), target);
  }

  // float y = 3;
  if (has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->y(), target);
  }

  // float width = 4;
  if (has_width()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->width(), target);
  }

  // float height = 5;
  if (has_height()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->height(), target);
  }

  // string source = 6;
  if (has_source()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source().data(), static_cast<int>(this->source().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.CmdMsg.ImageProperty.source");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->source(), target);
  }

  // .HaWC.CmdMsg.FillMode fillMode = 7;
  if (has_fillmode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->fillmode(), target);
  }

  // float opacity = 8;
  if (has_opacity()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->opacity(), target);
  }

  // float rotation = 9;
  if (has_rotation()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->rotation(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.CmdMsg.ImageProperty)
  return target;
}

size_t CmdMsg_ImageProperty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.CmdMsg.ImageProperty)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (property_case()) {
    // bool visible = 1;
    case kVisible: {
      total_size += 1 + 1;
      break;
    }
    // float x = 2;
    case kX: {
      total_size += 1 + 4;
      break;
    }
    // float y = 3;
    case kY: {
      total_size += 1 + 4;
      break;
    }
    // float width = 4;
    case kWidth: {
      total_size += 1 + 4;
      break;
    }
    // float height = 5;
    case kHeight: {
      total_size += 1 + 4;
      break;
    }
    // string source = 6;
    case kSource: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->source());
      break;
    }
    // .HaWC.CmdMsg.FillMode fillMode = 7;
    case kFillMode: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->fillmode());
      break;
    }
    // float opacity = 8;
    case kOpacity: {
      total_size += 1 + 4;
      break;
    }
    // float rotation = 9;
    case kRotation: {
      total_size += 1 + 4;
      break;
    }
    case PROPERTY_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CmdMsg_ImageProperty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.CmdMsg.ImageProperty)
  GOOGLE_DCHECK_NE(&from, this);
  const CmdMsg_ImageProperty* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CmdMsg_ImageProperty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.CmdMsg.ImageProperty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.CmdMsg.ImageProperty)
    MergeFrom(*source);
  }
}

void CmdMsg_ImageProperty::MergeFrom(const CmdMsg_ImageProperty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.CmdMsg.ImageProperty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.property_case()) {
    case kVisible: {
      set_visible(from.visible());
      break;
    }
    case kX: {
      set_x(from.x());
      break;
    }
    case kY: {
      set_y(from.y());
      break;
    }
    case kWidth: {
      set_width(from.width());
      break;
    }
    case kHeight: {
      set_height(from.height());
      break;
    }
    case kSource: {
      set_source(from.source());
      break;
    }
    case kFillMode: {
      set_fillmode(from.fillmode());
      break;
    }
    case kOpacity: {
      set_opacity(from.opacity());
      break;
    }
    case kRotation: {
      set_rotation(from.rotation());
      break;
    }
    case PROPERTY_NOT_SET: {
      break;
    }
  }
}

void CmdMsg_ImageProperty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.CmdMsg.ImageProperty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CmdMsg_ImageProperty::CopyFrom(const CmdMsg_ImageProperty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.CmdMsg.ImageProperty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CmdMsg_ImageProperty::IsInitialized() const {
  return true;
}

void CmdMsg_ImageProperty::Swap(CmdMsg_ImageProperty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CmdMsg_ImageProperty::InternalSwap(CmdMsg_ImageProperty* other) {
  using std::swap;
  swap(property_, other->property_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CmdMsg_ImageProperty::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CmdMsg_ImageProperties::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CmdMsg_ImageProperties::kPropertiesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CmdMsg_ImageProperties::CmdMsg_ImageProperties()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_ImageProperties.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.CmdMsg.ImageProperties)
}
CmdMsg_ImageProperties::CmdMsg_ImageProperties(const CmdMsg_ImageProperties& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      properties_(from.properties_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:HaWC.CmdMsg.ImageProperties)
}

void CmdMsg_ImageProperties::SharedCtor() {
}

CmdMsg_ImageProperties::~CmdMsg_ImageProperties() {
  // @@protoc_insertion_point(destructor:HaWC.CmdMsg.ImageProperties)
  SharedDtor();
}

void CmdMsg_ImageProperties::SharedDtor() {
}

void CmdMsg_ImageProperties::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CmdMsg_ImageProperties::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CmdMsg_ImageProperties& CmdMsg_ImageProperties::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_CmdMsg_ImageProperties.base);
  return *internal_default_instance();
}


void CmdMsg_ImageProperties::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.CmdMsg.ImageProperties)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  properties_.Clear();
  _internal_metadata_.Clear();
}

bool CmdMsg_ImageProperties::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.CmdMsg.ImageProperties)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .HaWC.CmdMsg.ImageProperty properties = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_properties()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.CmdMsg.ImageProperties)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.CmdMsg.ImageProperties)
  return false;
#undef DO_
}

void CmdMsg_ImageProperties::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.CmdMsg.ImageProperties)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .HaWC.CmdMsg.ImageProperty properties = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->properties_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->properties(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.CmdMsg.ImageProperties)
}

::google::protobuf::uint8* CmdMsg_ImageProperties::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.CmdMsg.ImageProperties)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .HaWC.CmdMsg.ImageProperty properties = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->properties_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->properties(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.CmdMsg.ImageProperties)
  return target;
}

size_t CmdMsg_ImageProperties::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.CmdMsg.ImageProperties)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .HaWC.CmdMsg.ImageProperty properties = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->properties_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->properties(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CmdMsg_ImageProperties::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.CmdMsg.ImageProperties)
  GOOGLE_DCHECK_NE(&from, this);
  const CmdMsg_ImageProperties* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CmdMsg_ImageProperties>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.CmdMsg.ImageProperties)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.CmdMsg.ImageProperties)
    MergeFrom(*source);
  }
}

void CmdMsg_ImageProperties::MergeFrom(const CmdMsg_ImageProperties& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.CmdMsg.ImageProperties)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  properties_.MergeFrom(from.properties_);
}

void CmdMsg_ImageProperties::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.CmdMsg.ImageProperties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CmdMsg_ImageProperties::CopyFrom(const CmdMsg_ImageProperties& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.CmdMsg.ImageProperties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CmdMsg_ImageProperties::IsInitialized() const {
  return true;
}

void CmdMsg_ImageProperties::Swap(CmdMsg_ImageProperties* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CmdMsg_ImageProperties::InternalSwap(CmdMsg_ImageProperties* other) {
  using std::swap;
  CastToBase(&properties_)->InternalSwap(CastToBase(&other->properties_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CmdMsg_ImageProperties::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CmdMsg_FileListProperty::InitAsDefaultInstance() {
  ::HaWC::_CmdMsg_FileListProperty_default_instance_.item_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CmdMsg_FileListProperty::kItemFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CmdMsg_FileListProperty::CmdMsg_FileListProperty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_FileListProperty.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.CmdMsg.FileListProperty)
}
CmdMsg_FileListProperty::CmdMsg_FileListProperty(const CmdMsg_FileListProperty& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_property();
  switch (from.property_case()) {
    case kItem: {
      set_item(from.item());
      break;
    }
    case PROPERTY_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:HaWC.CmdMsg.FileListProperty)
}

void CmdMsg_FileListProperty::SharedCtor() {
  clear_has_property();
}

CmdMsg_FileListProperty::~CmdMsg_FileListProperty() {
  // @@protoc_insertion_point(destructor:HaWC.CmdMsg.FileListProperty)
  SharedDtor();
}

void CmdMsg_FileListProperty::SharedDtor() {
  if (has_property()) {
    clear_property();
  }
}

void CmdMsg_FileListProperty::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CmdMsg_FileListProperty::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CmdMsg_FileListProperty& CmdMsg_FileListProperty::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_CmdMsg_FileListProperty.base);
  return *internal_default_instance();
}


void CmdMsg_FileListProperty::clear_property() {
// @@protoc_insertion_point(one_of_clear_start:HaWC.CmdMsg.FileListProperty)
  switch (property_case()) {
    case kItem: {
      property_.item_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case PROPERTY_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PROPERTY_NOT_SET;
}


void CmdMsg_FileListProperty::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.CmdMsg.FileListProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_property();
  _internal_metadata_.Clear();
}

bool CmdMsg_FileListProperty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.CmdMsg.FileListProperty)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string item = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->item().data(), static_cast<int>(this->item().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HaWC.CmdMsg.FileListProperty.item"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.CmdMsg.FileListProperty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.CmdMsg.FileListProperty)
  return false;
#undef DO_
}

void CmdMsg_FileListProperty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.CmdMsg.FileListProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string item = 1;
  if (has_item()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->item().data(), static_cast<int>(this->item().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.CmdMsg.FileListProperty.item");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->item(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.CmdMsg.FileListProperty)
}

::google::protobuf::uint8* CmdMsg_FileListProperty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.CmdMsg.FileListProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string item = 1;
  if (has_item()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->item().data(), static_cast<int>(this->item().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.CmdMsg.FileListProperty.item");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->item(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.CmdMsg.FileListProperty)
  return target;
}

size_t CmdMsg_FileListProperty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.CmdMsg.FileListProperty)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (property_case()) {
    // string item = 1;
    case kItem: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item());
      break;
    }
    case PROPERTY_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CmdMsg_FileListProperty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.CmdMsg.FileListProperty)
  GOOGLE_DCHECK_NE(&from, this);
  const CmdMsg_FileListProperty* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CmdMsg_FileListProperty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.CmdMsg.FileListProperty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.CmdMsg.FileListProperty)
    MergeFrom(*source);
  }
}

void CmdMsg_FileListProperty::MergeFrom(const CmdMsg_FileListProperty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.CmdMsg.FileListProperty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.property_case()) {
    case kItem: {
      set_item(from.item());
      break;
    }
    case PROPERTY_NOT_SET: {
      break;
    }
  }
}

void CmdMsg_FileListProperty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.CmdMsg.FileListProperty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CmdMsg_FileListProperty::CopyFrom(const CmdMsg_FileListProperty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.CmdMsg.FileListProperty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CmdMsg_FileListProperty::IsInitialized() const {
  return true;
}

void CmdMsg_FileListProperty::Swap(CmdMsg_FileListProperty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CmdMsg_FileListProperty::InternalSwap(CmdMsg_FileListProperty* other) {
  using std::swap;
  swap(property_, other->property_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CmdMsg_FileListProperty::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CmdMsg_FileListProperties::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CmdMsg_FileListProperties::kPropertiesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CmdMsg_FileListProperties::CmdMsg_FileListProperties()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_FileListProperties.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.CmdMsg.FileListProperties)
}
CmdMsg_FileListProperties::CmdMsg_FileListProperties(const CmdMsg_FileListProperties& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      properties_(from.properties_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:HaWC.CmdMsg.FileListProperties)
}

void CmdMsg_FileListProperties::SharedCtor() {
}

CmdMsg_FileListProperties::~CmdMsg_FileListProperties() {
  // @@protoc_insertion_point(destructor:HaWC.CmdMsg.FileListProperties)
  SharedDtor();
}

void CmdMsg_FileListProperties::SharedDtor() {
}

void CmdMsg_FileListProperties::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CmdMsg_FileListProperties::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CmdMsg_FileListProperties& CmdMsg_FileListProperties::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_CmdMsg_FileListProperties.base);
  return *internal_default_instance();
}


void CmdMsg_FileListProperties::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.CmdMsg.FileListProperties)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  properties_.Clear();
  _internal_metadata_.Clear();
}

bool CmdMsg_FileListProperties::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.CmdMsg.FileListProperties)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .HaWC.CmdMsg.FileListProperty properties = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_properties()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.CmdMsg.FileListProperties)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.CmdMsg.FileListProperties)
  return false;
#undef DO_
}

void CmdMsg_FileListProperties::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.CmdMsg.FileListProperties)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .HaWC.CmdMsg.FileListProperty properties = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->properties_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->properties(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.CmdMsg.FileListProperties)
}

::google::protobuf::uint8* CmdMsg_FileListProperties::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.CmdMsg.FileListProperties)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .HaWC.CmdMsg.FileListProperty properties = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->properties_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->properties(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.CmdMsg.FileListProperties)
  return target;
}

size_t CmdMsg_FileListProperties::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.CmdMsg.FileListProperties)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .HaWC.CmdMsg.FileListProperty properties = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->properties_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->properties(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CmdMsg_FileListProperties::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.CmdMsg.FileListProperties)
  GOOGLE_DCHECK_NE(&from, this);
  const CmdMsg_FileListProperties* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CmdMsg_FileListProperties>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.CmdMsg.FileListProperties)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.CmdMsg.FileListProperties)
    MergeFrom(*source);
  }
}

void CmdMsg_FileListProperties::MergeFrom(const CmdMsg_FileListProperties& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.CmdMsg.FileListProperties)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  properties_.MergeFrom(from.properties_);
}

void CmdMsg_FileListProperties::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.CmdMsg.FileListProperties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CmdMsg_FileListProperties::CopyFrom(const CmdMsg_FileListProperties& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.CmdMsg.FileListProperties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CmdMsg_FileListProperties::IsInitialized() const {
  return true;
}

void CmdMsg_FileListProperties::Swap(CmdMsg_FileListProperties* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CmdMsg_FileListProperties::InternalSwap(CmdMsg_FileListProperties* other) {
  using std::swap;
  CastToBase(&properties_)->InternalSwap(CastToBase(&other->properties_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CmdMsg_FileListProperties::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CmdMsg_ToolBarProperty::InitAsDefaultInstance() {
  ::HaWC::_CmdMsg_ToolBarProperty_default_instance_.visible_ = false;
  ::HaWC::_CmdMsg_ToolBarProperty_default_instance_.x_ = 0;
  ::HaWC::_CmdMsg_ToolBarProperty_default_instance_.y_ = 0;
  ::HaWC::_CmdMsg_ToolBarProperty_default_instance_.width_ = 0;
  ::HaWC::_CmdMsg_ToolBarProperty_default_instance_.height_ = 0;
  ::HaWC::_CmdMsg_ToolBarProperty_default_instance_.options____.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::HaWC::_CmdMsg_ToolBarProperty_default_instance_.iconsspacing_ = 0u;
  ::HaWC::_CmdMsg_ToolBarProperty_default_instance_.margins_ = 0u;
  ::HaWC::_CmdMsg_ToolBarProperty_default_instance_.isvertical_ = false;
  ::HaWC::_CmdMsg_ToolBarProperty_default_instance_.backcolor_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::HaWC::_CmdMsg_ToolBarProperty_default_instance_.selected_ = 0;
  ::HaWC::_CmdMsg_ToolBarProperty_default_instance_.selectedcolor_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::HaWC::_CmdMsg_ToolBarProperty_default_instance_.selectedbordercolor_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::HaWC::_CmdMsg_ToolBarProperty_default_instance_.selectedborderwidth_ = 0;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CmdMsg_ToolBarProperty::kVisibleFieldNumber;
const int CmdMsg_ToolBarProperty::kXFieldNumber;
const int CmdMsg_ToolBarProperty::kYFieldNumber;
const int CmdMsg_ToolBarProperty::kWidthFieldNumber;
const int CmdMsg_ToolBarProperty::kHeightFieldNumber;
const int CmdMsg_ToolBarProperty::kOptionsFieldNumber;
const int CmdMsg_ToolBarProperty::kIconsSpacingFieldNumber;
const int CmdMsg_ToolBarProperty::kMarginsFieldNumber;
const int CmdMsg_ToolBarProperty::kIsVerticalFieldNumber;
const int CmdMsg_ToolBarProperty::kBackColorFieldNumber;
const int CmdMsg_ToolBarProperty::kSelectedFieldNumber;
const int CmdMsg_ToolBarProperty::kSelectedColorFieldNumber;
const int CmdMsg_ToolBarProperty::kSelectedBorderColorFieldNumber;
const int CmdMsg_ToolBarProperty::kSelectedBorderWidthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CmdMsg_ToolBarProperty::CmdMsg_ToolBarProperty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_ToolBarProperty.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.CmdMsg.ToolBarProperty)
}
CmdMsg_ToolBarProperty::CmdMsg_ToolBarProperty(const CmdMsg_ToolBarProperty& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_property();
  switch (from.property_case()) {
    case kVisible: {
      set_visible(from.visible());
      break;
    }
    case kX: {
      set_x(from.x());
      break;
    }
    case kY: {
      set_y(from.y());
      break;
    }
    case kWidth: {
      set_width(from.width());
      break;
    }
    case kHeight: {
      set_height(from.height());
      break;
    }
    case kOptions: {
      set_options___(from.options___());
      break;
    }
    case kIconsSpacing: {
      set_iconsspacing(from.iconsspacing());
      break;
    }
    case kMargins: {
      set_margins(from.margins());
      break;
    }
    case kIsVertical: {
      set_isvertical(from.isvertical());
      break;
    }
    case kBackColor: {
      set_backcolor(from.backcolor());
      break;
    }
    case kSelected: {
      set_selected(from.selected());
      break;
    }
    case kSelectedColor: {
      set_selectedcolor(from.selectedcolor());
      break;
    }
    case kSelectedBorderColor: {
      set_selectedbordercolor(from.selectedbordercolor());
      break;
    }
    case kSelectedBorderWidth: {
      set_selectedborderwidth(from.selectedborderwidth());
      break;
    }
    case PROPERTY_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:HaWC.CmdMsg.ToolBarProperty)
}

void CmdMsg_ToolBarProperty::SharedCtor() {
  clear_has_property();
}

CmdMsg_ToolBarProperty::~CmdMsg_ToolBarProperty() {
  // @@protoc_insertion_point(destructor:HaWC.CmdMsg.ToolBarProperty)
  SharedDtor();
}

void CmdMsg_ToolBarProperty::SharedDtor() {
  if (has_property()) {
    clear_property();
  }
}

void CmdMsg_ToolBarProperty::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CmdMsg_ToolBarProperty::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CmdMsg_ToolBarProperty& CmdMsg_ToolBarProperty::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_CmdMsg_ToolBarProperty.base);
  return *internal_default_instance();
}


void CmdMsg_ToolBarProperty::clear_property() {
// @@protoc_insertion_point(one_of_clear_start:HaWC.CmdMsg.ToolBarProperty)
  switch (property_case()) {
    case kVisible: {
      // No need to clear
      break;
    }
    case kX: {
      // No need to clear
      break;
    }
    case kY: {
      // No need to clear
      break;
    }
    case kWidth: {
      // No need to clear
      break;
    }
    case kHeight: {
      // No need to clear
      break;
    }
    case kOptions: {
      property_.options____.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kIconsSpacing: {
      // No need to clear
      break;
    }
    case kMargins: {
      // No need to clear
      break;
    }
    case kIsVertical: {
      // No need to clear
      break;
    }
    case kBackColor: {
      property_.backcolor_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kSelected: {
      // No need to clear
      break;
    }
    case kSelectedColor: {
      property_.selectedcolor_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kSelectedBorderColor: {
      property_.selectedbordercolor_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kSelectedBorderWidth: {
      // No need to clear
      break;
    }
    case PROPERTY_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PROPERTY_NOT_SET;
}


void CmdMsg_ToolBarProperty::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.CmdMsg.ToolBarProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_property();
  _internal_metadata_.Clear();
}

bool CmdMsg_ToolBarProperty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.CmdMsg.ToolBarProperty)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool visible = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          clear_property();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &property_.visible_)));
          set_has_visible();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float x = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          clear_property();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &property_.x_)));
          set_has_x();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          clear_property();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &property_.y_)));
          set_has_y();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float width = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          clear_property();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &property_.width_)));
          set_has_width();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float height = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {
          clear_property();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &property_.height_)));
          set_has_height();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string options___ = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_options___()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->options___().data(), static_cast<int>(this->options___().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HaWC.CmdMsg.ToolBarProperty.options___"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 iconsSpacing = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          clear_property();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &property_.iconsspacing_)));
          set_has_iconsspacing();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 margins = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          clear_property();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &property_.margins_)));
          set_has_margins();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool isVertical = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          clear_property();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &property_.isvertical_)));
          set_has_isvertical();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string backColor = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_backcolor()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->backcolor().data(), static_cast<int>(this->backcolor().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HaWC.CmdMsg.ToolBarProperty.backColor"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 selected = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          clear_property();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &property_.selected_)));
          set_has_selected();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string selectedColor = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_selectedcolor()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->selectedcolor().data(), static_cast<int>(this->selectedcolor().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HaWC.CmdMsg.ToolBarProperty.selectedColor"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string selectedBorderColor = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_selectedbordercolor()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->selectedbordercolor().data(), static_cast<int>(this->selectedbordercolor().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HaWC.CmdMsg.ToolBarProperty.selectedBorderColor"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 selectedBorderWidth = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          clear_property();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &property_.selectedborderwidth_)));
          set_has_selectedborderwidth();
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.CmdMsg.ToolBarProperty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.CmdMsg.ToolBarProperty)
  return false;
#undef DO_
}

void CmdMsg_ToolBarProperty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.CmdMsg.ToolBarProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool visible = 1;
  if (has_visible()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->visible(), output);
  }

  // float x = 2;
  if (has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->x(), output);
  }

  // float y = 3;
  if (has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->y(), output);
  }

  // float width = 4;
  if (has_width()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->width(), output);
  }

  // float height = 5;
  if (has_height()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->height(), output);
  }

  // string options___ = 6;
  if (has_options___()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->options___().data(), static_cast<int>(this->options___().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.CmdMsg.ToolBarProperty.options___");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->options___(), output);
  }

  // uint32 iconsSpacing = 7;
  if (has_iconsspacing()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->iconsspacing(), output);
  }

  // uint32 margins = 8;
  if (has_margins()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->margins(), output);
  }

  // bool isVertical = 9;
  if (has_isvertical()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->isvertical(), output);
  }

  // string backColor = 10;
  if (has_backcolor()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->backcolor().data(), static_cast<int>(this->backcolor().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.CmdMsg.ToolBarProperty.backColor");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->backcolor(), output);
  }

  // int32 selected = 11;
  if (has_selected()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->selected(), output);
  }

  // string selectedColor = 12;
  if (has_selectedcolor()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->selectedcolor().data(), static_cast<int>(this->selectedcolor().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.CmdMsg.ToolBarProperty.selectedColor");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->selectedcolor(), output);
  }

  // string selectedBorderColor = 13;
  if (has_selectedbordercolor()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->selectedbordercolor().data(), static_cast<int>(this->selectedbordercolor().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.CmdMsg.ToolBarProperty.selectedBorderColor");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->selectedbordercolor(), output);
  }

  // int32 selectedBorderWidth = 14;
  if (has_selectedborderwidth()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->selectedborderwidth(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.CmdMsg.ToolBarProperty)
}

::google::protobuf::uint8* CmdMsg_ToolBarProperty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.CmdMsg.ToolBarProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool visible = 1;
  if (has_visible()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->visible(), target);
  }

  // float x = 2;
  if (has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->x(), target);
  }

  // float y = 3;
  if (has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->y(), target);
  }

  // float width = 4;
  if (has_width()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->width(), target);
  }

  // float height = 5;
  if (has_height()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->height(), target);
  }

  // string options___ = 6;
  if (has_options___()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->options___().data(), static_cast<int>(this->options___().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.CmdMsg.ToolBarProperty.options___");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->options___(), target);
  }

  // uint32 iconsSpacing = 7;
  if (has_iconsspacing()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->iconsspacing(), target);
  }

  // uint32 margins = 8;
  if (has_margins()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->margins(), target);
  }

  // bool isVertical = 9;
  if (has_isvertical()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->isvertical(), target);
  }

  // string backColor = 10;
  if (has_backcolor()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->backcolor().data(), static_cast<int>(this->backcolor().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.CmdMsg.ToolBarProperty.backColor");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->backcolor(), target);
  }

  // int32 selected = 11;
  if (has_selected()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->selected(), target);
  }

  // string selectedColor = 12;
  if (has_selectedcolor()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->selectedcolor().data(), static_cast<int>(this->selectedcolor().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.CmdMsg.ToolBarProperty.selectedColor");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->selectedcolor(), target);
  }

  // string selectedBorderColor = 13;
  if (has_selectedbordercolor()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->selectedbordercolor().data(), static_cast<int>(this->selectedbordercolor().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.CmdMsg.ToolBarProperty.selectedBorderColor");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->selectedbordercolor(), target);
  }

  // int32 selectedBorderWidth = 14;
  if (has_selectedborderwidth()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->selectedborderwidth(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.CmdMsg.ToolBarProperty)
  return target;
}

size_t CmdMsg_ToolBarProperty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.CmdMsg.ToolBarProperty)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (property_case()) {
    // bool visible = 1;
    case kVisible: {
      total_size += 1 + 1;
      break;
    }
    // float x = 2;
    case kX: {
      total_size += 1 + 4;
      break;
    }
    // float y = 3;
    case kY: {
      total_size += 1 + 4;
      break;
    }
    // float width = 4;
    case kWidth: {
      total_size += 1 + 4;
      break;
    }
    // float height = 5;
    case kHeight: {
      total_size += 1 + 4;
      break;
    }
    // string options___ = 6;
    case kOptions: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->options___());
      break;
    }
    // uint32 iconsSpacing = 7;
    case kIconsSpacing: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->iconsspacing());
      break;
    }
    // uint32 margins = 8;
    case kMargins: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->margins());
      break;
    }
    // bool isVertical = 9;
    case kIsVertical: {
      total_size += 1 + 1;
      break;
    }
    // string backColor = 10;
    case kBackColor: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->backcolor());
      break;
    }
    // int32 selected = 11;
    case kSelected: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->selected());
      break;
    }
    // string selectedColor = 12;
    case kSelectedColor: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->selectedcolor());
      break;
    }
    // string selectedBorderColor = 13;
    case kSelectedBorderColor: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->selectedbordercolor());
      break;
    }
    // int32 selectedBorderWidth = 14;
    case kSelectedBorderWidth: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->selectedborderwidth());
      break;
    }
    case PROPERTY_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CmdMsg_ToolBarProperty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.CmdMsg.ToolBarProperty)
  GOOGLE_DCHECK_NE(&from, this);
  const CmdMsg_ToolBarProperty* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CmdMsg_ToolBarProperty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.CmdMsg.ToolBarProperty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.CmdMsg.ToolBarProperty)
    MergeFrom(*source);
  }
}

void CmdMsg_ToolBarProperty::MergeFrom(const CmdMsg_ToolBarProperty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.CmdMsg.ToolBarProperty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.property_case()) {
    case kVisible: {
      set_visible(from.visible());
      break;
    }
    case kX: {
      set_x(from.x());
      break;
    }
    case kY: {
      set_y(from.y());
      break;
    }
    case kWidth: {
      set_width(from.width());
      break;
    }
    case kHeight: {
      set_height(from.height());
      break;
    }
    case kOptions: {
      set_options___(from.options___());
      break;
    }
    case kIconsSpacing: {
      set_iconsspacing(from.iconsspacing());
      break;
    }
    case kMargins: {
      set_margins(from.margins());
      break;
    }
    case kIsVertical: {
      set_isvertical(from.isvertical());
      break;
    }
    case kBackColor: {
      set_backcolor(from.backcolor());
      break;
    }
    case kSelected: {
      set_selected(from.selected());
      break;
    }
    case kSelectedColor: {
      set_selectedcolor(from.selectedcolor());
      break;
    }
    case kSelectedBorderColor: {
      set_selectedbordercolor(from.selectedbordercolor());
      break;
    }
    case kSelectedBorderWidth: {
      set_selectedborderwidth(from.selectedborderwidth());
      break;
    }
    case PROPERTY_NOT_SET: {
      break;
    }
  }
}

void CmdMsg_ToolBarProperty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.CmdMsg.ToolBarProperty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CmdMsg_ToolBarProperty::CopyFrom(const CmdMsg_ToolBarProperty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.CmdMsg.ToolBarProperty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CmdMsg_ToolBarProperty::IsInitialized() const {
  return true;
}

void CmdMsg_ToolBarProperty::Swap(CmdMsg_ToolBarProperty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CmdMsg_ToolBarProperty::InternalSwap(CmdMsg_ToolBarProperty* other) {
  using std::swap;
  swap(property_, other->property_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CmdMsg_ToolBarProperty::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CmdMsg_ListProperty::InitAsDefaultInstance() {
  ::HaWC::_CmdMsg_ListProperty_default_instance_.item_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CmdMsg_ListProperty::kItemFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CmdMsg_ListProperty::CmdMsg_ListProperty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_ListProperty.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.CmdMsg.ListProperty)
}
CmdMsg_ListProperty::CmdMsg_ListProperty(const CmdMsg_ListProperty& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_property();
  switch (from.property_case()) {
    case kItem: {
      set_item(from.item());
      break;
    }
    case PROPERTY_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:HaWC.CmdMsg.ListProperty)
}

void CmdMsg_ListProperty::SharedCtor() {
  clear_has_property();
}

CmdMsg_ListProperty::~CmdMsg_ListProperty() {
  // @@protoc_insertion_point(destructor:HaWC.CmdMsg.ListProperty)
  SharedDtor();
}

void CmdMsg_ListProperty::SharedDtor() {
  if (has_property()) {
    clear_property();
  }
}

void CmdMsg_ListProperty::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CmdMsg_ListProperty::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CmdMsg_ListProperty& CmdMsg_ListProperty::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_CmdMsg_ListProperty.base);
  return *internal_default_instance();
}


void CmdMsg_ListProperty::clear_property() {
// @@protoc_insertion_point(one_of_clear_start:HaWC.CmdMsg.ListProperty)
  switch (property_case()) {
    case kItem: {
      property_.item_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case PROPERTY_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PROPERTY_NOT_SET;
}


void CmdMsg_ListProperty::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.CmdMsg.ListProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_property();
  _internal_metadata_.Clear();
}

bool CmdMsg_ListProperty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.CmdMsg.ListProperty)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string item = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->item().data(), static_cast<int>(this->item().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HaWC.CmdMsg.ListProperty.item"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.CmdMsg.ListProperty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.CmdMsg.ListProperty)
  return false;
#undef DO_
}

void CmdMsg_ListProperty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.CmdMsg.ListProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string item = 1;
  if (has_item()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->item().data(), static_cast<int>(this->item().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.CmdMsg.ListProperty.item");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->item(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.CmdMsg.ListProperty)
}

::google::protobuf::uint8* CmdMsg_ListProperty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.CmdMsg.ListProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string item = 1;
  if (has_item()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->item().data(), static_cast<int>(this->item().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.CmdMsg.ListProperty.item");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->item(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.CmdMsg.ListProperty)
  return target;
}

size_t CmdMsg_ListProperty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.CmdMsg.ListProperty)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (property_case()) {
    // string item = 1;
    case kItem: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item());
      break;
    }
    case PROPERTY_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CmdMsg_ListProperty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.CmdMsg.ListProperty)
  GOOGLE_DCHECK_NE(&from, this);
  const CmdMsg_ListProperty* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CmdMsg_ListProperty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.CmdMsg.ListProperty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.CmdMsg.ListProperty)
    MergeFrom(*source);
  }
}

void CmdMsg_ListProperty::MergeFrom(const CmdMsg_ListProperty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.CmdMsg.ListProperty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.property_case()) {
    case kItem: {
      set_item(from.item());
      break;
    }
    case PROPERTY_NOT_SET: {
      break;
    }
  }
}

void CmdMsg_ListProperty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.CmdMsg.ListProperty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CmdMsg_ListProperty::CopyFrom(const CmdMsg_ListProperty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.CmdMsg.ListProperty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CmdMsg_ListProperty::IsInitialized() const {
  return true;
}

void CmdMsg_ListProperty::Swap(CmdMsg_ListProperty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CmdMsg_ListProperty::InternalSwap(CmdMsg_ListProperty* other) {
  using std::swap;
  swap(property_, other->property_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CmdMsg_ListProperty::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CmdMsg_ListProperties::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CmdMsg_ListProperties::kPropertiesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CmdMsg_ListProperties::CmdMsg_ListProperties()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_ListProperties.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.CmdMsg.ListProperties)
}
CmdMsg_ListProperties::CmdMsg_ListProperties(const CmdMsg_ListProperties& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      properties_(from.properties_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:HaWC.CmdMsg.ListProperties)
}

void CmdMsg_ListProperties::SharedCtor() {
}

CmdMsg_ListProperties::~CmdMsg_ListProperties() {
  // @@protoc_insertion_point(destructor:HaWC.CmdMsg.ListProperties)
  SharedDtor();
}

void CmdMsg_ListProperties::SharedDtor() {
}

void CmdMsg_ListProperties::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CmdMsg_ListProperties::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CmdMsg_ListProperties& CmdMsg_ListProperties::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_CmdMsg_ListProperties.base);
  return *internal_default_instance();
}


void CmdMsg_ListProperties::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.CmdMsg.ListProperties)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  properties_.Clear();
  _internal_metadata_.Clear();
}

bool CmdMsg_ListProperties::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.CmdMsg.ListProperties)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .HaWC.CmdMsg.ListProperty properties = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_properties()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.CmdMsg.ListProperties)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.CmdMsg.ListProperties)
  return false;
#undef DO_
}

void CmdMsg_ListProperties::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.CmdMsg.ListProperties)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .HaWC.CmdMsg.ListProperty properties = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->properties_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->properties(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.CmdMsg.ListProperties)
}

::google::protobuf::uint8* CmdMsg_ListProperties::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.CmdMsg.ListProperties)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .HaWC.CmdMsg.ListProperty properties = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->properties_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->properties(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.CmdMsg.ListProperties)
  return target;
}

size_t CmdMsg_ListProperties::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.CmdMsg.ListProperties)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .HaWC.CmdMsg.ListProperty properties = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->properties_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->properties(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CmdMsg_ListProperties::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.CmdMsg.ListProperties)
  GOOGLE_DCHECK_NE(&from, this);
  const CmdMsg_ListProperties* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CmdMsg_ListProperties>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.CmdMsg.ListProperties)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.CmdMsg.ListProperties)
    MergeFrom(*source);
  }
}

void CmdMsg_ListProperties::MergeFrom(const CmdMsg_ListProperties& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.CmdMsg.ListProperties)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  properties_.MergeFrom(from.properties_);
}

void CmdMsg_ListProperties::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.CmdMsg.ListProperties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CmdMsg_ListProperties::CopyFrom(const CmdMsg_ListProperties& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.CmdMsg.ListProperties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CmdMsg_ListProperties::IsInitialized() const {
  return true;
}

void CmdMsg_ListProperties::Swap(CmdMsg_ListProperties* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CmdMsg_ListProperties::InternalSwap(CmdMsg_ListProperties* other) {
  using std::swap;
  CastToBase(&properties_)->InternalSwap(CastToBase(&other->properties_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CmdMsg_ListProperties::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CmdMsg_ToolBarProperties::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CmdMsg_ToolBarProperties::kPropertiesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CmdMsg_ToolBarProperties::CmdMsg_ToolBarProperties()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_ToolBarProperties.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.CmdMsg.ToolBarProperties)
}
CmdMsg_ToolBarProperties::CmdMsg_ToolBarProperties(const CmdMsg_ToolBarProperties& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      properties_(from.properties_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:HaWC.CmdMsg.ToolBarProperties)
}

void CmdMsg_ToolBarProperties::SharedCtor() {
}

CmdMsg_ToolBarProperties::~CmdMsg_ToolBarProperties() {
  // @@protoc_insertion_point(destructor:HaWC.CmdMsg.ToolBarProperties)
  SharedDtor();
}

void CmdMsg_ToolBarProperties::SharedDtor() {
}

void CmdMsg_ToolBarProperties::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CmdMsg_ToolBarProperties::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CmdMsg_ToolBarProperties& CmdMsg_ToolBarProperties::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_CmdMsg_ToolBarProperties.base);
  return *internal_default_instance();
}


void CmdMsg_ToolBarProperties::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.CmdMsg.ToolBarProperties)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  properties_.Clear();
  _internal_metadata_.Clear();
}

bool CmdMsg_ToolBarProperties::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.CmdMsg.ToolBarProperties)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .HaWC.CmdMsg.ToolBarProperty properties = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_properties()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.CmdMsg.ToolBarProperties)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.CmdMsg.ToolBarProperties)
  return false;
#undef DO_
}

void CmdMsg_ToolBarProperties::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.CmdMsg.ToolBarProperties)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .HaWC.CmdMsg.ToolBarProperty properties = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->properties_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->properties(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.CmdMsg.ToolBarProperties)
}

::google::protobuf::uint8* CmdMsg_ToolBarProperties::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.CmdMsg.ToolBarProperties)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .HaWC.CmdMsg.ToolBarProperty properties = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->properties_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->properties(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.CmdMsg.ToolBarProperties)
  return target;
}

size_t CmdMsg_ToolBarProperties::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.CmdMsg.ToolBarProperties)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .HaWC.CmdMsg.ToolBarProperty properties = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->properties_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->properties(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CmdMsg_ToolBarProperties::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.CmdMsg.ToolBarProperties)
  GOOGLE_DCHECK_NE(&from, this);
  const CmdMsg_ToolBarProperties* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CmdMsg_ToolBarProperties>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.CmdMsg.ToolBarProperties)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.CmdMsg.ToolBarProperties)
    MergeFrom(*source);
  }
}

void CmdMsg_ToolBarProperties::MergeFrom(const CmdMsg_ToolBarProperties& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.CmdMsg.ToolBarProperties)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  properties_.MergeFrom(from.properties_);
}

void CmdMsg_ToolBarProperties::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.CmdMsg.ToolBarProperties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CmdMsg_ToolBarProperties::CopyFrom(const CmdMsg_ToolBarProperties& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.CmdMsg.ToolBarProperties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CmdMsg_ToolBarProperties::IsInitialized() const {
  return true;
}

void CmdMsg_ToolBarProperties::Swap(CmdMsg_ToolBarProperties* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CmdMsg_ToolBarProperties::InternalSwap(CmdMsg_ToolBarProperties* other) {
  using std::swap;
  CastToBase(&properties_)->InternalSwap(CastToBase(&other->properties_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CmdMsg_ToolBarProperties::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CmdMsg_MenuProperty::InitAsDefaultInstance() {
  ::HaWC::_CmdMsg_MenuProperty_default_instance_.visible_ = false;
  ::HaWC::_CmdMsg_MenuProperty_default_instance_.x_ = 0;
  ::HaWC::_CmdMsg_MenuProperty_default_instance_.y_ = 0;
  ::HaWC::_CmdMsg_MenuProperty_default_instance_.width_ = 0;
  ::HaWC::_CmdMsg_MenuProperty_default_instance_.itemheight_ = 0;
  ::HaWC::_CmdMsg_MenuProperty_default_instance_.options____.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::HaWC::_CmdMsg_MenuProperty_default_instance_.highlighttext_ = false;
  ::HaWC::_CmdMsg_MenuProperty_default_instance_.backcolor_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::HaWC::_CmdMsg_MenuProperty_default_instance_.textcolor_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::HaWC::_CmdMsg_MenuProperty_default_instance_.selectedcolor_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::HaWC::_CmdMsg_MenuProperty_default_instance_.selected_ = 0;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CmdMsg_MenuProperty::kVisibleFieldNumber;
const int CmdMsg_MenuProperty::kXFieldNumber;
const int CmdMsg_MenuProperty::kYFieldNumber;
const int CmdMsg_MenuProperty::kWidthFieldNumber;
const int CmdMsg_MenuProperty::kItemHeightFieldNumber;
const int CmdMsg_MenuProperty::kOptionsFieldNumber;
const int CmdMsg_MenuProperty::kHighlightTextFieldNumber;
const int CmdMsg_MenuProperty::kBackColorFieldNumber;
const int CmdMsg_MenuProperty::kTextColorFieldNumber;
const int CmdMsg_MenuProperty::kSelectedColorFieldNumber;
const int CmdMsg_MenuProperty::kSelectedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CmdMsg_MenuProperty::CmdMsg_MenuProperty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_MenuProperty.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.CmdMsg.MenuProperty)
}
CmdMsg_MenuProperty::CmdMsg_MenuProperty(const CmdMsg_MenuProperty& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_property();
  switch (from.property_case()) {
    case kVisible: {
      set_visible(from.visible());
      break;
    }
    case kX: {
      set_x(from.x());
      break;
    }
    case kY: {
      set_y(from.y());
      break;
    }
    case kWidth: {
      set_width(from.width());
      break;
    }
    case kItemHeight: {
      set_itemheight(from.itemheight());
      break;
    }
    case kOptions: {
      set_options___(from.options___());
      break;
    }
    case kHighlightText: {
      set_highlighttext(from.highlighttext());
      break;
    }
    case kBackColor: {
      set_backcolor(from.backcolor());
      break;
    }
    case kTextColor: {
      set_textcolor(from.textcolor());
      break;
    }
    case kSelectedColor: {
      set_selectedcolor(from.selectedcolor());
      break;
    }
    case kSelected: {
      set_selected(from.selected());
      break;
    }
    case PROPERTY_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:HaWC.CmdMsg.MenuProperty)
}

void CmdMsg_MenuProperty::SharedCtor() {
  clear_has_property();
}

CmdMsg_MenuProperty::~CmdMsg_MenuProperty() {
  // @@protoc_insertion_point(destructor:HaWC.CmdMsg.MenuProperty)
  SharedDtor();
}

void CmdMsg_MenuProperty::SharedDtor() {
  if (has_property()) {
    clear_property();
  }
}

void CmdMsg_MenuProperty::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CmdMsg_MenuProperty::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CmdMsg_MenuProperty& CmdMsg_MenuProperty::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_CmdMsg_MenuProperty.base);
  return *internal_default_instance();
}


void CmdMsg_MenuProperty::clear_property() {
// @@protoc_insertion_point(one_of_clear_start:HaWC.CmdMsg.MenuProperty)
  switch (property_case()) {
    case kVisible: {
      // No need to clear
      break;
    }
    case kX: {
      // No need to clear
      break;
    }
    case kY: {
      // No need to clear
      break;
    }
    case kWidth: {
      // No need to clear
      break;
    }
    case kItemHeight: {
      // No need to clear
      break;
    }
    case kOptions: {
      property_.options____.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kHighlightText: {
      // No need to clear
      break;
    }
    case kBackColor: {
      property_.backcolor_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kTextColor: {
      property_.textcolor_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kSelectedColor: {
      property_.selectedcolor_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kSelected: {
      // No need to clear
      break;
    }
    case PROPERTY_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PROPERTY_NOT_SET;
}


void CmdMsg_MenuProperty::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.CmdMsg.MenuProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_property();
  _internal_metadata_.Clear();
}

bool CmdMsg_MenuProperty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.CmdMsg.MenuProperty)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool visible = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          clear_property();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &property_.visible_)));
          set_has_visible();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float x = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          clear_property();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &property_.x_)));
          set_has_x();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          clear_property();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &property_.y_)));
          set_has_y();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float width = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          clear_property();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &property_.width_)));
          set_has_width();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float itemHeight = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {
          clear_property();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &property_.itemheight_)));
          set_has_itemheight();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string options___ = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_options___()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->options___().data(), static_cast<int>(this->options___().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HaWC.CmdMsg.MenuProperty.options___"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool highlightText = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          clear_property();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &property_.highlighttext_)));
          set_has_highlighttext();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string backColor = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_backcolor()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->backcolor().data(), static_cast<int>(this->backcolor().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HaWC.CmdMsg.MenuProperty.backColor"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string textColor = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_textcolor()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->textcolor().data(), static_cast<int>(this->textcolor().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HaWC.CmdMsg.MenuProperty.textColor"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string selectedColor = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_selectedcolor()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->selectedcolor().data(), static_cast<int>(this->selectedcolor().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HaWC.CmdMsg.MenuProperty.selectedColor"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 selected = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          clear_property();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &property_.selected_)));
          set_has_selected();
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.CmdMsg.MenuProperty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.CmdMsg.MenuProperty)
  return false;
#undef DO_
}

void CmdMsg_MenuProperty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.CmdMsg.MenuProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool visible = 1;
  if (has_visible()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->visible(), output);
  }

  // float x = 2;
  if (has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->x(), output);
  }

  // float y = 3;
  if (has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->y(), output);
  }

  // float width = 4;
  if (has_width()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->width(), output);
  }

  // float itemHeight = 5;
  if (has_itemheight()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->itemheight(), output);
  }

  // string options___ = 6;
  if (has_options___()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->options___().data(), static_cast<int>(this->options___().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.CmdMsg.MenuProperty.options___");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->options___(), output);
  }

  // bool highlightText = 7;
  if (has_highlighttext()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->highlighttext(), output);
  }

  // string backColor = 8;
  if (has_backcolor()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->backcolor().data(), static_cast<int>(this->backcolor().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.CmdMsg.MenuProperty.backColor");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->backcolor(), output);
  }

  // string textColor = 9;
  if (has_textcolor()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->textcolor().data(), static_cast<int>(this->textcolor().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.CmdMsg.MenuProperty.textColor");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->textcolor(), output);
  }

  // string selectedColor = 10;
  if (has_selectedcolor()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->selectedcolor().data(), static_cast<int>(this->selectedcolor().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.CmdMsg.MenuProperty.selectedColor");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->selectedcolor(), output);
  }

  // int32 selected = 11;
  if (has_selected()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->selected(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.CmdMsg.MenuProperty)
}

::google::protobuf::uint8* CmdMsg_MenuProperty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.CmdMsg.MenuProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool visible = 1;
  if (has_visible()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->visible(), target);
  }

  // float x = 2;
  if (has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->x(), target);
  }

  // float y = 3;
  if (has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->y(), target);
  }

  // float width = 4;
  if (has_width()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->width(), target);
  }

  // float itemHeight = 5;
  if (has_itemheight()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->itemheight(), target);
  }

  // string options___ = 6;
  if (has_options___()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->options___().data(), static_cast<int>(this->options___().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.CmdMsg.MenuProperty.options___");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->options___(), target);
  }

  // bool highlightText = 7;
  if (has_highlighttext()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->highlighttext(), target);
  }

  // string backColor = 8;
  if (has_backcolor()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->backcolor().data(), static_cast<int>(this->backcolor().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.CmdMsg.MenuProperty.backColor");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->backcolor(), target);
  }

  // string textColor = 9;
  if (has_textcolor()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->textcolor().data(), static_cast<int>(this->textcolor().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.CmdMsg.MenuProperty.textColor");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->textcolor(), target);
  }

  // string selectedColor = 10;
  if (has_selectedcolor()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->selectedcolor().data(), static_cast<int>(this->selectedcolor().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.CmdMsg.MenuProperty.selectedColor");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->selectedcolor(), target);
  }

  // int32 selected = 11;
  if (has_selected()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->selected(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.CmdMsg.MenuProperty)
  return target;
}

size_t CmdMsg_MenuProperty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.CmdMsg.MenuProperty)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (property_case()) {
    // bool visible = 1;
    case kVisible: {
      total_size += 1 + 1;
      break;
    }
    // float x = 2;
    case kX: {
      total_size += 1 + 4;
      break;
    }
    // float y = 3;
    case kY: {
      total_size += 1 + 4;
      break;
    }
    // float width = 4;
    case kWidth: {
      total_size += 1 + 4;
      break;
    }
    // float itemHeight = 5;
    case kItemHeight: {
      total_size += 1 + 4;
      break;
    }
    // string options___ = 6;
    case kOptions: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->options___());
      break;
    }
    // bool highlightText = 7;
    case kHighlightText: {
      total_size += 1 + 1;
      break;
    }
    // string backColor = 8;
    case kBackColor: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->backcolor());
      break;
    }
    // string textColor = 9;
    case kTextColor: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->textcolor());
      break;
    }
    // string selectedColor = 10;
    case kSelectedColor: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->selectedcolor());
      break;
    }
    // int32 selected = 11;
    case kSelected: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->selected());
      break;
    }
    case PROPERTY_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CmdMsg_MenuProperty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.CmdMsg.MenuProperty)
  GOOGLE_DCHECK_NE(&from, this);
  const CmdMsg_MenuProperty* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CmdMsg_MenuProperty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.CmdMsg.MenuProperty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.CmdMsg.MenuProperty)
    MergeFrom(*source);
  }
}

void CmdMsg_MenuProperty::MergeFrom(const CmdMsg_MenuProperty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.CmdMsg.MenuProperty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.property_case()) {
    case kVisible: {
      set_visible(from.visible());
      break;
    }
    case kX: {
      set_x(from.x());
      break;
    }
    case kY: {
      set_y(from.y());
      break;
    }
    case kWidth: {
      set_width(from.width());
      break;
    }
    case kItemHeight: {
      set_itemheight(from.itemheight());
      break;
    }
    case kOptions: {
      set_options___(from.options___());
      break;
    }
    case kHighlightText: {
      set_highlighttext(from.highlighttext());
      break;
    }
    case kBackColor: {
      set_backcolor(from.backcolor());
      break;
    }
    case kTextColor: {
      set_textcolor(from.textcolor());
      break;
    }
    case kSelectedColor: {
      set_selectedcolor(from.selectedcolor());
      break;
    }
    case kSelected: {
      set_selected(from.selected());
      break;
    }
    case PROPERTY_NOT_SET: {
      break;
    }
  }
}

void CmdMsg_MenuProperty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.CmdMsg.MenuProperty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CmdMsg_MenuProperty::CopyFrom(const CmdMsg_MenuProperty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.CmdMsg.MenuProperty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CmdMsg_MenuProperty::IsInitialized() const {
  return true;
}

void CmdMsg_MenuProperty::Swap(CmdMsg_MenuProperty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CmdMsg_MenuProperty::InternalSwap(CmdMsg_MenuProperty* other) {
  using std::swap;
  swap(property_, other->property_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CmdMsg_MenuProperty::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CmdMsg_MenuProperties::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CmdMsg_MenuProperties::kPropertiesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CmdMsg_MenuProperties::CmdMsg_MenuProperties()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_MenuProperties.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.CmdMsg.MenuProperties)
}
CmdMsg_MenuProperties::CmdMsg_MenuProperties(const CmdMsg_MenuProperties& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      properties_(from.properties_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:HaWC.CmdMsg.MenuProperties)
}

void CmdMsg_MenuProperties::SharedCtor() {
}

CmdMsg_MenuProperties::~CmdMsg_MenuProperties() {
  // @@protoc_insertion_point(destructor:HaWC.CmdMsg.MenuProperties)
  SharedDtor();
}

void CmdMsg_MenuProperties::SharedDtor() {
}

void CmdMsg_MenuProperties::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CmdMsg_MenuProperties::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CmdMsg_MenuProperties& CmdMsg_MenuProperties::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_CmdMsg_MenuProperties.base);
  return *internal_default_instance();
}


void CmdMsg_MenuProperties::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.CmdMsg.MenuProperties)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  properties_.Clear();
  _internal_metadata_.Clear();
}

bool CmdMsg_MenuProperties::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.CmdMsg.MenuProperties)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .HaWC.CmdMsg.MenuProperty properties = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_properties()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.CmdMsg.MenuProperties)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.CmdMsg.MenuProperties)
  return false;
#undef DO_
}

void CmdMsg_MenuProperties::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.CmdMsg.MenuProperties)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .HaWC.CmdMsg.MenuProperty properties = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->properties_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->properties(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.CmdMsg.MenuProperties)
}

::google::protobuf::uint8* CmdMsg_MenuProperties::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.CmdMsg.MenuProperties)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .HaWC.CmdMsg.MenuProperty properties = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->properties_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->properties(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.CmdMsg.MenuProperties)
  return target;
}

size_t CmdMsg_MenuProperties::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.CmdMsg.MenuProperties)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .HaWC.CmdMsg.MenuProperty properties = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->properties_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->properties(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CmdMsg_MenuProperties::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.CmdMsg.MenuProperties)
  GOOGLE_DCHECK_NE(&from, this);
  const CmdMsg_MenuProperties* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CmdMsg_MenuProperties>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.CmdMsg.MenuProperties)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.CmdMsg.MenuProperties)
    MergeFrom(*source);
  }
}

void CmdMsg_MenuProperties::MergeFrom(const CmdMsg_MenuProperties& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.CmdMsg.MenuProperties)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  properties_.MergeFrom(from.properties_);
}

void CmdMsg_MenuProperties::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.CmdMsg.MenuProperties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CmdMsg_MenuProperties::CopyFrom(const CmdMsg_MenuProperties& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.CmdMsg.MenuProperties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CmdMsg_MenuProperties::IsInitialized() const {
  return true;
}

void CmdMsg_MenuProperties::Swap(CmdMsg_MenuProperties* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CmdMsg_MenuProperties::InternalSwap(CmdMsg_MenuProperties* other) {
  using std::swap;
  CastToBase(&properties_)->InternalSwap(CastToBase(&other->properties_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CmdMsg_MenuProperties::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CmdMsg_LabelProperty::InitAsDefaultInstance() {
  ::HaWC::_CmdMsg_LabelProperty_default_instance_.visible_ = false;
  ::HaWC::_CmdMsg_LabelProperty_default_instance_.x_ = 0;
  ::HaWC::_CmdMsg_LabelProperty_default_instance_.y_ = 0;
  ::HaWC::_CmdMsg_LabelProperty_default_instance_.width_ = 0;
  ::HaWC::_CmdMsg_LabelProperty_default_instance_.height_ = 0;
  ::HaWC::_CmdMsg_LabelProperty_default_instance_.text_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::HaWC::_CmdMsg_LabelProperty_default_instance_.font_family_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::HaWC::_CmdMsg_LabelProperty_default_instance_.font_pointsize_ = 0;
  ::HaWC::_CmdMsg_LabelProperty_default_instance_.color_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::HaWC::_CmdMsg_LabelProperty_default_instance_.opacity_ = 0;
  ::HaWC::_CmdMsg_LabelProperty_default_instance_.rotation_ = 0;
  ::HaWC::_CmdMsg_LabelProperty_default_instance_.wrapmode_ = 0;
  ::HaWC::_CmdMsg_LabelProperty_default_instance_.textformat_ = 0;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CmdMsg_LabelProperty::kVisibleFieldNumber;
const int CmdMsg_LabelProperty::kXFieldNumber;
const int CmdMsg_LabelProperty::kYFieldNumber;
const int CmdMsg_LabelProperty::kWidthFieldNumber;
const int CmdMsg_LabelProperty::kHeightFieldNumber;
const int CmdMsg_LabelProperty::kTextFieldNumber;
const int CmdMsg_LabelProperty::kFontFamilyFieldNumber;
const int CmdMsg_LabelProperty::kFontPointSizeFieldNumber;
const int CmdMsg_LabelProperty::kColorFieldNumber;
const int CmdMsg_LabelProperty::kOpacityFieldNumber;
const int CmdMsg_LabelProperty::kRotationFieldNumber;
const int CmdMsg_LabelProperty::kWrapModeFieldNumber;
const int CmdMsg_LabelProperty::kTextFormatFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CmdMsg_LabelProperty::CmdMsg_LabelProperty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_LabelProperty.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.CmdMsg.LabelProperty)
}
CmdMsg_LabelProperty::CmdMsg_LabelProperty(const CmdMsg_LabelProperty& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_property();
  switch (from.property_case()) {
    case kVisible: {
      set_visible(from.visible());
      break;
    }
    case kX: {
      set_x(from.x());
      break;
    }
    case kY: {
      set_y(from.y());
      break;
    }
    case kWidth: {
      set_width(from.width());
      break;
    }
    case kHeight: {
      set_height(from.height());
      break;
    }
    case kText: {
      set_text(from.text());
      break;
    }
    case kFontFamily: {
      set_font_family(from.font_family());
      break;
    }
    case kFontPointSize: {
      set_font_pointsize(from.font_pointsize());
      break;
    }
    case kColor: {
      set_color(from.color());
      break;
    }
    case kOpacity: {
      set_opacity(from.opacity());
      break;
    }
    case kRotation: {
      set_rotation(from.rotation());
      break;
    }
    case kWrapMode: {
      set_wrapmode(from.wrapmode());
      break;
    }
    case kTextFormat: {
      set_textformat(from.textformat());
      break;
    }
    case PROPERTY_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:HaWC.CmdMsg.LabelProperty)
}

void CmdMsg_LabelProperty::SharedCtor() {
  clear_has_property();
}

CmdMsg_LabelProperty::~CmdMsg_LabelProperty() {
  // @@protoc_insertion_point(destructor:HaWC.CmdMsg.LabelProperty)
  SharedDtor();
}

void CmdMsg_LabelProperty::SharedDtor() {
  if (has_property()) {
    clear_property();
  }
}

void CmdMsg_LabelProperty::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CmdMsg_LabelProperty::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CmdMsg_LabelProperty& CmdMsg_LabelProperty::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_CmdMsg_LabelProperty.base);
  return *internal_default_instance();
}


void CmdMsg_LabelProperty::clear_property() {
// @@protoc_insertion_point(one_of_clear_start:HaWC.CmdMsg.LabelProperty)
  switch (property_case()) {
    case kVisible: {
      // No need to clear
      break;
    }
    case kX: {
      // No need to clear
      break;
    }
    case kY: {
      // No need to clear
      break;
    }
    case kWidth: {
      // No need to clear
      break;
    }
    case kHeight: {
      // No need to clear
      break;
    }
    case kText: {
      property_.text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kFontFamily: {
      property_.font_family_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kFontPointSize: {
      // No need to clear
      break;
    }
    case kColor: {
      property_.color_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kOpacity: {
      // No need to clear
      break;
    }
    case kRotation: {
      // No need to clear
      break;
    }
    case kWrapMode: {
      // No need to clear
      break;
    }
    case kTextFormat: {
      // No need to clear
      break;
    }
    case PROPERTY_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PROPERTY_NOT_SET;
}


void CmdMsg_LabelProperty::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.CmdMsg.LabelProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_property();
  _internal_metadata_.Clear();
}

bool CmdMsg_LabelProperty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.CmdMsg.LabelProperty)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool visible = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          clear_property();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &property_.visible_)));
          set_has_visible();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float x = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          clear_property();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &property_.x_)));
          set_has_x();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          clear_property();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &property_.y_)));
          set_has_y();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float width = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          clear_property();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &property_.width_)));
          set_has_width();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float height = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {
          clear_property();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &property_.height_)));
          set_has_height();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string text = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HaWC.CmdMsg.LabelProperty.text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string font_family = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_font_family()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->font_family().data(), static_cast<int>(this->font_family().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HaWC.CmdMsg.LabelProperty.font_family"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float font_pointSize = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {
          clear_property();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &property_.font_pointsize_)));
          set_has_font_pointsize();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string color = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_color()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->color().data(), static_cast<int>(this->color().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HaWC.CmdMsg.LabelProperty.color"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float opacity = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(85u /* 85 & 0xFF */)) {
          clear_property();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &property_.opacity_)));
          set_has_opacity();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float rotation = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(93u /* 93 & 0xFF */)) {
          clear_property();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &property_.rotation_)));
          set_has_rotation();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .HaWC.CmdMsg.WrapMode wrapMode = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_wrapmode(static_cast< ::HaWC::CmdMsg_WrapMode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .HaWC.CmdMsg.TextFormat textFormat = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_textformat(static_cast< ::HaWC::CmdMsg_TextFormat >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.CmdMsg.LabelProperty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.CmdMsg.LabelProperty)
  return false;
#undef DO_
}

void CmdMsg_LabelProperty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.CmdMsg.LabelProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool visible = 1;
  if (has_visible()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->visible(), output);
  }

  // float x = 2;
  if (has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->x(), output);
  }

  // float y = 3;
  if (has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->y(), output);
  }

  // float width = 4;
  if (has_width()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->width(), output);
  }

  // float height = 5;
  if (has_height()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->height(), output);
  }

  // string text = 6;
  if (has_text()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.CmdMsg.LabelProperty.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->text(), output);
  }

  // string font_family = 7;
  if (has_font_family()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->font_family().data(), static_cast<int>(this->font_family().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.CmdMsg.LabelProperty.font_family");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->font_family(), output);
  }

  // float font_pointSize = 8;
  if (has_font_pointsize()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->font_pointsize(), output);
  }

  // string color = 9;
  if (has_color()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->color().data(), static_cast<int>(this->color().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.CmdMsg.LabelProperty.color");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->color(), output);
  }

  // float opacity = 10;
  if (has_opacity()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->opacity(), output);
  }

  // float rotation = 11;
  if (has_rotation()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(11, this->rotation(), output);
  }

  // .HaWC.CmdMsg.WrapMode wrapMode = 12;
  if (has_wrapmode()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      12, this->wrapmode(), output);
  }

  // .HaWC.CmdMsg.TextFormat textFormat = 13;
  if (has_textformat()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      13, this->textformat(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.CmdMsg.LabelProperty)
}

::google::protobuf::uint8* CmdMsg_LabelProperty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.CmdMsg.LabelProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool visible = 1;
  if (has_visible()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->visible(), target);
  }

  // float x = 2;
  if (has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->x(), target);
  }

  // float y = 3;
  if (has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->y(), target);
  }

  // float width = 4;
  if (has_width()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->width(), target);
  }

  // float height = 5;
  if (has_height()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->height(), target);
  }

  // string text = 6;
  if (has_text()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.CmdMsg.LabelProperty.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->text(), target);
  }

  // string font_family = 7;
  if (has_font_family()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->font_family().data(), static_cast<int>(this->font_family().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.CmdMsg.LabelProperty.font_family");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->font_family(), target);
  }

  // float font_pointSize = 8;
  if (has_font_pointsize()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->font_pointsize(), target);
  }

  // string color = 9;
  if (has_color()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->color().data(), static_cast<int>(this->color().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.CmdMsg.LabelProperty.color");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->color(), target);
  }

  // float opacity = 10;
  if (has_opacity()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->opacity(), target);
  }

  // float rotation = 11;
  if (has_rotation()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(11, this->rotation(), target);
  }

  // .HaWC.CmdMsg.WrapMode wrapMode = 12;
  if (has_wrapmode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      12, this->wrapmode(), target);
  }

  // .HaWC.CmdMsg.TextFormat textFormat = 13;
  if (has_textformat()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      13, this->textformat(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.CmdMsg.LabelProperty)
  return target;
}

size_t CmdMsg_LabelProperty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.CmdMsg.LabelProperty)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (property_case()) {
    // bool visible = 1;
    case kVisible: {
      total_size += 1 + 1;
      break;
    }
    // float x = 2;
    case kX: {
      total_size += 1 + 4;
      break;
    }
    // float y = 3;
    case kY: {
      total_size += 1 + 4;
      break;
    }
    // float width = 4;
    case kWidth: {
      total_size += 1 + 4;
      break;
    }
    // float height = 5;
    case kHeight: {
      total_size += 1 + 4;
      break;
    }
    // string text = 6;
    case kText: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->text());
      break;
    }
    // string font_family = 7;
    case kFontFamily: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->font_family());
      break;
    }
    // float font_pointSize = 8;
    case kFontPointSize: {
      total_size += 1 + 4;
      break;
    }
    // string color = 9;
    case kColor: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->color());
      break;
    }
    // float opacity = 10;
    case kOpacity: {
      total_size += 1 + 4;
      break;
    }
    // float rotation = 11;
    case kRotation: {
      total_size += 1 + 4;
      break;
    }
    // .HaWC.CmdMsg.WrapMode wrapMode = 12;
    case kWrapMode: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->wrapmode());
      break;
    }
    // .HaWC.CmdMsg.TextFormat textFormat = 13;
    case kTextFormat: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->textformat());
      break;
    }
    case PROPERTY_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CmdMsg_LabelProperty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.CmdMsg.LabelProperty)
  GOOGLE_DCHECK_NE(&from, this);
  const CmdMsg_LabelProperty* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CmdMsg_LabelProperty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.CmdMsg.LabelProperty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.CmdMsg.LabelProperty)
    MergeFrom(*source);
  }
}

void CmdMsg_LabelProperty::MergeFrom(const CmdMsg_LabelProperty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.CmdMsg.LabelProperty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.property_case()) {
    case kVisible: {
      set_visible(from.visible());
      break;
    }
    case kX: {
      set_x(from.x());
      break;
    }
    case kY: {
      set_y(from.y());
      break;
    }
    case kWidth: {
      set_width(from.width());
      break;
    }
    case kHeight: {
      set_height(from.height());
      break;
    }
    case kText: {
      set_text(from.text());
      break;
    }
    case kFontFamily: {
      set_font_family(from.font_family());
      break;
    }
    case kFontPointSize: {
      set_font_pointsize(from.font_pointsize());
      break;
    }
    case kColor: {
      set_color(from.color());
      break;
    }
    case kOpacity: {
      set_opacity(from.opacity());
      break;
    }
    case kRotation: {
      set_rotation(from.rotation());
      break;
    }
    case kWrapMode: {
      set_wrapmode(from.wrapmode());
      break;
    }
    case kTextFormat: {
      set_textformat(from.textformat());
      break;
    }
    case PROPERTY_NOT_SET: {
      break;
    }
  }
}

void CmdMsg_LabelProperty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.CmdMsg.LabelProperty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CmdMsg_LabelProperty::CopyFrom(const CmdMsg_LabelProperty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.CmdMsg.LabelProperty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CmdMsg_LabelProperty::IsInitialized() const {
  return true;
}

void CmdMsg_LabelProperty::Swap(CmdMsg_LabelProperty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CmdMsg_LabelProperty::InternalSwap(CmdMsg_LabelProperty* other) {
  using std::swap;
  swap(property_, other->property_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CmdMsg_LabelProperty::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CmdMsg_LabelProperties::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CmdMsg_LabelProperties::kPropertiesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CmdMsg_LabelProperties::CmdMsg_LabelProperties()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_LabelProperties.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.CmdMsg.LabelProperties)
}
CmdMsg_LabelProperties::CmdMsg_LabelProperties(const CmdMsg_LabelProperties& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      properties_(from.properties_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:HaWC.CmdMsg.LabelProperties)
}

void CmdMsg_LabelProperties::SharedCtor() {
}

CmdMsg_LabelProperties::~CmdMsg_LabelProperties() {
  // @@protoc_insertion_point(destructor:HaWC.CmdMsg.LabelProperties)
  SharedDtor();
}

void CmdMsg_LabelProperties::SharedDtor() {
}

void CmdMsg_LabelProperties::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CmdMsg_LabelProperties::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CmdMsg_LabelProperties& CmdMsg_LabelProperties::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_CmdMsg_LabelProperties.base);
  return *internal_default_instance();
}


void CmdMsg_LabelProperties::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.CmdMsg.LabelProperties)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  properties_.Clear();
  _internal_metadata_.Clear();
}

bool CmdMsg_LabelProperties::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.CmdMsg.LabelProperties)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .HaWC.CmdMsg.LabelProperty properties = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_properties()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.CmdMsg.LabelProperties)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.CmdMsg.LabelProperties)
  return false;
#undef DO_
}

void CmdMsg_LabelProperties::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.CmdMsg.LabelProperties)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .HaWC.CmdMsg.LabelProperty properties = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->properties_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->properties(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.CmdMsg.LabelProperties)
}

::google::protobuf::uint8* CmdMsg_LabelProperties::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.CmdMsg.LabelProperties)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .HaWC.CmdMsg.LabelProperty properties = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->properties_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->properties(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.CmdMsg.LabelProperties)
  return target;
}

size_t CmdMsg_LabelProperties::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.CmdMsg.LabelProperties)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .HaWC.CmdMsg.LabelProperty properties = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->properties_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->properties(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CmdMsg_LabelProperties::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.CmdMsg.LabelProperties)
  GOOGLE_DCHECK_NE(&from, this);
  const CmdMsg_LabelProperties* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CmdMsg_LabelProperties>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.CmdMsg.LabelProperties)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.CmdMsg.LabelProperties)
    MergeFrom(*source);
  }
}

void CmdMsg_LabelProperties::MergeFrom(const CmdMsg_LabelProperties& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.CmdMsg.LabelProperties)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  properties_.MergeFrom(from.properties_);
}

void CmdMsg_LabelProperties::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.CmdMsg.LabelProperties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CmdMsg_LabelProperties::CopyFrom(const CmdMsg_LabelProperties& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.CmdMsg.LabelProperties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CmdMsg_LabelProperties::IsInitialized() const {
  return true;
}

void CmdMsg_LabelProperties::Swap(CmdMsg_LabelProperties* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CmdMsg_LabelProperties::InternalSwap(CmdMsg_LabelProperties* other) {
  using std::swap;
  CastToBase(&properties_)->InternalSwap(CastToBase(&other->properties_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CmdMsg_LabelProperties::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CmdMsg_Component::InitAsDefaultInstance() {
  ::HaWC::_CmdMsg_Component_default_instance_.line_ = const_cast< ::HaWC::CmdMsg_LineProperties*>(
      ::HaWC::CmdMsg_LineProperties::internal_default_instance());
  ::HaWC::_CmdMsg_Component_default_instance_.circle_ = const_cast< ::HaWC::CmdMsg_CircleProperties*>(
      ::HaWC::CmdMsg_CircleProperties::internal_default_instance());
  ::HaWC::_CmdMsg_Component_default_instance_.rectangle_ = const_cast< ::HaWC::CmdMsg_RectangleProperties*>(
      ::HaWC::CmdMsg_RectangleProperties::internal_default_instance());
  ::HaWC::_CmdMsg_Component_default_instance_.image_ = const_cast< ::HaWC::CmdMsg_ImageProperties*>(
      ::HaWC::CmdMsg_ImageProperties::internal_default_instance());
  ::HaWC::_CmdMsg_Component_default_instance_.filelist_ = const_cast< ::HaWC::CmdMsg_FileListProperties*>(
      ::HaWC::CmdMsg_FileListProperties::internal_default_instance());
  ::HaWC::_CmdMsg_Component_default_instance_.toolbar_ = const_cast< ::HaWC::CmdMsg_ToolBarProperties*>(
      ::HaWC::CmdMsg_ToolBarProperties::internal_default_instance());
  ::HaWC::_CmdMsg_Component_default_instance_.list_ = const_cast< ::HaWC::CmdMsg_ListProperties*>(
      ::HaWC::CmdMsg_ListProperties::internal_default_instance());
  ::HaWC::_CmdMsg_Component_default_instance_.menu_ = const_cast< ::HaWC::CmdMsg_MenuProperties*>(
      ::HaWC::CmdMsg_MenuProperties::internal_default_instance());
  ::HaWC::_CmdMsg_Component_default_instance_.text_ = const_cast< ::HaWC::CmdMsg_LabelProperties*>(
      ::HaWC::CmdMsg_LabelProperties::internal_default_instance());
}
void CmdMsg_Component::set_allocated_line(::HaWC::CmdMsg_LineProperties* line) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_properties();
  if (line) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      line = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, line, submessage_arena);
    }
    set_has_line();
    properties_.line_ = line;
  }
  // @@protoc_insertion_point(field_set_allocated:HaWC.CmdMsg.Component.line)
}
void CmdMsg_Component::set_allocated_circle(::HaWC::CmdMsg_CircleProperties* circle) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_properties();
  if (circle) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      circle = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, circle, submessage_arena);
    }
    set_has_circle();
    properties_.circle_ = circle;
  }
  // @@protoc_insertion_point(field_set_allocated:HaWC.CmdMsg.Component.circle)
}
void CmdMsg_Component::set_allocated_rectangle(::HaWC::CmdMsg_RectangleProperties* rectangle) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_properties();
  if (rectangle) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rectangle = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rectangle, submessage_arena);
    }
    set_has_rectangle();
    properties_.rectangle_ = rectangle;
  }
  // @@protoc_insertion_point(field_set_allocated:HaWC.CmdMsg.Component.rectangle)
}
void CmdMsg_Component::set_allocated_image(::HaWC::CmdMsg_ImageProperties* image) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_properties();
  if (image) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      image = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, image, submessage_arena);
    }
    set_has_image();
    properties_.image_ = image;
  }
  // @@protoc_insertion_point(field_set_allocated:HaWC.CmdMsg.Component.image)
}
void CmdMsg_Component::set_allocated_filelist(::HaWC::CmdMsg_FileListProperties* filelist) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_properties();
  if (filelist) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      filelist = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, filelist, submessage_arena);
    }
    set_has_filelist();
    properties_.filelist_ = filelist;
  }
  // @@protoc_insertion_point(field_set_allocated:HaWC.CmdMsg.Component.fileList)
}
void CmdMsg_Component::set_allocated_toolbar(::HaWC::CmdMsg_ToolBarProperties* toolbar) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_properties();
  if (toolbar) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      toolbar = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, toolbar, submessage_arena);
    }
    set_has_toolbar();
    properties_.toolbar_ = toolbar;
  }
  // @@protoc_insertion_point(field_set_allocated:HaWC.CmdMsg.Component.toolbar)
}
void CmdMsg_Component::set_allocated_list(::HaWC::CmdMsg_ListProperties* list) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_properties();
  if (list) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      list = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, list, submessage_arena);
    }
    set_has_list();
    properties_.list_ = list;
  }
  // @@protoc_insertion_point(field_set_allocated:HaWC.CmdMsg.Component.list)
}
void CmdMsg_Component::set_allocated_menu(::HaWC::CmdMsg_MenuProperties* menu) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_properties();
  if (menu) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      menu = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, menu, submessage_arena);
    }
    set_has_menu();
    properties_.menu_ = menu;
  }
  // @@protoc_insertion_point(field_set_allocated:HaWC.CmdMsg.Component.menu)
}
void CmdMsg_Component::set_allocated_text(::HaWC::CmdMsg_LabelProperties* text) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_properties();
  if (text) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      text = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, text, submessage_arena);
    }
    set_has_text();
    properties_.text_ = text;
  }
  // @@protoc_insertion_point(field_set_allocated:HaWC.CmdMsg.Component.text)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CmdMsg_Component::kObjectNameFieldNumber;
const int CmdMsg_Component::kLineFieldNumber;
const int CmdMsg_Component::kCircleFieldNumber;
const int CmdMsg_Component::kRectangleFieldNumber;
const int CmdMsg_Component::kImageFieldNumber;
const int CmdMsg_Component::kFileListFieldNumber;
const int CmdMsg_Component::kToolbarFieldNumber;
const int CmdMsg_Component::kListFieldNumber;
const int CmdMsg_Component::kMenuFieldNumber;
const int CmdMsg_Component::kTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CmdMsg_Component::CmdMsg_Component()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_Component.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.CmdMsg.Component)
}
CmdMsg_Component::CmdMsg_Component(const CmdMsg_Component& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  objectname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.objectname().size() > 0) {
    objectname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.objectname_);
  }
  clear_has_properties();
  switch (from.properties_case()) {
    case kLine: {
      mutable_line()->::HaWC::CmdMsg_LineProperties::MergeFrom(from.line());
      break;
    }
    case kCircle: {
      mutable_circle()->::HaWC::CmdMsg_CircleProperties::MergeFrom(from.circle());
      break;
    }
    case kRectangle: {
      mutable_rectangle()->::HaWC::CmdMsg_RectangleProperties::MergeFrom(from.rectangle());
      break;
    }
    case kImage: {
      mutable_image()->::HaWC::CmdMsg_ImageProperties::MergeFrom(from.image());
      break;
    }
    case kFileList: {
      mutable_filelist()->::HaWC::CmdMsg_FileListProperties::MergeFrom(from.filelist());
      break;
    }
    case kToolbar: {
      mutable_toolbar()->::HaWC::CmdMsg_ToolBarProperties::MergeFrom(from.toolbar());
      break;
    }
    case kList: {
      mutable_list()->::HaWC::CmdMsg_ListProperties::MergeFrom(from.list());
      break;
    }
    case kMenu: {
      mutable_menu()->::HaWC::CmdMsg_MenuProperties::MergeFrom(from.menu());
      break;
    }
    case kText: {
      mutable_text()->::HaWC::CmdMsg_LabelProperties::MergeFrom(from.text());
      break;
    }
    case PROPERTIES_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:HaWC.CmdMsg.Component)
}

void CmdMsg_Component::SharedCtor() {
  objectname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_properties();
}

CmdMsg_Component::~CmdMsg_Component() {
  // @@protoc_insertion_point(destructor:HaWC.CmdMsg.Component)
  SharedDtor();
}

void CmdMsg_Component::SharedDtor() {
  objectname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_properties()) {
    clear_properties();
  }
}

void CmdMsg_Component::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CmdMsg_Component::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CmdMsg_Component& CmdMsg_Component::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_CmdMsg_Component.base);
  return *internal_default_instance();
}


void CmdMsg_Component::clear_properties() {
// @@protoc_insertion_point(one_of_clear_start:HaWC.CmdMsg.Component)
  switch (properties_case()) {
    case kLine: {
      delete properties_.line_;
      break;
    }
    case kCircle: {
      delete properties_.circle_;
      break;
    }
    case kRectangle: {
      delete properties_.rectangle_;
      break;
    }
    case kImage: {
      delete properties_.image_;
      break;
    }
    case kFileList: {
      delete properties_.filelist_;
      break;
    }
    case kToolbar: {
      delete properties_.toolbar_;
      break;
    }
    case kList: {
      delete properties_.list_;
      break;
    }
    case kMenu: {
      delete properties_.menu_;
      break;
    }
    case kText: {
      delete properties_.text_;
      break;
    }
    case PROPERTIES_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PROPERTIES_NOT_SET;
}


void CmdMsg_Component::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.CmdMsg.Component)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  objectname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_properties();
  _internal_metadata_.Clear();
}

bool CmdMsg_Component::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.CmdMsg.Component)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string objectName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_objectname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->objectname().data(), static_cast<int>(this->objectname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HaWC.CmdMsg.Component.objectName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .HaWC.CmdMsg.LineProperties line = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_line()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .HaWC.CmdMsg.CircleProperties circle = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_circle()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .HaWC.CmdMsg.RectangleProperties rectangle = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rectangle()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .HaWC.CmdMsg.ImageProperties image = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_image()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .HaWC.CmdMsg.FileListProperties fileList = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_filelist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .HaWC.CmdMsg.ToolBarProperties toolbar = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_toolbar()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .HaWC.CmdMsg.ListProperties list = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .HaWC.CmdMsg.MenuProperties menu = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_menu()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .HaWC.CmdMsg.LabelProperties text = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_text()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.CmdMsg.Component)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.CmdMsg.Component)
  return false;
#undef DO_
}

void CmdMsg_Component::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.CmdMsg.Component)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string objectName = 1;
  if (this->objectname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->objectname().data(), static_cast<int>(this->objectname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.CmdMsg.Component.objectName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->objectname(), output);
  }

  // .HaWC.CmdMsg.LineProperties line = 2;
  if (has_line()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_line(), output);
  }

  // .HaWC.CmdMsg.CircleProperties circle = 3;
  if (has_circle()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_circle(), output);
  }

  // .HaWC.CmdMsg.RectangleProperties rectangle = 4;
  if (has_rectangle()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_rectangle(), output);
  }

  // .HaWC.CmdMsg.ImageProperties image = 5;
  if (has_image()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_image(), output);
  }

  // .HaWC.CmdMsg.FileListProperties fileList = 6;
  if (has_filelist()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_filelist(), output);
  }

  // .HaWC.CmdMsg.ToolBarProperties toolbar = 7;
  if (has_toolbar()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_toolbar(), output);
  }

  // .HaWC.CmdMsg.ListProperties list = 8;
  if (has_list()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_list(), output);
  }

  // .HaWC.CmdMsg.MenuProperties menu = 9;
  if (has_menu()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_menu(), output);
  }

  // .HaWC.CmdMsg.LabelProperties text = 10;
  if (has_text()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_text(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.CmdMsg.Component)
}

::google::protobuf::uint8* CmdMsg_Component::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.CmdMsg.Component)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string objectName = 1;
  if (this->objectname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->objectname().data(), static_cast<int>(this->objectname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.CmdMsg.Component.objectName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->objectname(), target);
  }

  // .HaWC.CmdMsg.LineProperties line = 2;
  if (has_line()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_line(), deterministic, target);
  }

  // .HaWC.CmdMsg.CircleProperties circle = 3;
  if (has_circle()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_circle(), deterministic, target);
  }

  // .HaWC.CmdMsg.RectangleProperties rectangle = 4;
  if (has_rectangle()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_rectangle(), deterministic, target);
  }

  // .HaWC.CmdMsg.ImageProperties image = 5;
  if (has_image()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_image(), deterministic, target);
  }

  // .HaWC.CmdMsg.FileListProperties fileList = 6;
  if (has_filelist()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_filelist(), deterministic, target);
  }

  // .HaWC.CmdMsg.ToolBarProperties toolbar = 7;
  if (has_toolbar()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_toolbar(), deterministic, target);
  }

  // .HaWC.CmdMsg.ListProperties list = 8;
  if (has_list()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_list(), deterministic, target);
  }

  // .HaWC.CmdMsg.MenuProperties menu = 9;
  if (has_menu()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_menu(), deterministic, target);
  }

  // .HaWC.CmdMsg.LabelProperties text = 10;
  if (has_text()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_text(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.CmdMsg.Component)
  return target;
}

size_t CmdMsg_Component::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.CmdMsg.Component)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string objectName = 1;
  if (this->objectname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->objectname());
  }

  switch (properties_case()) {
    // .HaWC.CmdMsg.LineProperties line = 2;
    case kLine: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *properties_.line_);
      break;
    }
    // .HaWC.CmdMsg.CircleProperties circle = 3;
    case kCircle: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *properties_.circle_);
      break;
    }
    // .HaWC.CmdMsg.RectangleProperties rectangle = 4;
    case kRectangle: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *properties_.rectangle_);
      break;
    }
    // .HaWC.CmdMsg.ImageProperties image = 5;
    case kImage: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *properties_.image_);
      break;
    }
    // .HaWC.CmdMsg.FileListProperties fileList = 6;
    case kFileList: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *properties_.filelist_);
      break;
    }
    // .HaWC.CmdMsg.ToolBarProperties toolbar = 7;
    case kToolbar: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *properties_.toolbar_);
      break;
    }
    // .HaWC.CmdMsg.ListProperties list = 8;
    case kList: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *properties_.list_);
      break;
    }
    // .HaWC.CmdMsg.MenuProperties menu = 9;
    case kMenu: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *properties_.menu_);
      break;
    }
    // .HaWC.CmdMsg.LabelProperties text = 10;
    case kText: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *properties_.text_);
      break;
    }
    case PROPERTIES_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CmdMsg_Component::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.CmdMsg.Component)
  GOOGLE_DCHECK_NE(&from, this);
  const CmdMsg_Component* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CmdMsg_Component>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.CmdMsg.Component)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.CmdMsg.Component)
    MergeFrom(*source);
  }
}

void CmdMsg_Component::MergeFrom(const CmdMsg_Component& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.CmdMsg.Component)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.objectname().size() > 0) {

    objectname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.objectname_);
  }
  switch (from.properties_case()) {
    case kLine: {
      mutable_line()->::HaWC::CmdMsg_LineProperties::MergeFrom(from.line());
      break;
    }
    case kCircle: {
      mutable_circle()->::HaWC::CmdMsg_CircleProperties::MergeFrom(from.circle());
      break;
    }
    case kRectangle: {
      mutable_rectangle()->::HaWC::CmdMsg_RectangleProperties::MergeFrom(from.rectangle());
      break;
    }
    case kImage: {
      mutable_image()->::HaWC::CmdMsg_ImageProperties::MergeFrom(from.image());
      break;
    }
    case kFileList: {
      mutable_filelist()->::HaWC::CmdMsg_FileListProperties::MergeFrom(from.filelist());
      break;
    }
    case kToolbar: {
      mutable_toolbar()->::HaWC::CmdMsg_ToolBarProperties::MergeFrom(from.toolbar());
      break;
    }
    case kList: {
      mutable_list()->::HaWC::CmdMsg_ListProperties::MergeFrom(from.list());
      break;
    }
    case kMenu: {
      mutable_menu()->::HaWC::CmdMsg_MenuProperties::MergeFrom(from.menu());
      break;
    }
    case kText: {
      mutable_text()->::HaWC::CmdMsg_LabelProperties::MergeFrom(from.text());
      break;
    }
    case PROPERTIES_NOT_SET: {
      break;
    }
  }
}

void CmdMsg_Component::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.CmdMsg.Component)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CmdMsg_Component::CopyFrom(const CmdMsg_Component& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.CmdMsg.Component)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CmdMsg_Component::IsInitialized() const {
  return true;
}

void CmdMsg_Component::Swap(CmdMsg_Component* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CmdMsg_Component::InternalSwap(CmdMsg_Component* other) {
  using std::swap;
  objectname_.Swap(&other->objectname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(properties_, other->properties_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CmdMsg_Component::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CmdMsg_ComponentList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CmdMsg_ComponentList::kComponentsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CmdMsg_ComponentList::CmdMsg_ComponentList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_ComponentList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.CmdMsg.ComponentList)
}
CmdMsg_ComponentList::CmdMsg_ComponentList(const CmdMsg_ComponentList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      components_(from.components_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:HaWC.CmdMsg.ComponentList)
}

void CmdMsg_ComponentList::SharedCtor() {
}

CmdMsg_ComponentList::~CmdMsg_ComponentList() {
  // @@protoc_insertion_point(destructor:HaWC.CmdMsg.ComponentList)
  SharedDtor();
}

void CmdMsg_ComponentList::SharedDtor() {
}

void CmdMsg_ComponentList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CmdMsg_ComponentList::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CmdMsg_ComponentList& CmdMsg_ComponentList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_CmdMsg_ComponentList.base);
  return *internal_default_instance();
}


void CmdMsg_ComponentList::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.CmdMsg.ComponentList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  components_.Clear();
  _internal_metadata_.Clear();
}

bool CmdMsg_ComponentList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.CmdMsg.ComponentList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .HaWC.CmdMsg.Component components = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_components()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.CmdMsg.ComponentList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.CmdMsg.ComponentList)
  return false;
#undef DO_
}

void CmdMsg_ComponentList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.CmdMsg.ComponentList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .HaWC.CmdMsg.Component components = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->components_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->components(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.CmdMsg.ComponentList)
}

::google::protobuf::uint8* CmdMsg_ComponentList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.CmdMsg.ComponentList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .HaWC.CmdMsg.Component components = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->components_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->components(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.CmdMsg.ComponentList)
  return target;
}

size_t CmdMsg_ComponentList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.CmdMsg.ComponentList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .HaWC.CmdMsg.Component components = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->components_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->components(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CmdMsg_ComponentList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.CmdMsg.ComponentList)
  GOOGLE_DCHECK_NE(&from, this);
  const CmdMsg_ComponentList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CmdMsg_ComponentList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.CmdMsg.ComponentList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.CmdMsg.ComponentList)
    MergeFrom(*source);
  }
}

void CmdMsg_ComponentList::MergeFrom(const CmdMsg_ComponentList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.CmdMsg.ComponentList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  components_.MergeFrom(from.components_);
}

void CmdMsg_ComponentList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.CmdMsg.ComponentList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CmdMsg_ComponentList::CopyFrom(const CmdMsg_ComponentList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.CmdMsg.ComponentList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CmdMsg_ComponentList::IsInitialized() const {
  return true;
}

void CmdMsg_ComponentList::Swap(CmdMsg_ComponentList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CmdMsg_ComponentList::InternalSwap(CmdMsg_ComponentList* other) {
  using std::swap;
  CastToBase(&components_)->InternalSwap(CastToBase(&other->components_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CmdMsg_ComponentList::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CmdMsg_OverlayCmd::InitAsDefaultInstance() {
  ::HaWC::_CmdMsg_OverlayCmd_default_instance_.createscreen_ = const_cast< ::HaWC::CmdMsg_ComponentList*>(
      ::HaWC::CmdMsg_ComponentList::internal_default_instance());
  ::HaWC::_CmdMsg_OverlayCmd_default_instance_.updatesreen_ = const_cast< ::HaWC::CmdMsg_ComponentList*>(
      ::HaWC::CmdMsg_ComponentList::internal_default_instance());
}
void CmdMsg_OverlayCmd::set_allocated_createscreen(::HaWC::CmdMsg_ComponentList* createscreen) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_command();
  if (createscreen) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      createscreen = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, createscreen, submessage_arena);
    }
    set_has_createscreen();
    command_.createscreen_ = createscreen;
  }
  // @@protoc_insertion_point(field_set_allocated:HaWC.CmdMsg.OverlayCmd.createScreen)
}
void CmdMsg_OverlayCmd::set_allocated_updatesreen(::HaWC::CmdMsg_ComponentList* updatesreen) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_command();
  if (updatesreen) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      updatesreen = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, updatesreen, submessage_arena);
    }
    set_has_updatesreen();
    command_.updatesreen_ = updatesreen;
  }
  // @@protoc_insertion_point(field_set_allocated:HaWC.CmdMsg.OverlayCmd.updateSreen)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CmdMsg_OverlayCmd::kViewPortIDFieldNumber;
const int CmdMsg_OverlayCmd::kCreateScreenFieldNumber;
const int CmdMsg_OverlayCmd::kUpdateSreenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CmdMsg_OverlayCmd::CmdMsg_OverlayCmd()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_OverlayCmd.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.CmdMsg.OverlayCmd)
}
CmdMsg_OverlayCmd::CmdMsg_OverlayCmd(const CmdMsg_OverlayCmd& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  viewportid_ = from.viewportid_;
  clear_has_command();
  switch (from.command_case()) {
    case kCreateScreen: {
      mutable_createscreen()->::HaWC::CmdMsg_ComponentList::MergeFrom(from.createscreen());
      break;
    }
    case kUpdateSreen: {
      mutable_updatesreen()->::HaWC::CmdMsg_ComponentList::MergeFrom(from.updatesreen());
      break;
    }
    case COMMAND_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:HaWC.CmdMsg.OverlayCmd)
}

void CmdMsg_OverlayCmd::SharedCtor() {
  viewportid_ = 0u;
  clear_has_command();
}

CmdMsg_OverlayCmd::~CmdMsg_OverlayCmd() {
  // @@protoc_insertion_point(destructor:HaWC.CmdMsg.OverlayCmd)
  SharedDtor();
}

void CmdMsg_OverlayCmd::SharedDtor() {
  if (has_command()) {
    clear_command();
  }
}

void CmdMsg_OverlayCmd::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CmdMsg_OverlayCmd::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CmdMsg_OverlayCmd& CmdMsg_OverlayCmd::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_CmdMsg_OverlayCmd.base);
  return *internal_default_instance();
}


void CmdMsg_OverlayCmd::clear_command() {
// @@protoc_insertion_point(one_of_clear_start:HaWC.CmdMsg.OverlayCmd)
  switch (command_case()) {
    case kCreateScreen: {
      delete command_.createscreen_;
      break;
    }
    case kUpdateSreen: {
      delete command_.updatesreen_;
      break;
    }
    case COMMAND_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = COMMAND_NOT_SET;
}


void CmdMsg_OverlayCmd::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.CmdMsg.OverlayCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  viewportid_ = 0u;
  clear_command();
  _internal_metadata_.Clear();
}

bool CmdMsg_OverlayCmd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.CmdMsg.OverlayCmd)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 viewPortID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &viewportid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .HaWC.CmdMsg.ComponentList createScreen = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_createscreen()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .HaWC.CmdMsg.ComponentList updateSreen = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_updatesreen()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.CmdMsg.OverlayCmd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.CmdMsg.OverlayCmd)
  return false;
#undef DO_
}

void CmdMsg_OverlayCmd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.CmdMsg.OverlayCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 viewPortID = 1;
  if (this->viewportid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->viewportid(), output);
  }

  // .HaWC.CmdMsg.ComponentList createScreen = 5;
  if (has_createscreen()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_createscreen(), output);
  }

  // .HaWC.CmdMsg.ComponentList updateSreen = 6;
  if (has_updatesreen()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_updatesreen(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.CmdMsg.OverlayCmd)
}

::google::protobuf::uint8* CmdMsg_OverlayCmd::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.CmdMsg.OverlayCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 viewPortID = 1;
  if (this->viewportid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->viewportid(), target);
  }

  // .HaWC.CmdMsg.ComponentList createScreen = 5;
  if (has_createscreen()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_createscreen(), deterministic, target);
  }

  // .HaWC.CmdMsg.ComponentList updateSreen = 6;
  if (has_updatesreen()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_updatesreen(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.CmdMsg.OverlayCmd)
  return target;
}

size_t CmdMsg_OverlayCmd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.CmdMsg.OverlayCmd)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 viewPortID = 1;
  if (this->viewportid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->viewportid());
  }

  switch (command_case()) {
    // .HaWC.CmdMsg.ComponentList createScreen = 5;
    case kCreateScreen: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *command_.createscreen_);
      break;
    }
    // .HaWC.CmdMsg.ComponentList updateSreen = 6;
    case kUpdateSreen: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *command_.updatesreen_);
      break;
    }
    case COMMAND_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CmdMsg_OverlayCmd::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.CmdMsg.OverlayCmd)
  GOOGLE_DCHECK_NE(&from, this);
  const CmdMsg_OverlayCmd* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CmdMsg_OverlayCmd>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.CmdMsg.OverlayCmd)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.CmdMsg.OverlayCmd)
    MergeFrom(*source);
  }
}

void CmdMsg_OverlayCmd::MergeFrom(const CmdMsg_OverlayCmd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.CmdMsg.OverlayCmd)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.viewportid() != 0) {
    set_viewportid(from.viewportid());
  }
  switch (from.command_case()) {
    case kCreateScreen: {
      mutable_createscreen()->::HaWC::CmdMsg_ComponentList::MergeFrom(from.createscreen());
      break;
    }
    case kUpdateSreen: {
      mutable_updatesreen()->::HaWC::CmdMsg_ComponentList::MergeFrom(from.updatesreen());
      break;
    }
    case COMMAND_NOT_SET: {
      break;
    }
  }
}

void CmdMsg_OverlayCmd::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.CmdMsg.OverlayCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CmdMsg_OverlayCmd::CopyFrom(const CmdMsg_OverlayCmd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.CmdMsg.OverlayCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CmdMsg_OverlayCmd::IsInitialized() const {
  return true;
}

void CmdMsg_OverlayCmd::Swap(CmdMsg_OverlayCmd* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CmdMsg_OverlayCmd::InternalSwap(CmdMsg_OverlayCmd* other) {
  using std::swap;
  swap(viewportid_, other->viewportid_);
  swap(command_, other->command_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CmdMsg_OverlayCmd::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CmdMsg_SetFeedSourceCmd::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CmdMsg_SetFeedSourceCmd::kFeedIDFieldNumber;
const int CmdMsg_SetFeedSourceCmd::kTypeFieldNumber;
const int CmdMsg_SetFeedSourceCmd::kSourceStrFieldNumber;
const int CmdMsg_SetFeedSourceCmd::kQosTimeoutFieldNumber;
const int CmdMsg_SetFeedSourceCmd::kQosRefreshFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CmdMsg_SetFeedSourceCmd::CmdMsg_SetFeedSourceCmd()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_SetFeedSourceCmd.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.CmdMsg.SetFeedSourceCmd)
}
CmdMsg_SetFeedSourceCmd::CmdMsg_SetFeedSourceCmd(const CmdMsg_SetFeedSourceCmd& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sourcestr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sourcestr().size() > 0) {
    sourcestr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sourcestr_);
  }
  ::memcpy(&feedid_, &from.feedid_,
    static_cast<size_t>(reinterpret_cast<char*>(&qosrefresh_) -
    reinterpret_cast<char*>(&feedid_)) + sizeof(qosrefresh_));
  // @@protoc_insertion_point(copy_constructor:HaWC.CmdMsg.SetFeedSourceCmd)
}

void CmdMsg_SetFeedSourceCmd::SharedCtor() {
  sourcestr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&feedid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&qosrefresh_) -
      reinterpret_cast<char*>(&feedid_)) + sizeof(qosrefresh_));
}

CmdMsg_SetFeedSourceCmd::~CmdMsg_SetFeedSourceCmd() {
  // @@protoc_insertion_point(destructor:HaWC.CmdMsg.SetFeedSourceCmd)
  SharedDtor();
}

void CmdMsg_SetFeedSourceCmd::SharedDtor() {
  sourcestr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CmdMsg_SetFeedSourceCmd::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CmdMsg_SetFeedSourceCmd::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CmdMsg_SetFeedSourceCmd& CmdMsg_SetFeedSourceCmd::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_CmdMsg_SetFeedSourceCmd.base);
  return *internal_default_instance();
}


void CmdMsg_SetFeedSourceCmd::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.CmdMsg.SetFeedSourceCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sourcestr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&feedid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&qosrefresh_) -
      reinterpret_cast<char*>(&feedid_)) + sizeof(qosrefresh_));
  _internal_metadata_.Clear();
}

bool CmdMsg_SetFeedSourceCmd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.CmdMsg.SetFeedSourceCmd)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 feedID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &feedid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .HaWC.FeedType type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::HaWC::FeedType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sourceStr = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sourcestr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sourcestr().data(), static_cast<int>(this->sourcestr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HaWC.CmdMsg.SetFeedSourceCmd.sourceStr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 qosTimeout = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &qostimeout_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 qosRefresh = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &qosrefresh_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.CmdMsg.SetFeedSourceCmd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.CmdMsg.SetFeedSourceCmd)
  return false;
#undef DO_
}

void CmdMsg_SetFeedSourceCmd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.CmdMsg.SetFeedSourceCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 feedID = 1;
  if (this->feedid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->feedid(), output);
  }

  // .HaWC.FeedType type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // string sourceStr = 3;
  if (this->sourcestr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sourcestr().data(), static_cast<int>(this->sourcestr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.CmdMsg.SetFeedSourceCmd.sourceStr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sourcestr(), output);
  }

  // uint32 qosTimeout = 4;
  if (this->qostimeout() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->qostimeout(), output);
  }

  // uint32 qosRefresh = 5;
  if (this->qosrefresh() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->qosrefresh(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.CmdMsg.SetFeedSourceCmd)
}

::google::protobuf::uint8* CmdMsg_SetFeedSourceCmd::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.CmdMsg.SetFeedSourceCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 feedID = 1;
  if (this->feedid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->feedid(), target);
  }

  // .HaWC.FeedType type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // string sourceStr = 3;
  if (this->sourcestr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sourcestr().data(), static_cast<int>(this->sourcestr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.CmdMsg.SetFeedSourceCmd.sourceStr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->sourcestr(), target);
  }

  // uint32 qosTimeout = 4;
  if (this->qostimeout() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->qostimeout(), target);
  }

  // uint32 qosRefresh = 5;
  if (this->qosrefresh() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->qosrefresh(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.CmdMsg.SetFeedSourceCmd)
  return target;
}

size_t CmdMsg_SetFeedSourceCmd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.CmdMsg.SetFeedSourceCmd)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string sourceStr = 3;
  if (this->sourcestr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sourcestr());
  }

  // int32 feedID = 1;
  if (this->feedid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->feedid());
  }

  // .HaWC.FeedType type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // uint32 qosTimeout = 4;
  if (this->qostimeout() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->qostimeout());
  }

  // uint32 qosRefresh = 5;
  if (this->qosrefresh() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->qosrefresh());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CmdMsg_SetFeedSourceCmd::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.CmdMsg.SetFeedSourceCmd)
  GOOGLE_DCHECK_NE(&from, this);
  const CmdMsg_SetFeedSourceCmd* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CmdMsg_SetFeedSourceCmd>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.CmdMsg.SetFeedSourceCmd)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.CmdMsg.SetFeedSourceCmd)
    MergeFrom(*source);
  }
}

void CmdMsg_SetFeedSourceCmd::MergeFrom(const CmdMsg_SetFeedSourceCmd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.CmdMsg.SetFeedSourceCmd)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sourcestr().size() > 0) {

    sourcestr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sourcestr_);
  }
  if (from.feedid() != 0) {
    set_feedid(from.feedid());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.qostimeout() != 0) {
    set_qostimeout(from.qostimeout());
  }
  if (from.qosrefresh() != 0) {
    set_qosrefresh(from.qosrefresh());
  }
}

void CmdMsg_SetFeedSourceCmd::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.CmdMsg.SetFeedSourceCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CmdMsg_SetFeedSourceCmd::CopyFrom(const CmdMsg_SetFeedSourceCmd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.CmdMsg.SetFeedSourceCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CmdMsg_SetFeedSourceCmd::IsInitialized() const {
  return true;
}

void CmdMsg_SetFeedSourceCmd::Swap(CmdMsg_SetFeedSourceCmd* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CmdMsg_SetFeedSourceCmd::InternalSwap(CmdMsg_SetFeedSourceCmd* other) {
  using std::swap;
  sourcestr_.Swap(&other->sourcestr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(feedid_, other->feedid_);
  swap(type_, other->type_);
  swap(qostimeout_, other->qostimeout_);
  swap(qosrefresh_, other->qosrefresh_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CmdMsg_SetFeedSourceCmd::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CmdMsg_SetViewFeedCmd::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CmdMsg_SetViewFeedCmd::kViewPortIDFieldNumber;
const int CmdMsg_SetViewFeedCmd::kFeedIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CmdMsg_SetViewFeedCmd::CmdMsg_SetViewFeedCmd()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_SetViewFeedCmd.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.CmdMsg.SetViewFeedCmd)
}
CmdMsg_SetViewFeedCmd::CmdMsg_SetViewFeedCmd(const CmdMsg_SetViewFeedCmd& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&viewportid_, &from.viewportid_,
    static_cast<size_t>(reinterpret_cast<char*>(&feedid_) -
    reinterpret_cast<char*>(&viewportid_)) + sizeof(feedid_));
  // @@protoc_insertion_point(copy_constructor:HaWC.CmdMsg.SetViewFeedCmd)
}

void CmdMsg_SetViewFeedCmd::SharedCtor() {
  ::memset(&viewportid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&feedid_) -
      reinterpret_cast<char*>(&viewportid_)) + sizeof(feedid_));
}

CmdMsg_SetViewFeedCmd::~CmdMsg_SetViewFeedCmd() {
  // @@protoc_insertion_point(destructor:HaWC.CmdMsg.SetViewFeedCmd)
  SharedDtor();
}

void CmdMsg_SetViewFeedCmd::SharedDtor() {
}

void CmdMsg_SetViewFeedCmd::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CmdMsg_SetViewFeedCmd::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CmdMsg_SetViewFeedCmd& CmdMsg_SetViewFeedCmd::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_CmdMsg_SetViewFeedCmd.base);
  return *internal_default_instance();
}


void CmdMsg_SetViewFeedCmd::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.CmdMsg.SetViewFeedCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&viewportid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&feedid_) -
      reinterpret_cast<char*>(&viewportid_)) + sizeof(feedid_));
  _internal_metadata_.Clear();
}

bool CmdMsg_SetViewFeedCmd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.CmdMsg.SetViewFeedCmd)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 viewPortID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &viewportid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 feedID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &feedid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.CmdMsg.SetViewFeedCmd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.CmdMsg.SetViewFeedCmd)
  return false;
#undef DO_
}

void CmdMsg_SetViewFeedCmd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.CmdMsg.SetViewFeedCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 viewPortID = 1;
  if (this->viewportid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->viewportid(), output);
  }

  // int32 feedID = 2;
  if (this->feedid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->feedid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.CmdMsg.SetViewFeedCmd)
}

::google::protobuf::uint8* CmdMsg_SetViewFeedCmd::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.CmdMsg.SetViewFeedCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 viewPortID = 1;
  if (this->viewportid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->viewportid(), target);
  }

  // int32 feedID = 2;
  if (this->feedid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->feedid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.CmdMsg.SetViewFeedCmd)
  return target;
}

size_t CmdMsg_SetViewFeedCmd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.CmdMsg.SetViewFeedCmd)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 viewPortID = 1;
  if (this->viewportid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->viewportid());
  }

  // int32 feedID = 2;
  if (this->feedid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->feedid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CmdMsg_SetViewFeedCmd::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.CmdMsg.SetViewFeedCmd)
  GOOGLE_DCHECK_NE(&from, this);
  const CmdMsg_SetViewFeedCmd* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CmdMsg_SetViewFeedCmd>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.CmdMsg.SetViewFeedCmd)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.CmdMsg.SetViewFeedCmd)
    MergeFrom(*source);
  }
}

void CmdMsg_SetViewFeedCmd::MergeFrom(const CmdMsg_SetViewFeedCmd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.CmdMsg.SetViewFeedCmd)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.viewportid() != 0) {
    set_viewportid(from.viewportid());
  }
  if (from.feedid() != 0) {
    set_feedid(from.feedid());
  }
}

void CmdMsg_SetViewFeedCmd::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.CmdMsg.SetViewFeedCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CmdMsg_SetViewFeedCmd::CopyFrom(const CmdMsg_SetViewFeedCmd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.CmdMsg.SetViewFeedCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CmdMsg_SetViewFeedCmd::IsInitialized() const {
  return true;
}

void CmdMsg_SetViewFeedCmd::Swap(CmdMsg_SetViewFeedCmd* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CmdMsg_SetViewFeedCmd::InternalSwap(CmdMsg_SetViewFeedCmd* other) {
  using std::swap;
  swap(viewportid_, other->viewportid_);
  swap(feedid_, other->feedid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CmdMsg_SetViewFeedCmd::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CmdMsg_SetViewWindowCmd::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CmdMsg_SetViewWindowCmd::kViewPortIDFieldNumber;
const int CmdMsg_SetViewWindowCmd::kXFieldNumber;
const int CmdMsg_SetViewWindowCmd::kYFieldNumber;
const int CmdMsg_SetViewWindowCmd::kZFieldNumber;
const int CmdMsg_SetViewWindowCmd::kWidthFieldNumber;
const int CmdMsg_SetViewWindowCmd::kHeightFieldNumber;
const int CmdMsg_SetViewWindowCmd::kAlphaFieldNumber;
const int CmdMsg_SetViewWindowCmd::kEnableOverlayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CmdMsg_SetViewWindowCmd::CmdMsg_SetViewWindowCmd()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_SetViewWindowCmd.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.CmdMsg.SetViewWindowCmd)
}
CmdMsg_SetViewWindowCmd::CmdMsg_SetViewWindowCmd(const CmdMsg_SetViewWindowCmd& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&viewportid_, &from.viewportid_,
    static_cast<size_t>(reinterpret_cast<char*>(&enableoverlay_) -
    reinterpret_cast<char*>(&viewportid_)) + sizeof(enableoverlay_));
  // @@protoc_insertion_point(copy_constructor:HaWC.CmdMsg.SetViewWindowCmd)
}

void CmdMsg_SetViewWindowCmd::SharedCtor() {
  ::memset(&viewportid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enableoverlay_) -
      reinterpret_cast<char*>(&viewportid_)) + sizeof(enableoverlay_));
}

CmdMsg_SetViewWindowCmd::~CmdMsg_SetViewWindowCmd() {
  // @@protoc_insertion_point(destructor:HaWC.CmdMsg.SetViewWindowCmd)
  SharedDtor();
}

void CmdMsg_SetViewWindowCmd::SharedDtor() {
}

void CmdMsg_SetViewWindowCmd::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CmdMsg_SetViewWindowCmd::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CmdMsg_SetViewWindowCmd& CmdMsg_SetViewWindowCmd::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_CmdMsg_SetViewWindowCmd.base);
  return *internal_default_instance();
}


void CmdMsg_SetViewWindowCmd::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.CmdMsg.SetViewWindowCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&viewportid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enableoverlay_) -
      reinterpret_cast<char*>(&viewportid_)) + sizeof(enableoverlay_));
  _internal_metadata_.Clear();
}

bool CmdMsg_SetViewWindowCmd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.CmdMsg.SetViewWindowCmd)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 viewPortID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &viewportid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 x = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 y = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 z = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 width = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 height = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double alpha = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &alpha_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool enableOverlay = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enableoverlay_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.CmdMsg.SetViewWindowCmd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.CmdMsg.SetViewWindowCmd)
  return false;
#undef DO_
}

void CmdMsg_SetViewWindowCmd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.CmdMsg.SetViewWindowCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 viewPortID = 1;
  if (this->viewportid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->viewportid(), output);
  }

  // int32 x = 2;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->x(), output);
  }

  // int32 y = 3;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->y(), output);
  }

  // int32 z = 4;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->z(), output);
  }

  // int32 width = 5;
  if (this->width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->width(), output);
  }

  // int32 height = 6;
  if (this->height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->height(), output);
  }

  // double alpha = 7;
  if (this->alpha() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->alpha(), output);
  }

  // bool enableOverlay = 8;
  if (this->enableoverlay() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->enableoverlay(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.CmdMsg.SetViewWindowCmd)
}

::google::protobuf::uint8* CmdMsg_SetViewWindowCmd::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.CmdMsg.SetViewWindowCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 viewPortID = 1;
  if (this->viewportid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->viewportid(), target);
  }

  // int32 x = 2;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->x(), target);
  }

  // int32 y = 3;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->y(), target);
  }

  // int32 z = 4;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->z(), target);
  }

  // int32 width = 5;
  if (this->width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->width(), target);
  }

  // int32 height = 6;
  if (this->height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->height(), target);
  }

  // double alpha = 7;
  if (this->alpha() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->alpha(), target);
  }

  // bool enableOverlay = 8;
  if (this->enableoverlay() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->enableoverlay(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.CmdMsg.SetViewWindowCmd)
  return target;
}

size_t CmdMsg_SetViewWindowCmd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.CmdMsg.SetViewWindowCmd)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 viewPortID = 1;
  if (this->viewportid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->viewportid());
  }

  // int32 x = 2;
  if (this->x() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());
  }

  // int32 y = 3;
  if (this->y() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());
  }

  // int32 z = 4;
  if (this->z() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->z());
  }

  // int32 width = 5;
  if (this->width() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->width());
  }

  // int32 height = 6;
  if (this->height() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->height());
  }

  // double alpha = 7;
  if (this->alpha() != 0) {
    total_size += 1 + 8;
  }

  // bool enableOverlay = 8;
  if (this->enableoverlay() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CmdMsg_SetViewWindowCmd::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.CmdMsg.SetViewWindowCmd)
  GOOGLE_DCHECK_NE(&from, this);
  const CmdMsg_SetViewWindowCmd* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CmdMsg_SetViewWindowCmd>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.CmdMsg.SetViewWindowCmd)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.CmdMsg.SetViewWindowCmd)
    MergeFrom(*source);
  }
}

void CmdMsg_SetViewWindowCmd::MergeFrom(const CmdMsg_SetViewWindowCmd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.CmdMsg.SetViewWindowCmd)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.viewportid() != 0) {
    set_viewportid(from.viewportid());
  }
  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
  if (from.width() != 0) {
    set_width(from.width());
  }
  if (from.height() != 0) {
    set_height(from.height());
  }
  if (from.alpha() != 0) {
    set_alpha(from.alpha());
  }
  if (from.enableoverlay() != 0) {
    set_enableoverlay(from.enableoverlay());
  }
}

void CmdMsg_SetViewWindowCmd::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.CmdMsg.SetViewWindowCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CmdMsg_SetViewWindowCmd::CopyFrom(const CmdMsg_SetViewWindowCmd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.CmdMsg.SetViewWindowCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CmdMsg_SetViewWindowCmd::IsInitialized() const {
  return true;
}

void CmdMsg_SetViewWindowCmd::Swap(CmdMsg_SetViewWindowCmd* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CmdMsg_SetViewWindowCmd::InternalSwap(CmdMsg_SetViewWindowCmd* other) {
  using std::swap;
  swap(viewportid_, other->viewportid_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  swap(width_, other->width_);
  swap(height_, other->height_);
  swap(alpha_, other->alpha_);
  swap(enableoverlay_, other->enableoverlay_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CmdMsg_SetViewWindowCmd::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CmdMsg_SetDisplayCfgCmd::InitAsDefaultInstance() {
  ::HaWC::_CmdMsg_SetDisplayCfgCmd_default_instance_._instance.get_mutable()->mainoverlay_ = const_cast< ::HaWC::CmdMsg_OverlayCmd*>(
      ::HaWC::CmdMsg_OverlayCmd::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CmdMsg_SetDisplayCfgCmd::kReportParamValsFieldNumber;
const int CmdMsg_SetDisplayCfgCmd::kReportErrStrFieldNumber;
const int CmdMsg_SetDisplayCfgCmd::kFeedSrcsFieldNumber;
const int CmdMsg_SetDisplayCfgCmd::kMainOverlayFieldNumber;
const int CmdMsg_SetDisplayCfgCmd::kViewFeedsFieldNumber;
const int CmdMsg_SetDisplayCfgCmd::kViewWindowsFieldNumber;
const int CmdMsg_SetDisplayCfgCmd::kViewOverlaysFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CmdMsg_SetDisplayCfgCmd::CmdMsg_SetDisplayCfgCmd()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_SetDisplayCfgCmd.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.CmdMsg.SetDisplayCfgCmd)
}
CmdMsg_SetDisplayCfgCmd::CmdMsg_SetDisplayCfgCmd(const CmdMsg_SetDisplayCfgCmd& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      feedsrcs_(from.feedsrcs_),
      viewfeeds_(from.viewfeeds_),
      viewwindows_(from.viewwindows_),
      viewoverlays_(from.viewoverlays_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_mainoverlay()) {
    mainoverlay_ = new ::HaWC::CmdMsg_OverlayCmd(*from.mainoverlay_);
  } else {
    mainoverlay_ = NULL;
  }
  ::memcpy(&reportparamvals_, &from.reportparamvals_,
    static_cast<size_t>(reinterpret_cast<char*>(&reporterrstr_) -
    reinterpret_cast<char*>(&reportparamvals_)) + sizeof(reporterrstr_));
  // @@protoc_insertion_point(copy_constructor:HaWC.CmdMsg.SetDisplayCfgCmd)
}

void CmdMsg_SetDisplayCfgCmd::SharedCtor() {
  ::memset(&mainoverlay_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reporterrstr_) -
      reinterpret_cast<char*>(&mainoverlay_)) + sizeof(reporterrstr_));
}

CmdMsg_SetDisplayCfgCmd::~CmdMsg_SetDisplayCfgCmd() {
  // @@protoc_insertion_point(destructor:HaWC.CmdMsg.SetDisplayCfgCmd)
  SharedDtor();
}

void CmdMsg_SetDisplayCfgCmd::SharedDtor() {
  if (this != internal_default_instance()) delete mainoverlay_;
}

void CmdMsg_SetDisplayCfgCmd::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CmdMsg_SetDisplayCfgCmd::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CmdMsg_SetDisplayCfgCmd& CmdMsg_SetDisplayCfgCmd::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_CmdMsg_SetDisplayCfgCmd.base);
  return *internal_default_instance();
}


void CmdMsg_SetDisplayCfgCmd::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.CmdMsg.SetDisplayCfgCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  feedsrcs_.Clear();
  viewfeeds_.Clear();
  viewwindows_.Clear();
  viewoverlays_.Clear();
  if (GetArenaNoVirtual() == NULL && mainoverlay_ != NULL) {
    delete mainoverlay_;
  }
  mainoverlay_ = NULL;
  ::memset(&reportparamvals_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reporterrstr_) -
      reinterpret_cast<char*>(&reportparamvals_)) + sizeof(reporterrstr_));
  _internal_metadata_.Clear();
}

bool CmdMsg_SetDisplayCfgCmd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.CmdMsg.SetDisplayCfgCmd)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool reportParamVals = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &reportparamvals_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool reportErrStr = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &reporterrstr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .HaWC.CmdMsg.SetFeedSourceCmd feedSrcs = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_feedsrcs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .HaWC.CmdMsg.OverlayCmd mainOverlay = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mainoverlay()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .HaWC.CmdMsg.SetViewFeedCmd viewFeeds = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_viewfeeds()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .HaWC.CmdMsg.SetViewWindowCmd viewWindows = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_viewwindows()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .HaWC.CmdMsg.OverlayCmd viewOverlays = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_viewoverlays()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.CmdMsg.SetDisplayCfgCmd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.CmdMsg.SetDisplayCfgCmd)
  return false;
#undef DO_
}

void CmdMsg_SetDisplayCfgCmd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.CmdMsg.SetDisplayCfgCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool reportParamVals = 1;
  if (this->reportparamvals() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->reportparamvals(), output);
  }

  // bool reportErrStr = 2;
  if (this->reporterrstr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->reporterrstr(), output);
  }

  // repeated .HaWC.CmdMsg.SetFeedSourceCmd feedSrcs = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->feedsrcs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->feedsrcs(static_cast<int>(i)),
      output);
  }

  // .HaWC.CmdMsg.OverlayCmd mainOverlay = 7;
  if (this->has_mainoverlay()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_mainoverlay(), output);
  }

  // repeated .HaWC.CmdMsg.SetViewFeedCmd viewFeeds = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->viewfeeds_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9,
      this->viewfeeds(static_cast<int>(i)),
      output);
  }

  // repeated .HaWC.CmdMsg.SetViewWindowCmd viewWindows = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->viewwindows_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10,
      this->viewwindows(static_cast<int>(i)),
      output);
  }

  // repeated .HaWC.CmdMsg.OverlayCmd viewOverlays = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->viewoverlays_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12,
      this->viewoverlays(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.CmdMsg.SetDisplayCfgCmd)
}

::google::protobuf::uint8* CmdMsg_SetDisplayCfgCmd::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.CmdMsg.SetDisplayCfgCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool reportParamVals = 1;
  if (this->reportparamvals() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->reportparamvals(), target);
  }

  // bool reportErrStr = 2;
  if (this->reporterrstr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->reporterrstr(), target);
  }

  // repeated .HaWC.CmdMsg.SetFeedSourceCmd feedSrcs = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->feedsrcs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->feedsrcs(static_cast<int>(i)), deterministic, target);
  }

  // .HaWC.CmdMsg.OverlayCmd mainOverlay = 7;
  if (this->has_mainoverlay()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_mainoverlay(), deterministic, target);
  }

  // repeated .HaWC.CmdMsg.SetViewFeedCmd viewFeeds = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->viewfeeds_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->viewfeeds(static_cast<int>(i)), deterministic, target);
  }

  // repeated .HaWC.CmdMsg.SetViewWindowCmd viewWindows = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->viewwindows_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->viewwindows(static_cast<int>(i)), deterministic, target);
  }

  // repeated .HaWC.CmdMsg.OverlayCmd viewOverlays = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->viewoverlays_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->viewoverlays(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.CmdMsg.SetDisplayCfgCmd)
  return target;
}

size_t CmdMsg_SetDisplayCfgCmd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.CmdMsg.SetDisplayCfgCmd)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .HaWC.CmdMsg.SetFeedSourceCmd feedSrcs = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->feedsrcs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->feedsrcs(static_cast<int>(i)));
    }
  }

  // repeated .HaWC.CmdMsg.SetViewFeedCmd viewFeeds = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->viewfeeds_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->viewfeeds(static_cast<int>(i)));
    }
  }

  // repeated .HaWC.CmdMsg.SetViewWindowCmd viewWindows = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->viewwindows_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->viewwindows(static_cast<int>(i)));
    }
  }

  // repeated .HaWC.CmdMsg.OverlayCmd viewOverlays = 12;
  {
    unsigned int count = static_cast<unsigned int>(this->viewoverlays_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->viewoverlays(static_cast<int>(i)));
    }
  }

  // .HaWC.CmdMsg.OverlayCmd mainOverlay = 7;
  if (this->has_mainoverlay()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *mainoverlay_);
  }

  // bool reportParamVals = 1;
  if (this->reportparamvals() != 0) {
    total_size += 1 + 1;
  }

  // bool reportErrStr = 2;
  if (this->reporterrstr() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CmdMsg_SetDisplayCfgCmd::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.CmdMsg.SetDisplayCfgCmd)
  GOOGLE_DCHECK_NE(&from, this);
  const CmdMsg_SetDisplayCfgCmd* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CmdMsg_SetDisplayCfgCmd>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.CmdMsg.SetDisplayCfgCmd)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.CmdMsg.SetDisplayCfgCmd)
    MergeFrom(*source);
  }
}

void CmdMsg_SetDisplayCfgCmd::MergeFrom(const CmdMsg_SetDisplayCfgCmd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.CmdMsg.SetDisplayCfgCmd)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  feedsrcs_.MergeFrom(from.feedsrcs_);
  viewfeeds_.MergeFrom(from.viewfeeds_);
  viewwindows_.MergeFrom(from.viewwindows_);
  viewoverlays_.MergeFrom(from.viewoverlays_);
  if (from.has_mainoverlay()) {
    mutable_mainoverlay()->::HaWC::CmdMsg_OverlayCmd::MergeFrom(from.mainoverlay());
  }
  if (from.reportparamvals() != 0) {
    set_reportparamvals(from.reportparamvals());
  }
  if (from.reporterrstr() != 0) {
    set_reporterrstr(from.reporterrstr());
  }
}

void CmdMsg_SetDisplayCfgCmd::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.CmdMsg.SetDisplayCfgCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CmdMsg_SetDisplayCfgCmd::CopyFrom(const CmdMsg_SetDisplayCfgCmd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.CmdMsg.SetDisplayCfgCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CmdMsg_SetDisplayCfgCmd::IsInitialized() const {
  return true;
}

void CmdMsg_SetDisplayCfgCmd::Swap(CmdMsg_SetDisplayCfgCmd* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CmdMsg_SetDisplayCfgCmd::InternalSwap(CmdMsg_SetDisplayCfgCmd* other) {
  using std::swap;
  CastToBase(&feedsrcs_)->InternalSwap(CastToBase(&other->feedsrcs_));
  CastToBase(&viewfeeds_)->InternalSwap(CastToBase(&other->viewfeeds_));
  CastToBase(&viewwindows_)->InternalSwap(CastToBase(&other->viewwindows_));
  CastToBase(&viewoverlays_)->InternalSwap(CastToBase(&other->viewoverlays_));
  swap(mainoverlay_, other->mainoverlay_);
  swap(reportparamvals_, other->reportparamvals_);
  swap(reporterrstr_, other->reporterrstr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CmdMsg_SetDisplayCfgCmd::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CmdMsg_GetDisplayCfgCmd::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CmdMsg_GetDisplayCfgCmd::kReportErrStrFieldNumber;
const int CmdMsg_GetDisplayCfgCmd::kFeedSrcIDsFieldNumber;
const int CmdMsg_GetDisplayCfgCmd::kViewFeedIDsFieldNumber;
const int CmdMsg_GetDisplayCfgCmd::kViewWindowIDsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CmdMsg_GetDisplayCfgCmd::CmdMsg_GetDisplayCfgCmd()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_GetDisplayCfgCmd.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.CmdMsg.GetDisplayCfgCmd)
}
CmdMsg_GetDisplayCfgCmd::CmdMsg_GetDisplayCfgCmd(const CmdMsg_GetDisplayCfgCmd& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      feedsrcids_(from.feedsrcids_),
      viewfeedids_(from.viewfeedids_),
      viewwindowids_(from.viewwindowids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reporterrstr_ = from.reporterrstr_;
  // @@protoc_insertion_point(copy_constructor:HaWC.CmdMsg.GetDisplayCfgCmd)
}

void CmdMsg_GetDisplayCfgCmd::SharedCtor() {
  reporterrstr_ = false;
}

CmdMsg_GetDisplayCfgCmd::~CmdMsg_GetDisplayCfgCmd() {
  // @@protoc_insertion_point(destructor:HaWC.CmdMsg.GetDisplayCfgCmd)
  SharedDtor();
}

void CmdMsg_GetDisplayCfgCmd::SharedDtor() {
}

void CmdMsg_GetDisplayCfgCmd::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CmdMsg_GetDisplayCfgCmd::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CmdMsg_GetDisplayCfgCmd& CmdMsg_GetDisplayCfgCmd::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_CmdMsg_GetDisplayCfgCmd.base);
  return *internal_default_instance();
}


void CmdMsg_GetDisplayCfgCmd::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.CmdMsg.GetDisplayCfgCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  feedsrcids_.Clear();
  viewfeedids_.Clear();
  viewwindowids_.Clear();
  reporterrstr_ = false;
  _internal_metadata_.Clear();
}

bool CmdMsg_GetDisplayCfgCmd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.CmdMsg.GetDisplayCfgCmd)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool reportErrStr = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &reporterrstr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 feedSrcIDs = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_feedsrcids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 42u, input, this->mutable_feedsrcids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 viewFeedIDs = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_viewfeedids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 74u, input, this->mutable_viewfeedids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 viewWindowIDs = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_viewwindowids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 82u, input, this->mutable_viewwindowids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.CmdMsg.GetDisplayCfgCmd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.CmdMsg.GetDisplayCfgCmd)
  return false;
#undef DO_
}

void CmdMsg_GetDisplayCfgCmd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.CmdMsg.GetDisplayCfgCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool reportErrStr = 2;
  if (this->reporterrstr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->reporterrstr(), output);
  }

  // repeated int32 feedSrcIDs = 5;
  if (this->feedsrcids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _feedsrcids_cached_byte_size_));
  }
  for (int i = 0, n = this->feedsrcids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->feedsrcids(i), output);
  }

  // repeated uint32 viewFeedIDs = 9;
  if (this->viewfeedids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(9, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _viewfeedids_cached_byte_size_));
  }
  for (int i = 0, n = this->viewfeedids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->viewfeedids(i), output);
  }

  // repeated uint32 viewWindowIDs = 10;
  if (this->viewwindowids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(10, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _viewwindowids_cached_byte_size_));
  }
  for (int i = 0, n = this->viewwindowids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->viewwindowids(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.CmdMsg.GetDisplayCfgCmd)
}

::google::protobuf::uint8* CmdMsg_GetDisplayCfgCmd::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.CmdMsg.GetDisplayCfgCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool reportErrStr = 2;
  if (this->reporterrstr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->reporterrstr(), target);
  }

  // repeated int32 feedSrcIDs = 5;
  if (this->feedsrcids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _feedsrcids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->feedsrcids_, target);
  }

  // repeated uint32 viewFeedIDs = 9;
  if (this->viewfeedids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      9,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _viewfeedids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->viewfeedids_, target);
  }

  // repeated uint32 viewWindowIDs = 10;
  if (this->viewwindowids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      10,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _viewwindowids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->viewwindowids_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.CmdMsg.GetDisplayCfgCmd)
  return target;
}

size_t CmdMsg_GetDisplayCfgCmd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.CmdMsg.GetDisplayCfgCmd)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 feedSrcIDs = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->feedsrcids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _feedsrcids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 viewFeedIDs = 9;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->viewfeedids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _viewfeedids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 viewWindowIDs = 10;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->viewwindowids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _viewwindowids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // bool reportErrStr = 2;
  if (this->reporterrstr() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CmdMsg_GetDisplayCfgCmd::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.CmdMsg.GetDisplayCfgCmd)
  GOOGLE_DCHECK_NE(&from, this);
  const CmdMsg_GetDisplayCfgCmd* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CmdMsg_GetDisplayCfgCmd>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.CmdMsg.GetDisplayCfgCmd)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.CmdMsg.GetDisplayCfgCmd)
    MergeFrom(*source);
  }
}

void CmdMsg_GetDisplayCfgCmd::MergeFrom(const CmdMsg_GetDisplayCfgCmd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.CmdMsg.GetDisplayCfgCmd)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  feedsrcids_.MergeFrom(from.feedsrcids_);
  viewfeedids_.MergeFrom(from.viewfeedids_);
  viewwindowids_.MergeFrom(from.viewwindowids_);
  if (from.reporterrstr() != 0) {
    set_reporterrstr(from.reporterrstr());
  }
}

void CmdMsg_GetDisplayCfgCmd::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.CmdMsg.GetDisplayCfgCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CmdMsg_GetDisplayCfgCmd::CopyFrom(const CmdMsg_GetDisplayCfgCmd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.CmdMsg.GetDisplayCfgCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CmdMsg_GetDisplayCfgCmd::IsInitialized() const {
  return true;
}

void CmdMsg_GetDisplayCfgCmd::Swap(CmdMsg_GetDisplayCfgCmd* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CmdMsg_GetDisplayCfgCmd::InternalSwap(CmdMsg_GetDisplayCfgCmd* other) {
  using std::swap;
  feedsrcids_.InternalSwap(&other->feedsrcids_);
  viewfeedids_.InternalSwap(&other->viewfeedids_);
  viewwindowids_.InternalSwap(&other->viewwindowids_);
  swap(reporterrstr_, other->reporterrstr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CmdMsg_GetDisplayCfgCmd::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CmdMsg_SaveDefaultDisplayCmd::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CmdMsg_SaveDefaultDisplayCmd::kReportErrStrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CmdMsg_SaveDefaultDisplayCmd::CmdMsg_SaveDefaultDisplayCmd()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_SaveDefaultDisplayCmd.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.CmdMsg.SaveDefaultDisplayCmd)
}
CmdMsg_SaveDefaultDisplayCmd::CmdMsg_SaveDefaultDisplayCmd(const CmdMsg_SaveDefaultDisplayCmd& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reporterrstr_ = from.reporterrstr_;
  // @@protoc_insertion_point(copy_constructor:HaWC.CmdMsg.SaveDefaultDisplayCmd)
}

void CmdMsg_SaveDefaultDisplayCmd::SharedCtor() {
  reporterrstr_ = false;
}

CmdMsg_SaveDefaultDisplayCmd::~CmdMsg_SaveDefaultDisplayCmd() {
  // @@protoc_insertion_point(destructor:HaWC.CmdMsg.SaveDefaultDisplayCmd)
  SharedDtor();
}

void CmdMsg_SaveDefaultDisplayCmd::SharedDtor() {
}

void CmdMsg_SaveDefaultDisplayCmd::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CmdMsg_SaveDefaultDisplayCmd::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CmdMsg_SaveDefaultDisplayCmd& CmdMsg_SaveDefaultDisplayCmd::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_CmdMsg_SaveDefaultDisplayCmd.base);
  return *internal_default_instance();
}


void CmdMsg_SaveDefaultDisplayCmd::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.CmdMsg.SaveDefaultDisplayCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reporterrstr_ = false;
  _internal_metadata_.Clear();
}

bool CmdMsg_SaveDefaultDisplayCmd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.CmdMsg.SaveDefaultDisplayCmd)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool reportErrStr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &reporterrstr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.CmdMsg.SaveDefaultDisplayCmd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.CmdMsg.SaveDefaultDisplayCmd)
  return false;
#undef DO_
}

void CmdMsg_SaveDefaultDisplayCmd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.CmdMsg.SaveDefaultDisplayCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool reportErrStr = 1;
  if (this->reporterrstr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->reporterrstr(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.CmdMsg.SaveDefaultDisplayCmd)
}

::google::protobuf::uint8* CmdMsg_SaveDefaultDisplayCmd::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.CmdMsg.SaveDefaultDisplayCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool reportErrStr = 1;
  if (this->reporterrstr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->reporterrstr(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.CmdMsg.SaveDefaultDisplayCmd)
  return target;
}

size_t CmdMsg_SaveDefaultDisplayCmd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.CmdMsg.SaveDefaultDisplayCmd)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool reportErrStr = 1;
  if (this->reporterrstr() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CmdMsg_SaveDefaultDisplayCmd::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.CmdMsg.SaveDefaultDisplayCmd)
  GOOGLE_DCHECK_NE(&from, this);
  const CmdMsg_SaveDefaultDisplayCmd* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CmdMsg_SaveDefaultDisplayCmd>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.CmdMsg.SaveDefaultDisplayCmd)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.CmdMsg.SaveDefaultDisplayCmd)
    MergeFrom(*source);
  }
}

void CmdMsg_SaveDefaultDisplayCmd::MergeFrom(const CmdMsg_SaveDefaultDisplayCmd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.CmdMsg.SaveDefaultDisplayCmd)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reporterrstr() != 0) {
    set_reporterrstr(from.reporterrstr());
  }
}

void CmdMsg_SaveDefaultDisplayCmd::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.CmdMsg.SaveDefaultDisplayCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CmdMsg_SaveDefaultDisplayCmd::CopyFrom(const CmdMsg_SaveDefaultDisplayCmd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.CmdMsg.SaveDefaultDisplayCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CmdMsg_SaveDefaultDisplayCmd::IsInitialized() const {
  return true;
}

void CmdMsg_SaveDefaultDisplayCmd::Swap(CmdMsg_SaveDefaultDisplayCmd* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CmdMsg_SaveDefaultDisplayCmd::InternalSwap(CmdMsg_SaveDefaultDisplayCmd* other) {
  using std::swap;
  swap(reporterrstr_, other->reporterrstr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CmdMsg_SaveDefaultDisplayCmd::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CmdMsg_SaveDisplayToFileCmd::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CmdMsg_SaveDisplayToFileCmd::kFileNameFieldNumber;
const int CmdMsg_SaveDisplayToFileCmd::kReportErrStrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CmdMsg_SaveDisplayToFileCmd::CmdMsg_SaveDisplayToFileCmd()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_SaveDisplayToFileCmd.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.CmdMsg.SaveDisplayToFileCmd)
}
CmdMsg_SaveDisplayToFileCmd::CmdMsg_SaveDisplayToFileCmd(const CmdMsg_SaveDisplayToFileCmd& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filename().size() > 0) {
    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  reporterrstr_ = from.reporterrstr_;
  // @@protoc_insertion_point(copy_constructor:HaWC.CmdMsg.SaveDisplayToFileCmd)
}

void CmdMsg_SaveDisplayToFileCmd::SharedCtor() {
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reporterrstr_ = false;
}

CmdMsg_SaveDisplayToFileCmd::~CmdMsg_SaveDisplayToFileCmd() {
  // @@protoc_insertion_point(destructor:HaWC.CmdMsg.SaveDisplayToFileCmd)
  SharedDtor();
}

void CmdMsg_SaveDisplayToFileCmd::SharedDtor() {
  filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CmdMsg_SaveDisplayToFileCmd::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CmdMsg_SaveDisplayToFileCmd::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CmdMsg_SaveDisplayToFileCmd& CmdMsg_SaveDisplayToFileCmd::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_CmdMsg_SaveDisplayToFileCmd.base);
  return *internal_default_instance();
}


void CmdMsg_SaveDisplayToFileCmd::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.CmdMsg.SaveDisplayToFileCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reporterrstr_ = false;
  _internal_metadata_.Clear();
}

bool CmdMsg_SaveDisplayToFileCmd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.CmdMsg.SaveDisplayToFileCmd)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string fileName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filename().data(), static_cast<int>(this->filename().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HaWC.CmdMsg.SaveDisplayToFileCmd.fileName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool reportErrStr = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &reporterrstr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.CmdMsg.SaveDisplayToFileCmd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.CmdMsg.SaveDisplayToFileCmd)
  return false;
#undef DO_
}

void CmdMsg_SaveDisplayToFileCmd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.CmdMsg.SaveDisplayToFileCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string fileName = 1;
  if (this->filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.CmdMsg.SaveDisplayToFileCmd.fileName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->filename(), output);
  }

  // bool reportErrStr = 2;
  if (this->reporterrstr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->reporterrstr(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.CmdMsg.SaveDisplayToFileCmd)
}

::google::protobuf::uint8* CmdMsg_SaveDisplayToFileCmd::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.CmdMsg.SaveDisplayToFileCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string fileName = 1;
  if (this->filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.CmdMsg.SaveDisplayToFileCmd.fileName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->filename(), target);
  }

  // bool reportErrStr = 2;
  if (this->reporterrstr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->reporterrstr(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.CmdMsg.SaveDisplayToFileCmd)
  return target;
}

size_t CmdMsg_SaveDisplayToFileCmd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.CmdMsg.SaveDisplayToFileCmd)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string fileName = 1;
  if (this->filename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filename());
  }

  // bool reportErrStr = 2;
  if (this->reporterrstr() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CmdMsg_SaveDisplayToFileCmd::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.CmdMsg.SaveDisplayToFileCmd)
  GOOGLE_DCHECK_NE(&from, this);
  const CmdMsg_SaveDisplayToFileCmd* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CmdMsg_SaveDisplayToFileCmd>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.CmdMsg.SaveDisplayToFileCmd)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.CmdMsg.SaveDisplayToFileCmd)
    MergeFrom(*source);
  }
}

void CmdMsg_SaveDisplayToFileCmd::MergeFrom(const CmdMsg_SaveDisplayToFileCmd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.CmdMsg.SaveDisplayToFileCmd)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.filename().size() > 0) {

    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  if (from.reporterrstr() != 0) {
    set_reporterrstr(from.reporterrstr());
  }
}

void CmdMsg_SaveDisplayToFileCmd::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.CmdMsg.SaveDisplayToFileCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CmdMsg_SaveDisplayToFileCmd::CopyFrom(const CmdMsg_SaveDisplayToFileCmd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.CmdMsg.SaveDisplayToFileCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CmdMsg_SaveDisplayToFileCmd::IsInitialized() const {
  return true;
}

void CmdMsg_SaveDisplayToFileCmd::Swap(CmdMsg_SaveDisplayToFileCmd* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CmdMsg_SaveDisplayToFileCmd::InternalSwap(CmdMsg_SaveDisplayToFileCmd* other) {
  using std::swap;
  filename_.Swap(&other->filename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(reporterrstr_, other->reporterrstr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CmdMsg_SaveDisplayToFileCmd::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CmdMsg_LoadDisplayFromFileCmd::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CmdMsg_LoadDisplayFromFileCmd::kFileNameFieldNumber;
const int CmdMsg_LoadDisplayFromFileCmd::kReportErrStrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CmdMsg_LoadDisplayFromFileCmd::CmdMsg_LoadDisplayFromFileCmd()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_LoadDisplayFromFileCmd.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.CmdMsg.LoadDisplayFromFileCmd)
}
CmdMsg_LoadDisplayFromFileCmd::CmdMsg_LoadDisplayFromFileCmd(const CmdMsg_LoadDisplayFromFileCmd& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filename().size() > 0) {
    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  reporterrstr_ = from.reporterrstr_;
  // @@protoc_insertion_point(copy_constructor:HaWC.CmdMsg.LoadDisplayFromFileCmd)
}

void CmdMsg_LoadDisplayFromFileCmd::SharedCtor() {
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reporterrstr_ = false;
}

CmdMsg_LoadDisplayFromFileCmd::~CmdMsg_LoadDisplayFromFileCmd() {
  // @@protoc_insertion_point(destructor:HaWC.CmdMsg.LoadDisplayFromFileCmd)
  SharedDtor();
}

void CmdMsg_LoadDisplayFromFileCmd::SharedDtor() {
  filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CmdMsg_LoadDisplayFromFileCmd::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CmdMsg_LoadDisplayFromFileCmd::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CmdMsg_LoadDisplayFromFileCmd& CmdMsg_LoadDisplayFromFileCmd::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_CmdMsg_LoadDisplayFromFileCmd.base);
  return *internal_default_instance();
}


void CmdMsg_LoadDisplayFromFileCmd::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.CmdMsg.LoadDisplayFromFileCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reporterrstr_ = false;
  _internal_metadata_.Clear();
}

bool CmdMsg_LoadDisplayFromFileCmd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.CmdMsg.LoadDisplayFromFileCmd)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string fileName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filename().data(), static_cast<int>(this->filename().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HaWC.CmdMsg.LoadDisplayFromFileCmd.fileName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool reportErrStr = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &reporterrstr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.CmdMsg.LoadDisplayFromFileCmd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.CmdMsg.LoadDisplayFromFileCmd)
  return false;
#undef DO_
}

void CmdMsg_LoadDisplayFromFileCmd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.CmdMsg.LoadDisplayFromFileCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string fileName = 1;
  if (this->filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.CmdMsg.LoadDisplayFromFileCmd.fileName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->filename(), output);
  }

  // bool reportErrStr = 2;
  if (this->reporterrstr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->reporterrstr(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.CmdMsg.LoadDisplayFromFileCmd)
}

::google::protobuf::uint8* CmdMsg_LoadDisplayFromFileCmd::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.CmdMsg.LoadDisplayFromFileCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string fileName = 1;
  if (this->filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.CmdMsg.LoadDisplayFromFileCmd.fileName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->filename(), target);
  }

  // bool reportErrStr = 2;
  if (this->reporterrstr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->reporterrstr(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.CmdMsg.LoadDisplayFromFileCmd)
  return target;
}

size_t CmdMsg_LoadDisplayFromFileCmd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.CmdMsg.LoadDisplayFromFileCmd)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string fileName = 1;
  if (this->filename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filename());
  }

  // bool reportErrStr = 2;
  if (this->reporterrstr() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CmdMsg_LoadDisplayFromFileCmd::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.CmdMsg.LoadDisplayFromFileCmd)
  GOOGLE_DCHECK_NE(&from, this);
  const CmdMsg_LoadDisplayFromFileCmd* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CmdMsg_LoadDisplayFromFileCmd>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.CmdMsg.LoadDisplayFromFileCmd)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.CmdMsg.LoadDisplayFromFileCmd)
    MergeFrom(*source);
  }
}

void CmdMsg_LoadDisplayFromFileCmd::MergeFrom(const CmdMsg_LoadDisplayFromFileCmd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.CmdMsg.LoadDisplayFromFileCmd)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.filename().size() > 0) {

    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  if (from.reporterrstr() != 0) {
    set_reporterrstr(from.reporterrstr());
  }
}

void CmdMsg_LoadDisplayFromFileCmd::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.CmdMsg.LoadDisplayFromFileCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CmdMsg_LoadDisplayFromFileCmd::CopyFrom(const CmdMsg_LoadDisplayFromFileCmd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.CmdMsg.LoadDisplayFromFileCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CmdMsg_LoadDisplayFromFileCmd::IsInitialized() const {
  return true;
}

void CmdMsg_LoadDisplayFromFileCmd::Swap(CmdMsg_LoadDisplayFromFileCmd* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CmdMsg_LoadDisplayFromFileCmd::InternalSwap(CmdMsg_LoadDisplayFromFileCmd* other) {
  using std::swap;
  filename_.Swap(&other->filename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(reporterrstr_, other->reporterrstr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CmdMsg_LoadDisplayFromFileCmd::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CmdMsg_SaveOverlayToFileCmd::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CmdMsg_SaveOverlayToFileCmd::kMainOverlayFieldNumber;
const int CmdMsg_SaveOverlayToFileCmd::kViewPortIDFieldNumber;
const int CmdMsg_SaveOverlayToFileCmd::kFilenameFieldNumber;
const int CmdMsg_SaveOverlayToFileCmd::kReportErrStrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CmdMsg_SaveOverlayToFileCmd::CmdMsg_SaveOverlayToFileCmd()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_SaveOverlayToFileCmd.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.CmdMsg.SaveOverlayToFileCmd)
}
CmdMsg_SaveOverlayToFileCmd::CmdMsg_SaveOverlayToFileCmd(const CmdMsg_SaveOverlayToFileCmd& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filename().size() > 0) {
    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  ::memcpy(&viewportid_, &from.viewportid_,
    static_cast<size_t>(reinterpret_cast<char*>(&reporterrstr_) -
    reinterpret_cast<char*>(&viewportid_)) + sizeof(reporterrstr_));
  // @@protoc_insertion_point(copy_constructor:HaWC.CmdMsg.SaveOverlayToFileCmd)
}

void CmdMsg_SaveOverlayToFileCmd::SharedCtor() {
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&viewportid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reporterrstr_) -
      reinterpret_cast<char*>(&viewportid_)) + sizeof(reporterrstr_));
}

CmdMsg_SaveOverlayToFileCmd::~CmdMsg_SaveOverlayToFileCmd() {
  // @@protoc_insertion_point(destructor:HaWC.CmdMsg.SaveOverlayToFileCmd)
  SharedDtor();
}

void CmdMsg_SaveOverlayToFileCmd::SharedDtor() {
  filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CmdMsg_SaveOverlayToFileCmd::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CmdMsg_SaveOverlayToFileCmd::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CmdMsg_SaveOverlayToFileCmd& CmdMsg_SaveOverlayToFileCmd::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_CmdMsg_SaveOverlayToFileCmd.base);
  return *internal_default_instance();
}


void CmdMsg_SaveOverlayToFileCmd::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.CmdMsg.SaveOverlayToFileCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&viewportid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reporterrstr_) -
      reinterpret_cast<char*>(&viewportid_)) + sizeof(reporterrstr_));
  _internal_metadata_.Clear();
}

bool CmdMsg_SaveOverlayToFileCmd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.CmdMsg.SaveOverlayToFileCmd)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool mainOverlay = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &mainoverlay_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 viewPortID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &viewportid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string filename = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filename().data(), static_cast<int>(this->filename().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HaWC.CmdMsg.SaveOverlayToFileCmd.filename"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool reportErrStr = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &reporterrstr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.CmdMsg.SaveOverlayToFileCmd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.CmdMsg.SaveOverlayToFileCmd)
  return false;
#undef DO_
}

void CmdMsg_SaveOverlayToFileCmd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.CmdMsg.SaveOverlayToFileCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool mainOverlay = 1;
  if (this->mainoverlay() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->mainoverlay(), output);
  }

  // uint32 viewPortID = 2;
  if (this->viewportid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->viewportid(), output);
  }

  // string filename = 3;
  if (this->filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.CmdMsg.SaveOverlayToFileCmd.filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->filename(), output);
  }

  // bool reportErrStr = 5;
  if (this->reporterrstr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->reporterrstr(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.CmdMsg.SaveOverlayToFileCmd)
}

::google::protobuf::uint8* CmdMsg_SaveOverlayToFileCmd::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.CmdMsg.SaveOverlayToFileCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool mainOverlay = 1;
  if (this->mainoverlay() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->mainoverlay(), target);
  }

  // uint32 viewPortID = 2;
  if (this->viewportid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->viewportid(), target);
  }

  // string filename = 3;
  if (this->filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.CmdMsg.SaveOverlayToFileCmd.filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->filename(), target);
  }

  // bool reportErrStr = 5;
  if (this->reporterrstr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->reporterrstr(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.CmdMsg.SaveOverlayToFileCmd)
  return target;
}

size_t CmdMsg_SaveOverlayToFileCmd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.CmdMsg.SaveOverlayToFileCmd)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string filename = 3;
  if (this->filename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filename());
  }

  // uint32 viewPortID = 2;
  if (this->viewportid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->viewportid());
  }

  // bool mainOverlay = 1;
  if (this->mainoverlay() != 0) {
    total_size += 1 + 1;
  }

  // bool reportErrStr = 5;
  if (this->reporterrstr() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CmdMsg_SaveOverlayToFileCmd::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.CmdMsg.SaveOverlayToFileCmd)
  GOOGLE_DCHECK_NE(&from, this);
  const CmdMsg_SaveOverlayToFileCmd* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CmdMsg_SaveOverlayToFileCmd>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.CmdMsg.SaveOverlayToFileCmd)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.CmdMsg.SaveOverlayToFileCmd)
    MergeFrom(*source);
  }
}

void CmdMsg_SaveOverlayToFileCmd::MergeFrom(const CmdMsg_SaveOverlayToFileCmd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.CmdMsg.SaveOverlayToFileCmd)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.filename().size() > 0) {

    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  if (from.viewportid() != 0) {
    set_viewportid(from.viewportid());
  }
  if (from.mainoverlay() != 0) {
    set_mainoverlay(from.mainoverlay());
  }
  if (from.reporterrstr() != 0) {
    set_reporterrstr(from.reporterrstr());
  }
}

void CmdMsg_SaveOverlayToFileCmd::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.CmdMsg.SaveOverlayToFileCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CmdMsg_SaveOverlayToFileCmd::CopyFrom(const CmdMsg_SaveOverlayToFileCmd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.CmdMsg.SaveOverlayToFileCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CmdMsg_SaveOverlayToFileCmd::IsInitialized() const {
  return true;
}

void CmdMsg_SaveOverlayToFileCmd::Swap(CmdMsg_SaveOverlayToFileCmd* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CmdMsg_SaveOverlayToFileCmd::InternalSwap(CmdMsg_SaveOverlayToFileCmd* other) {
  using std::swap;
  filename_.Swap(&other->filename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(viewportid_, other->viewportid_);
  swap(mainoverlay_, other->mainoverlay_);
  swap(reporterrstr_, other->reporterrstr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CmdMsg_SaveOverlayToFileCmd::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CmdMsg_LoadOverlayFromFileCmd::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CmdMsg_LoadOverlayFromFileCmd::kMainOverlayFieldNumber;
const int CmdMsg_LoadOverlayFromFileCmd::kViewPortIDFieldNumber;
const int CmdMsg_LoadOverlayFromFileCmd::kFilenameFieldNumber;
const int CmdMsg_LoadOverlayFromFileCmd::kReportErrStrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CmdMsg_LoadOverlayFromFileCmd::CmdMsg_LoadOverlayFromFileCmd()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_LoadOverlayFromFileCmd.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.CmdMsg.LoadOverlayFromFileCmd)
}
CmdMsg_LoadOverlayFromFileCmd::CmdMsg_LoadOverlayFromFileCmd(const CmdMsg_LoadOverlayFromFileCmd& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filename().size() > 0) {
    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  ::memcpy(&viewportid_, &from.viewportid_,
    static_cast<size_t>(reinterpret_cast<char*>(&reporterrstr_) -
    reinterpret_cast<char*>(&viewportid_)) + sizeof(reporterrstr_));
  // @@protoc_insertion_point(copy_constructor:HaWC.CmdMsg.LoadOverlayFromFileCmd)
}

void CmdMsg_LoadOverlayFromFileCmd::SharedCtor() {
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&viewportid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reporterrstr_) -
      reinterpret_cast<char*>(&viewportid_)) + sizeof(reporterrstr_));
}

CmdMsg_LoadOverlayFromFileCmd::~CmdMsg_LoadOverlayFromFileCmd() {
  // @@protoc_insertion_point(destructor:HaWC.CmdMsg.LoadOverlayFromFileCmd)
  SharedDtor();
}

void CmdMsg_LoadOverlayFromFileCmd::SharedDtor() {
  filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CmdMsg_LoadOverlayFromFileCmd::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CmdMsg_LoadOverlayFromFileCmd::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CmdMsg_LoadOverlayFromFileCmd& CmdMsg_LoadOverlayFromFileCmd::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_CmdMsg_LoadOverlayFromFileCmd.base);
  return *internal_default_instance();
}


void CmdMsg_LoadOverlayFromFileCmd::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.CmdMsg.LoadOverlayFromFileCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&viewportid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reporterrstr_) -
      reinterpret_cast<char*>(&viewportid_)) + sizeof(reporterrstr_));
  _internal_metadata_.Clear();
}

bool CmdMsg_LoadOverlayFromFileCmd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.CmdMsg.LoadOverlayFromFileCmd)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool mainOverlay = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &mainoverlay_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 viewPortID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &viewportid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string filename = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filename().data(), static_cast<int>(this->filename().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HaWC.CmdMsg.LoadOverlayFromFileCmd.filename"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool reportErrStr = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &reporterrstr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.CmdMsg.LoadOverlayFromFileCmd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.CmdMsg.LoadOverlayFromFileCmd)
  return false;
#undef DO_
}

void CmdMsg_LoadOverlayFromFileCmd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.CmdMsg.LoadOverlayFromFileCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool mainOverlay = 1;
  if (this->mainoverlay() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->mainoverlay(), output);
  }

  // uint32 viewPortID = 2;
  if (this->viewportid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->viewportid(), output);
  }

  // string filename = 3;
  if (this->filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.CmdMsg.LoadOverlayFromFileCmd.filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->filename(), output);
  }

  // bool reportErrStr = 5;
  if (this->reporterrstr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->reporterrstr(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.CmdMsg.LoadOverlayFromFileCmd)
}

::google::protobuf::uint8* CmdMsg_LoadOverlayFromFileCmd::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.CmdMsg.LoadOverlayFromFileCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool mainOverlay = 1;
  if (this->mainoverlay() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->mainoverlay(), target);
  }

  // uint32 viewPortID = 2;
  if (this->viewportid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->viewportid(), target);
  }

  // string filename = 3;
  if (this->filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.CmdMsg.LoadOverlayFromFileCmd.filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->filename(), target);
  }

  // bool reportErrStr = 5;
  if (this->reporterrstr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->reporterrstr(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.CmdMsg.LoadOverlayFromFileCmd)
  return target;
}

size_t CmdMsg_LoadOverlayFromFileCmd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.CmdMsg.LoadOverlayFromFileCmd)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string filename = 3;
  if (this->filename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filename());
  }

  // uint32 viewPortID = 2;
  if (this->viewportid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->viewportid());
  }

  // bool mainOverlay = 1;
  if (this->mainoverlay() != 0) {
    total_size += 1 + 1;
  }

  // bool reportErrStr = 5;
  if (this->reporterrstr() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CmdMsg_LoadOverlayFromFileCmd::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.CmdMsg.LoadOverlayFromFileCmd)
  GOOGLE_DCHECK_NE(&from, this);
  const CmdMsg_LoadOverlayFromFileCmd* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CmdMsg_LoadOverlayFromFileCmd>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.CmdMsg.LoadOverlayFromFileCmd)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.CmdMsg.LoadOverlayFromFileCmd)
    MergeFrom(*source);
  }
}

void CmdMsg_LoadOverlayFromFileCmd::MergeFrom(const CmdMsg_LoadOverlayFromFileCmd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.CmdMsg.LoadOverlayFromFileCmd)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.filename().size() > 0) {

    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  if (from.viewportid() != 0) {
    set_viewportid(from.viewportid());
  }
  if (from.mainoverlay() != 0) {
    set_mainoverlay(from.mainoverlay());
  }
  if (from.reporterrstr() != 0) {
    set_reporterrstr(from.reporterrstr());
  }
}

void CmdMsg_LoadOverlayFromFileCmd::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.CmdMsg.LoadOverlayFromFileCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CmdMsg_LoadOverlayFromFileCmd::CopyFrom(const CmdMsg_LoadOverlayFromFileCmd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.CmdMsg.LoadOverlayFromFileCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CmdMsg_LoadOverlayFromFileCmd::IsInitialized() const {
  return true;
}

void CmdMsg_LoadOverlayFromFileCmd::Swap(CmdMsg_LoadOverlayFromFileCmd* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CmdMsg_LoadOverlayFromFileCmd::InternalSwap(CmdMsg_LoadOverlayFromFileCmd* other) {
  using std::swap;
  filename_.Swap(&other->filename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(viewportid_, other->viewportid_);
  swap(mainoverlay_, other->mainoverlay_);
  swap(reporterrstr_, other->reporterrstr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CmdMsg_LoadOverlayFromFileCmd::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CmdMsg_LoadFontsCmd::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CmdMsg_LoadFontsCmd::kReportParamValsFieldNumber;
const int CmdMsg_LoadFontsCmd::kReportErrStrFieldNumber;
const int CmdMsg_LoadFontsCmd::kOverwriteFilesFieldNumber;
const int CmdMsg_LoadFontsCmd::kFontFilesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CmdMsg_LoadFontsCmd::CmdMsg_LoadFontsCmd()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_LoadFontsCmd.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.CmdMsg.LoadFontsCmd)
}
CmdMsg_LoadFontsCmd::CmdMsg_LoadFontsCmd(const CmdMsg_LoadFontsCmd& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      fontfiles_(from.fontfiles_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&reportparamvals_, &from.reportparamvals_,
    static_cast<size_t>(reinterpret_cast<char*>(&overwritefiles_) -
    reinterpret_cast<char*>(&reportparamvals_)) + sizeof(overwritefiles_));
  // @@protoc_insertion_point(copy_constructor:HaWC.CmdMsg.LoadFontsCmd)
}

void CmdMsg_LoadFontsCmd::SharedCtor() {
  ::memset(&reportparamvals_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&overwritefiles_) -
      reinterpret_cast<char*>(&reportparamvals_)) + sizeof(overwritefiles_));
}

CmdMsg_LoadFontsCmd::~CmdMsg_LoadFontsCmd() {
  // @@protoc_insertion_point(destructor:HaWC.CmdMsg.LoadFontsCmd)
  SharedDtor();
}

void CmdMsg_LoadFontsCmd::SharedDtor() {
}

void CmdMsg_LoadFontsCmd::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CmdMsg_LoadFontsCmd::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CmdMsg_LoadFontsCmd& CmdMsg_LoadFontsCmd::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_CmdMsg_LoadFontsCmd.base);
  return *internal_default_instance();
}


void CmdMsg_LoadFontsCmd::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.CmdMsg.LoadFontsCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fontfiles_.Clear();
  ::memset(&reportparamvals_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&overwritefiles_) -
      reinterpret_cast<char*>(&reportparamvals_)) + sizeof(overwritefiles_));
  _internal_metadata_.Clear();
}

bool CmdMsg_LoadFontsCmd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.CmdMsg.LoadFontsCmd)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool reportParamVals = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &reportparamvals_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool reportErrStr = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &reporterrstr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool overwriteFiles = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &overwritefiles_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string fontFiles = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_fontfiles()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fontfiles(this->fontfiles_size() - 1).data(),
            static_cast<int>(this->fontfiles(this->fontfiles_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HaWC.CmdMsg.LoadFontsCmd.fontFiles"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.CmdMsg.LoadFontsCmd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.CmdMsg.LoadFontsCmd)
  return false;
#undef DO_
}

void CmdMsg_LoadFontsCmd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.CmdMsg.LoadFontsCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool reportParamVals = 1;
  if (this->reportparamvals() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->reportparamvals(), output);
  }

  // bool reportErrStr = 2;
  if (this->reporterrstr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->reporterrstr(), output);
  }

  // bool overwriteFiles = 3;
  if (this->overwritefiles() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->overwritefiles(), output);
  }

  // repeated string fontFiles = 4;
  for (int i = 0, n = this->fontfiles_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fontfiles(i).data(), static_cast<int>(this->fontfiles(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.CmdMsg.LoadFontsCmd.fontFiles");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->fontfiles(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.CmdMsg.LoadFontsCmd)
}

::google::protobuf::uint8* CmdMsg_LoadFontsCmd::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.CmdMsg.LoadFontsCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool reportParamVals = 1;
  if (this->reportparamvals() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->reportparamvals(), target);
  }

  // bool reportErrStr = 2;
  if (this->reporterrstr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->reporterrstr(), target);
  }

  // bool overwriteFiles = 3;
  if (this->overwritefiles() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->overwritefiles(), target);
  }

  // repeated string fontFiles = 4;
  for (int i = 0, n = this->fontfiles_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fontfiles(i).data(), static_cast<int>(this->fontfiles(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.CmdMsg.LoadFontsCmd.fontFiles");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->fontfiles(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.CmdMsg.LoadFontsCmd)
  return target;
}

size_t CmdMsg_LoadFontsCmd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.CmdMsg.LoadFontsCmd)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string fontFiles = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->fontfiles_size());
  for (int i = 0, n = this->fontfiles_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->fontfiles(i));
  }

  // bool reportParamVals = 1;
  if (this->reportparamvals() != 0) {
    total_size += 1 + 1;
  }

  // bool reportErrStr = 2;
  if (this->reporterrstr() != 0) {
    total_size += 1 + 1;
  }

  // bool overwriteFiles = 3;
  if (this->overwritefiles() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CmdMsg_LoadFontsCmd::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.CmdMsg.LoadFontsCmd)
  GOOGLE_DCHECK_NE(&from, this);
  const CmdMsg_LoadFontsCmd* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CmdMsg_LoadFontsCmd>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.CmdMsg.LoadFontsCmd)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.CmdMsg.LoadFontsCmd)
    MergeFrom(*source);
  }
}

void CmdMsg_LoadFontsCmd::MergeFrom(const CmdMsg_LoadFontsCmd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.CmdMsg.LoadFontsCmd)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  fontfiles_.MergeFrom(from.fontfiles_);
  if (from.reportparamvals() != 0) {
    set_reportparamvals(from.reportparamvals());
  }
  if (from.reporterrstr() != 0) {
    set_reporterrstr(from.reporterrstr());
  }
  if (from.overwritefiles() != 0) {
    set_overwritefiles(from.overwritefiles());
  }
}

void CmdMsg_LoadFontsCmd::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.CmdMsg.LoadFontsCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CmdMsg_LoadFontsCmd::CopyFrom(const CmdMsg_LoadFontsCmd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.CmdMsg.LoadFontsCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CmdMsg_LoadFontsCmd::IsInitialized() const {
  return true;
}

void CmdMsg_LoadFontsCmd::Swap(CmdMsg_LoadFontsCmd* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CmdMsg_LoadFontsCmd::InternalSwap(CmdMsg_LoadFontsCmd* other) {
  using std::swap;
  fontfiles_.InternalSwap(CastToBase(&other->fontfiles_));
  swap(reportparamvals_, other->reportparamvals_);
  swap(reporterrstr_, other->reporterrstr_);
  swap(overwritefiles_, other->overwritefiles_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CmdMsg_LoadFontsCmd::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CmdMsg_RestoreFactoryDisplayCmd::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CmdMsg_RestoreFactoryDisplayCmd::CmdMsg_RestoreFactoryDisplayCmd()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_RestoreFactoryDisplayCmd.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.CmdMsg.RestoreFactoryDisplayCmd)
}
CmdMsg_RestoreFactoryDisplayCmd::CmdMsg_RestoreFactoryDisplayCmd(const CmdMsg_RestoreFactoryDisplayCmd& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:HaWC.CmdMsg.RestoreFactoryDisplayCmd)
}

void CmdMsg_RestoreFactoryDisplayCmd::SharedCtor() {
}

CmdMsg_RestoreFactoryDisplayCmd::~CmdMsg_RestoreFactoryDisplayCmd() {
  // @@protoc_insertion_point(destructor:HaWC.CmdMsg.RestoreFactoryDisplayCmd)
  SharedDtor();
}

void CmdMsg_RestoreFactoryDisplayCmd::SharedDtor() {
}

void CmdMsg_RestoreFactoryDisplayCmd::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CmdMsg_RestoreFactoryDisplayCmd::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CmdMsg_RestoreFactoryDisplayCmd& CmdMsg_RestoreFactoryDisplayCmd::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_CmdMsg_RestoreFactoryDisplayCmd.base);
  return *internal_default_instance();
}


void CmdMsg_RestoreFactoryDisplayCmd::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.CmdMsg.RestoreFactoryDisplayCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool CmdMsg_RestoreFactoryDisplayCmd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.CmdMsg.RestoreFactoryDisplayCmd)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.CmdMsg.RestoreFactoryDisplayCmd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.CmdMsg.RestoreFactoryDisplayCmd)
  return false;
#undef DO_
}

void CmdMsg_RestoreFactoryDisplayCmd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.CmdMsg.RestoreFactoryDisplayCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.CmdMsg.RestoreFactoryDisplayCmd)
}

::google::protobuf::uint8* CmdMsg_RestoreFactoryDisplayCmd::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.CmdMsg.RestoreFactoryDisplayCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.CmdMsg.RestoreFactoryDisplayCmd)
  return target;
}

size_t CmdMsg_RestoreFactoryDisplayCmd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.CmdMsg.RestoreFactoryDisplayCmd)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CmdMsg_RestoreFactoryDisplayCmd::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.CmdMsg.RestoreFactoryDisplayCmd)
  GOOGLE_DCHECK_NE(&from, this);
  const CmdMsg_RestoreFactoryDisplayCmd* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CmdMsg_RestoreFactoryDisplayCmd>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.CmdMsg.RestoreFactoryDisplayCmd)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.CmdMsg.RestoreFactoryDisplayCmd)
    MergeFrom(*source);
  }
}

void CmdMsg_RestoreFactoryDisplayCmd::MergeFrom(const CmdMsg_RestoreFactoryDisplayCmd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.CmdMsg.RestoreFactoryDisplayCmd)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CmdMsg_RestoreFactoryDisplayCmd::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.CmdMsg.RestoreFactoryDisplayCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CmdMsg_RestoreFactoryDisplayCmd::CopyFrom(const CmdMsg_RestoreFactoryDisplayCmd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.CmdMsg.RestoreFactoryDisplayCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CmdMsg_RestoreFactoryDisplayCmd::IsInitialized() const {
  return true;
}

void CmdMsg_RestoreFactoryDisplayCmd::Swap(CmdMsg_RestoreFactoryDisplayCmd* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CmdMsg_RestoreFactoryDisplayCmd::InternalSwap(CmdMsg_RestoreFactoryDisplayCmd* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CmdMsg_RestoreFactoryDisplayCmd::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CmdMsg_DisplayCmd::InitAsDefaultInstance() {
  ::HaWC::_CmdMsg_DisplayCmd_default_instance_.setdisplaycfg_ = const_cast< ::HaWC::CmdMsg_SetDisplayCfgCmd*>(
      ::HaWC::CmdMsg_SetDisplayCfgCmd::internal_default_instance());
  ::HaWC::_CmdMsg_DisplayCmd_default_instance_.getdisplaycfg_ = const_cast< ::HaWC::CmdMsg_GetDisplayCfgCmd*>(
      ::HaWC::CmdMsg_GetDisplayCfgCmd::internal_default_instance());
  ::HaWC::_CmdMsg_DisplayCmd_default_instance_.savedefaultdisplaycmd_ = const_cast< ::HaWC::CmdMsg_SaveDefaultDisplayCmd*>(
      ::HaWC::CmdMsg_SaveDefaultDisplayCmd::internal_default_instance());
  ::HaWC::_CmdMsg_DisplayCmd_default_instance_.savedisplaycmd_ = const_cast< ::HaWC::CmdMsg_SaveDisplayToFileCmd*>(
      ::HaWC::CmdMsg_SaveDisplayToFileCmd::internal_default_instance());
  ::HaWC::_CmdMsg_DisplayCmd_default_instance_.loaddisplaycmd_ = const_cast< ::HaWC::CmdMsg_LoadDisplayFromFileCmd*>(
      ::HaWC::CmdMsg_LoadDisplayFromFileCmd::internal_default_instance());
  ::HaWC::_CmdMsg_DisplayCmd_default_instance_.restorefactorydisplaycfgn_ = const_cast< ::HaWC::CmdMsg_RestoreFactoryDisplayCmd*>(
      ::HaWC::CmdMsg_RestoreFactoryDisplayCmd::internal_default_instance());
  ::HaWC::_CmdMsg_DisplayCmd_default_instance_.loadfontscmd_ = const_cast< ::HaWC::CmdMsg_LoadFontsCmd*>(
      ::HaWC::CmdMsg_LoadFontsCmd::internal_default_instance());
  ::HaWC::_CmdMsg_DisplayCmd_default_instance_.saveoverlaytofilecmd_ = const_cast< ::HaWC::CmdMsg_SaveOverlayToFileCmd*>(
      ::HaWC::CmdMsg_SaveOverlayToFileCmd::internal_default_instance());
  ::HaWC::_CmdMsg_DisplayCmd_default_instance_.loadoverlayfromfilecmd_ = const_cast< ::HaWC::CmdMsg_LoadOverlayFromFileCmd*>(
      ::HaWC::CmdMsg_LoadOverlayFromFileCmd::internal_default_instance());
}
void CmdMsg_DisplayCmd::set_allocated_setdisplaycfg(::HaWC::CmdMsg_SetDisplayCfgCmd* setdisplaycfg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_command();
  if (setdisplaycfg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      setdisplaycfg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, setdisplaycfg, submessage_arena);
    }
    set_has_setdisplaycfg();
    command_.setdisplaycfg_ = setdisplaycfg;
  }
  // @@protoc_insertion_point(field_set_allocated:HaWC.CmdMsg.DisplayCmd.setDisplayCfg)
}
void CmdMsg_DisplayCmd::set_allocated_getdisplaycfg(::HaWC::CmdMsg_GetDisplayCfgCmd* getdisplaycfg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_command();
  if (getdisplaycfg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      getdisplaycfg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, getdisplaycfg, submessage_arena);
    }
    set_has_getdisplaycfg();
    command_.getdisplaycfg_ = getdisplaycfg;
  }
  // @@protoc_insertion_point(field_set_allocated:HaWC.CmdMsg.DisplayCmd.getDisplayCfg)
}
void CmdMsg_DisplayCmd::set_allocated_savedefaultdisplaycmd(::HaWC::CmdMsg_SaveDefaultDisplayCmd* savedefaultdisplaycmd) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_command();
  if (savedefaultdisplaycmd) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      savedefaultdisplaycmd = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, savedefaultdisplaycmd, submessage_arena);
    }
    set_has_savedefaultdisplaycmd();
    command_.savedefaultdisplaycmd_ = savedefaultdisplaycmd;
  }
  // @@protoc_insertion_point(field_set_allocated:HaWC.CmdMsg.DisplayCmd.saveDefaultDisplayCmd)
}
void CmdMsg_DisplayCmd::set_allocated_savedisplaycmd(::HaWC::CmdMsg_SaveDisplayToFileCmd* savedisplaycmd) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_command();
  if (savedisplaycmd) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      savedisplaycmd = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, savedisplaycmd, submessage_arena);
    }
    set_has_savedisplaycmd();
    command_.savedisplaycmd_ = savedisplaycmd;
  }
  // @@protoc_insertion_point(field_set_allocated:HaWC.CmdMsg.DisplayCmd.saveDisplayCmd)
}
void CmdMsg_DisplayCmd::set_allocated_loaddisplaycmd(::HaWC::CmdMsg_LoadDisplayFromFileCmd* loaddisplaycmd) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_command();
  if (loaddisplaycmd) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      loaddisplaycmd = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, loaddisplaycmd, submessage_arena);
    }
    set_has_loaddisplaycmd();
    command_.loaddisplaycmd_ = loaddisplaycmd;
  }
  // @@protoc_insertion_point(field_set_allocated:HaWC.CmdMsg.DisplayCmd.loadDisplayCmd)
}
void CmdMsg_DisplayCmd::set_allocated_restorefactorydisplaycfgn(::HaWC::CmdMsg_RestoreFactoryDisplayCmd* restorefactorydisplaycfgn) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_command();
  if (restorefactorydisplaycfgn) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      restorefactorydisplaycfgn = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, restorefactorydisplaycfgn, submessage_arena);
    }
    set_has_restorefactorydisplaycfgn();
    command_.restorefactorydisplaycfgn_ = restorefactorydisplaycfgn;
  }
  // @@protoc_insertion_point(field_set_allocated:HaWC.CmdMsg.DisplayCmd.restoreFactoryDisplayCfgn)
}
void CmdMsg_DisplayCmd::set_allocated_loadfontscmd(::HaWC::CmdMsg_LoadFontsCmd* loadfontscmd) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_command();
  if (loadfontscmd) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      loadfontscmd = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, loadfontscmd, submessage_arena);
    }
    set_has_loadfontscmd();
    command_.loadfontscmd_ = loadfontscmd;
  }
  // @@protoc_insertion_point(field_set_allocated:HaWC.CmdMsg.DisplayCmd.loadFontsCmd)
}
void CmdMsg_DisplayCmd::set_allocated_saveoverlaytofilecmd(::HaWC::CmdMsg_SaveOverlayToFileCmd* saveoverlaytofilecmd) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_command();
  if (saveoverlaytofilecmd) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      saveoverlaytofilecmd = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, saveoverlaytofilecmd, submessage_arena);
    }
    set_has_saveoverlaytofilecmd();
    command_.saveoverlaytofilecmd_ = saveoverlaytofilecmd;
  }
  // @@protoc_insertion_point(field_set_allocated:HaWC.CmdMsg.DisplayCmd.saveOverlayToFileCmd)
}
void CmdMsg_DisplayCmd::set_allocated_loadoverlayfromfilecmd(::HaWC::CmdMsg_LoadOverlayFromFileCmd* loadoverlayfromfilecmd) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_command();
  if (loadoverlayfromfilecmd) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      loadoverlayfromfilecmd = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, loadoverlayfromfilecmd, submessage_arena);
    }
    set_has_loadoverlayfromfilecmd();
    command_.loadoverlayfromfilecmd_ = loadoverlayfromfilecmd;
  }
  // @@protoc_insertion_point(field_set_allocated:HaWC.CmdMsg.DisplayCmd.loadOverlayFromFileCmd)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CmdMsg_DisplayCmd::kSetDisplayCfgFieldNumber;
const int CmdMsg_DisplayCmd::kGetDisplayCfgFieldNumber;
const int CmdMsg_DisplayCmd::kSaveDefaultDisplayCmdFieldNumber;
const int CmdMsg_DisplayCmd::kSaveDisplayCmdFieldNumber;
const int CmdMsg_DisplayCmd::kLoadDisplayCmdFieldNumber;
const int CmdMsg_DisplayCmd::kRestoreFactoryDisplayCfgnFieldNumber;
const int CmdMsg_DisplayCmd::kLoadFontsCmdFieldNumber;
const int CmdMsg_DisplayCmd::kSaveOverlayToFileCmdFieldNumber;
const int CmdMsg_DisplayCmd::kLoadOverlayFromFileCmdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CmdMsg_DisplayCmd::CmdMsg_DisplayCmd()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_DisplayCmd.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.CmdMsg.DisplayCmd)
}
CmdMsg_DisplayCmd::CmdMsg_DisplayCmd(const CmdMsg_DisplayCmd& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_command();
  switch (from.command_case()) {
    case kSetDisplayCfg: {
      mutable_setdisplaycfg()->::HaWC::CmdMsg_SetDisplayCfgCmd::MergeFrom(from.setdisplaycfg());
      break;
    }
    case kGetDisplayCfg: {
      mutable_getdisplaycfg()->::HaWC::CmdMsg_GetDisplayCfgCmd::MergeFrom(from.getdisplaycfg());
      break;
    }
    case kSaveDefaultDisplayCmd: {
      mutable_savedefaultdisplaycmd()->::HaWC::CmdMsg_SaveDefaultDisplayCmd::MergeFrom(from.savedefaultdisplaycmd());
      break;
    }
    case kSaveDisplayCmd: {
      mutable_savedisplaycmd()->::HaWC::CmdMsg_SaveDisplayToFileCmd::MergeFrom(from.savedisplaycmd());
      break;
    }
    case kLoadDisplayCmd: {
      mutable_loaddisplaycmd()->::HaWC::CmdMsg_LoadDisplayFromFileCmd::MergeFrom(from.loaddisplaycmd());
      break;
    }
    case kRestoreFactoryDisplayCfgn: {
      mutable_restorefactorydisplaycfgn()->::HaWC::CmdMsg_RestoreFactoryDisplayCmd::MergeFrom(from.restorefactorydisplaycfgn());
      break;
    }
    case kLoadFontsCmd: {
      mutable_loadfontscmd()->::HaWC::CmdMsg_LoadFontsCmd::MergeFrom(from.loadfontscmd());
      break;
    }
    case kSaveOverlayToFileCmd: {
      mutable_saveoverlaytofilecmd()->::HaWC::CmdMsg_SaveOverlayToFileCmd::MergeFrom(from.saveoverlaytofilecmd());
      break;
    }
    case kLoadOverlayFromFileCmd: {
      mutable_loadoverlayfromfilecmd()->::HaWC::CmdMsg_LoadOverlayFromFileCmd::MergeFrom(from.loadoverlayfromfilecmd());
      break;
    }
    case COMMAND_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:HaWC.CmdMsg.DisplayCmd)
}

void CmdMsg_DisplayCmd::SharedCtor() {
  clear_has_command();
}

CmdMsg_DisplayCmd::~CmdMsg_DisplayCmd() {
  // @@protoc_insertion_point(destructor:HaWC.CmdMsg.DisplayCmd)
  SharedDtor();
}

void CmdMsg_DisplayCmd::SharedDtor() {
  if (has_command()) {
    clear_command();
  }
}

void CmdMsg_DisplayCmd::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CmdMsg_DisplayCmd::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CmdMsg_DisplayCmd& CmdMsg_DisplayCmd::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_CmdMsg_DisplayCmd.base);
  return *internal_default_instance();
}


void CmdMsg_DisplayCmd::clear_command() {
// @@protoc_insertion_point(one_of_clear_start:HaWC.CmdMsg.DisplayCmd)
  switch (command_case()) {
    case kSetDisplayCfg: {
      delete command_.setdisplaycfg_;
      break;
    }
    case kGetDisplayCfg: {
      delete command_.getdisplaycfg_;
      break;
    }
    case kSaveDefaultDisplayCmd: {
      delete command_.savedefaultdisplaycmd_;
      break;
    }
    case kSaveDisplayCmd: {
      delete command_.savedisplaycmd_;
      break;
    }
    case kLoadDisplayCmd: {
      delete command_.loaddisplaycmd_;
      break;
    }
    case kRestoreFactoryDisplayCfgn: {
      delete command_.restorefactorydisplaycfgn_;
      break;
    }
    case kLoadFontsCmd: {
      delete command_.loadfontscmd_;
      break;
    }
    case kSaveOverlayToFileCmd: {
      delete command_.saveoverlaytofilecmd_;
      break;
    }
    case kLoadOverlayFromFileCmd: {
      delete command_.loadoverlayfromfilecmd_;
      break;
    }
    case COMMAND_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = COMMAND_NOT_SET;
}


void CmdMsg_DisplayCmd::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.CmdMsg.DisplayCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_command();
  _internal_metadata_.Clear();
}

bool CmdMsg_DisplayCmd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.CmdMsg.DisplayCmd)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .HaWC.CmdMsg.SetDisplayCfgCmd setDisplayCfg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_setdisplaycfg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .HaWC.CmdMsg.GetDisplayCfgCmd getDisplayCfg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_getdisplaycfg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .HaWC.CmdMsg.SaveDefaultDisplayCmd saveDefaultDisplayCmd = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_savedefaultdisplaycmd()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .HaWC.CmdMsg.SaveDisplayToFileCmd saveDisplayCmd = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_savedisplaycmd()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .HaWC.CmdMsg.LoadDisplayFromFileCmd loadDisplayCmd = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_loaddisplaycmd()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .HaWC.CmdMsg.RestoreFactoryDisplayCmd restoreFactoryDisplayCfgn = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_restorefactorydisplaycfgn()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .HaWC.CmdMsg.LoadFontsCmd loadFontsCmd = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_loadfontscmd()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .HaWC.CmdMsg.SaveOverlayToFileCmd saveOverlayToFileCmd = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_saveoverlaytofilecmd()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .HaWC.CmdMsg.LoadOverlayFromFileCmd loadOverlayFromFileCmd = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_loadoverlayfromfilecmd()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.CmdMsg.DisplayCmd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.CmdMsg.DisplayCmd)
  return false;
#undef DO_
}

void CmdMsg_DisplayCmd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.CmdMsg.DisplayCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .HaWC.CmdMsg.SetDisplayCfgCmd setDisplayCfg = 1;
  if (has_setdisplaycfg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_setdisplaycfg(), output);
  }

  // .HaWC.CmdMsg.GetDisplayCfgCmd getDisplayCfg = 2;
  if (has_getdisplaycfg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_getdisplaycfg(), output);
  }

  // .HaWC.CmdMsg.SaveDefaultDisplayCmd saveDefaultDisplayCmd = 5;
  if (has_savedefaultdisplaycmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_savedefaultdisplaycmd(), output);
  }

  // .HaWC.CmdMsg.SaveDisplayToFileCmd saveDisplayCmd = 6;
  if (has_savedisplaycmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_savedisplaycmd(), output);
  }

  // .HaWC.CmdMsg.LoadDisplayFromFileCmd loadDisplayCmd = 7;
  if (has_loaddisplaycmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_loaddisplaycmd(), output);
  }

  // .HaWC.CmdMsg.RestoreFactoryDisplayCmd restoreFactoryDisplayCfgn = 8;
  if (has_restorefactorydisplaycfgn()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_restorefactorydisplaycfgn(), output);
  }

  // .HaWC.CmdMsg.LoadFontsCmd loadFontsCmd = 10;
  if (has_loadfontscmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_loadfontscmd(), output);
  }

  // .HaWC.CmdMsg.SaveOverlayToFileCmd saveOverlayToFileCmd = 15;
  if (has_saveoverlaytofilecmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->_internal_saveoverlaytofilecmd(), output);
  }

  // .HaWC.CmdMsg.LoadOverlayFromFileCmd loadOverlayFromFileCmd = 16;
  if (has_loadoverlayfromfilecmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->_internal_loadoverlayfromfilecmd(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.CmdMsg.DisplayCmd)
}

::google::protobuf::uint8* CmdMsg_DisplayCmd::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.CmdMsg.DisplayCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .HaWC.CmdMsg.SetDisplayCfgCmd setDisplayCfg = 1;
  if (has_setdisplaycfg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_setdisplaycfg(), deterministic, target);
  }

  // .HaWC.CmdMsg.GetDisplayCfgCmd getDisplayCfg = 2;
  if (has_getdisplaycfg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_getdisplaycfg(), deterministic, target);
  }

  // .HaWC.CmdMsg.SaveDefaultDisplayCmd saveDefaultDisplayCmd = 5;
  if (has_savedefaultdisplaycmd()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_savedefaultdisplaycmd(), deterministic, target);
  }

  // .HaWC.CmdMsg.SaveDisplayToFileCmd saveDisplayCmd = 6;
  if (has_savedisplaycmd()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_savedisplaycmd(), deterministic, target);
  }

  // .HaWC.CmdMsg.LoadDisplayFromFileCmd loadDisplayCmd = 7;
  if (has_loaddisplaycmd()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_loaddisplaycmd(), deterministic, target);
  }

  // .HaWC.CmdMsg.RestoreFactoryDisplayCmd restoreFactoryDisplayCfgn = 8;
  if (has_restorefactorydisplaycfgn()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_restorefactorydisplaycfgn(), deterministic, target);
  }

  // .HaWC.CmdMsg.LoadFontsCmd loadFontsCmd = 10;
  if (has_loadfontscmd()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_loadfontscmd(), deterministic, target);
  }

  // .HaWC.CmdMsg.SaveOverlayToFileCmd saveOverlayToFileCmd = 15;
  if (has_saveoverlaytofilecmd()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->_internal_saveoverlaytofilecmd(), deterministic, target);
  }

  // .HaWC.CmdMsg.LoadOverlayFromFileCmd loadOverlayFromFileCmd = 16;
  if (has_loadoverlayfromfilecmd()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->_internal_loadoverlayfromfilecmd(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.CmdMsg.DisplayCmd)
  return target;
}

size_t CmdMsg_DisplayCmd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.CmdMsg.DisplayCmd)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (command_case()) {
    // .HaWC.CmdMsg.SetDisplayCfgCmd setDisplayCfg = 1;
    case kSetDisplayCfg: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *command_.setdisplaycfg_);
      break;
    }
    // .HaWC.CmdMsg.GetDisplayCfgCmd getDisplayCfg = 2;
    case kGetDisplayCfg: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *command_.getdisplaycfg_);
      break;
    }
    // .HaWC.CmdMsg.SaveDefaultDisplayCmd saveDefaultDisplayCmd = 5;
    case kSaveDefaultDisplayCmd: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *command_.savedefaultdisplaycmd_);
      break;
    }
    // .HaWC.CmdMsg.SaveDisplayToFileCmd saveDisplayCmd = 6;
    case kSaveDisplayCmd: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *command_.savedisplaycmd_);
      break;
    }
    // .HaWC.CmdMsg.LoadDisplayFromFileCmd loadDisplayCmd = 7;
    case kLoadDisplayCmd: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *command_.loaddisplaycmd_);
      break;
    }
    // .HaWC.CmdMsg.RestoreFactoryDisplayCmd restoreFactoryDisplayCfgn = 8;
    case kRestoreFactoryDisplayCfgn: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *command_.restorefactorydisplaycfgn_);
      break;
    }
    // .HaWC.CmdMsg.LoadFontsCmd loadFontsCmd = 10;
    case kLoadFontsCmd: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *command_.loadfontscmd_);
      break;
    }
    // .HaWC.CmdMsg.SaveOverlayToFileCmd saveOverlayToFileCmd = 15;
    case kSaveOverlayToFileCmd: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *command_.saveoverlaytofilecmd_);
      break;
    }
    // .HaWC.CmdMsg.LoadOverlayFromFileCmd loadOverlayFromFileCmd = 16;
    case kLoadOverlayFromFileCmd: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *command_.loadoverlayfromfilecmd_);
      break;
    }
    case COMMAND_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CmdMsg_DisplayCmd::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.CmdMsg.DisplayCmd)
  GOOGLE_DCHECK_NE(&from, this);
  const CmdMsg_DisplayCmd* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CmdMsg_DisplayCmd>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.CmdMsg.DisplayCmd)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.CmdMsg.DisplayCmd)
    MergeFrom(*source);
  }
}

void CmdMsg_DisplayCmd::MergeFrom(const CmdMsg_DisplayCmd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.CmdMsg.DisplayCmd)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.command_case()) {
    case kSetDisplayCfg: {
      mutable_setdisplaycfg()->::HaWC::CmdMsg_SetDisplayCfgCmd::MergeFrom(from.setdisplaycfg());
      break;
    }
    case kGetDisplayCfg: {
      mutable_getdisplaycfg()->::HaWC::CmdMsg_GetDisplayCfgCmd::MergeFrom(from.getdisplaycfg());
      break;
    }
    case kSaveDefaultDisplayCmd: {
      mutable_savedefaultdisplaycmd()->::HaWC::CmdMsg_SaveDefaultDisplayCmd::MergeFrom(from.savedefaultdisplaycmd());
      break;
    }
    case kSaveDisplayCmd: {
      mutable_savedisplaycmd()->::HaWC::CmdMsg_SaveDisplayToFileCmd::MergeFrom(from.savedisplaycmd());
      break;
    }
    case kLoadDisplayCmd: {
      mutable_loaddisplaycmd()->::HaWC::CmdMsg_LoadDisplayFromFileCmd::MergeFrom(from.loaddisplaycmd());
      break;
    }
    case kRestoreFactoryDisplayCfgn: {
      mutable_restorefactorydisplaycfgn()->::HaWC::CmdMsg_RestoreFactoryDisplayCmd::MergeFrom(from.restorefactorydisplaycfgn());
      break;
    }
    case kLoadFontsCmd: {
      mutable_loadfontscmd()->::HaWC::CmdMsg_LoadFontsCmd::MergeFrom(from.loadfontscmd());
      break;
    }
    case kSaveOverlayToFileCmd: {
      mutable_saveoverlaytofilecmd()->::HaWC::CmdMsg_SaveOverlayToFileCmd::MergeFrom(from.saveoverlaytofilecmd());
      break;
    }
    case kLoadOverlayFromFileCmd: {
      mutable_loadoverlayfromfilecmd()->::HaWC::CmdMsg_LoadOverlayFromFileCmd::MergeFrom(from.loadoverlayfromfilecmd());
      break;
    }
    case COMMAND_NOT_SET: {
      break;
    }
  }
}

void CmdMsg_DisplayCmd::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.CmdMsg.DisplayCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CmdMsg_DisplayCmd::CopyFrom(const CmdMsg_DisplayCmd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.CmdMsg.DisplayCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CmdMsg_DisplayCmd::IsInitialized() const {
  return true;
}

void CmdMsg_DisplayCmd::Swap(CmdMsg_DisplayCmd* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CmdMsg_DisplayCmd::InternalSwap(CmdMsg_DisplayCmd* other) {
  using std::swap;
  swap(command_, other->command_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CmdMsg_DisplayCmd::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CmdMsg_IO_Cmd::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CmdMsg_IO_Cmd::CmdMsg_IO_Cmd()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_CmdMsg_IO_Cmd.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.CmdMsg.IO_Cmd)
}
CmdMsg_IO_Cmd::CmdMsg_IO_Cmd(const CmdMsg_IO_Cmd& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:HaWC.CmdMsg.IO_Cmd)
}

void CmdMsg_IO_Cmd::SharedCtor() {
}

CmdMsg_IO_Cmd::~CmdMsg_IO_Cmd() {
  // @@protoc_insertion_point(destructor:HaWC.CmdMsg.IO_Cmd)
  SharedDtor();
}

void CmdMsg_IO_Cmd::SharedDtor() {
}

void CmdMsg_IO_Cmd::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CmdMsg_IO_Cmd::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CmdMsg_IO_Cmd& CmdMsg_IO_Cmd::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_CmdMsg_IO_Cmd.base);
  return *internal_default_instance();
}


void CmdMsg_IO_Cmd::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.CmdMsg.IO_Cmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool CmdMsg_IO_Cmd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.CmdMsg.IO_Cmd)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.CmdMsg.IO_Cmd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.CmdMsg.IO_Cmd)
  return false;
#undef DO_
}

void CmdMsg_IO_Cmd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.CmdMsg.IO_Cmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.CmdMsg.IO_Cmd)
}

::google::protobuf::uint8* CmdMsg_IO_Cmd::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.CmdMsg.IO_Cmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.CmdMsg.IO_Cmd)
  return target;
}

size_t CmdMsg_IO_Cmd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.CmdMsg.IO_Cmd)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CmdMsg_IO_Cmd::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.CmdMsg.IO_Cmd)
  GOOGLE_DCHECK_NE(&from, this);
  const CmdMsg_IO_Cmd* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CmdMsg_IO_Cmd>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.CmdMsg.IO_Cmd)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.CmdMsg.IO_Cmd)
    MergeFrom(*source);
  }
}

void CmdMsg_IO_Cmd::MergeFrom(const CmdMsg_IO_Cmd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.CmdMsg.IO_Cmd)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CmdMsg_IO_Cmd::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.CmdMsg.IO_Cmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CmdMsg_IO_Cmd::CopyFrom(const CmdMsg_IO_Cmd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.CmdMsg.IO_Cmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CmdMsg_IO_Cmd::IsInitialized() const {
  return true;
}

void CmdMsg_IO_Cmd::Swap(CmdMsg_IO_Cmd* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CmdMsg_IO_Cmd::InternalSwap(CmdMsg_IO_Cmd* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CmdMsg_IO_Cmd::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CmdMsg::InitAsDefaultInstance() {
  ::HaWC::_CmdMsg_default_instance_.appcmd_ = const_cast< ::HaWC::CmdMsg_AppManagerCmd*>(
      ::HaWC::CmdMsg_AppManagerCmd::internal_default_instance());
  ::HaWC::_CmdMsg_default_instance_.displaycmd_ = const_cast< ::HaWC::CmdMsg_DisplayCmd*>(
      ::HaWC::CmdMsg_DisplayCmd::internal_default_instance());
  ::HaWC::_CmdMsg_default_instance_.iocmd_ = const_cast< ::HaWC::CmdMsg_IO_Cmd*>(
      ::HaWC::CmdMsg_IO_Cmd::internal_default_instance());
}
void CmdMsg::set_allocated_appcmd(::HaWC::CmdMsg_AppManagerCmd* appcmd) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_command();
  if (appcmd) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      appcmd = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, appcmd, submessage_arena);
    }
    set_has_appcmd();
    command_.appcmd_ = appcmd;
  }
  // @@protoc_insertion_point(field_set_allocated:HaWC.CmdMsg.appCmd)
}
void CmdMsg::set_allocated_displaycmd(::HaWC::CmdMsg_DisplayCmd* displaycmd) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_command();
  if (displaycmd) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      displaycmd = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, displaycmd, submessage_arena);
    }
    set_has_displaycmd();
    command_.displaycmd_ = displaycmd;
  }
  // @@protoc_insertion_point(field_set_allocated:HaWC.CmdMsg.displayCmd)
}
void CmdMsg::set_allocated_iocmd(::HaWC::CmdMsg_IO_Cmd* iocmd) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_command();
  if (iocmd) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      iocmd = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, iocmd, submessage_arena);
    }
    set_has_iocmd();
    command_.iocmd_ = iocmd;
  }
  // @@protoc_insertion_point(field_set_allocated:HaWC.CmdMsg.ioCmd)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CmdMsg::kSeqNumFieldNumber;
const int CmdMsg::kAppCmdFieldNumber;
const int CmdMsg::kDisplayCmdFieldNumber;
const int CmdMsg::kIoCmdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CmdMsg::CmdMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_CmdMsg.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.CmdMsg)
}
CmdMsg::CmdMsg(const CmdMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  seqnum_ = from.seqnum_;
  clear_has_command();
  switch (from.command_case()) {
    case kAppCmd: {
      mutable_appcmd()->::HaWC::CmdMsg_AppManagerCmd::MergeFrom(from.appcmd());
      break;
    }
    case kDisplayCmd: {
      mutable_displaycmd()->::HaWC::CmdMsg_DisplayCmd::MergeFrom(from.displaycmd());
      break;
    }
    case kIoCmd: {
      mutable_iocmd()->::HaWC::CmdMsg_IO_Cmd::MergeFrom(from.iocmd());
      break;
    }
    case COMMAND_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:HaWC.CmdMsg)
}

void CmdMsg::SharedCtor() {
  seqnum_ = 0u;
  clear_has_command();
}

CmdMsg::~CmdMsg() {
  // @@protoc_insertion_point(destructor:HaWC.CmdMsg)
  SharedDtor();
}

void CmdMsg::SharedDtor() {
  if (has_command()) {
    clear_command();
  }
}

void CmdMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CmdMsg::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CmdMsg& CmdMsg::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_CmdMsg.base);
  return *internal_default_instance();
}


void CmdMsg::clear_command() {
// @@protoc_insertion_point(one_of_clear_start:HaWC.CmdMsg)
  switch (command_case()) {
    case kAppCmd: {
      delete command_.appcmd_;
      break;
    }
    case kDisplayCmd: {
      delete command_.displaycmd_;
      break;
    }
    case kIoCmd: {
      delete command_.iocmd_;
      break;
    }
    case COMMAND_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = COMMAND_NOT_SET;
}


void CmdMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.CmdMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  seqnum_ = 0u;
  clear_command();
  _internal_metadata_.Clear();
}

bool CmdMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.CmdMsg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 seqNum = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &seqnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .HaWC.CmdMsg.AppManagerCmd appCmd = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_appcmd()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .HaWC.CmdMsg.DisplayCmd displayCmd = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_displaycmd()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .HaWC.CmdMsg.IO_Cmd ioCmd = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_iocmd()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.CmdMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.CmdMsg)
  return false;
#undef DO_
}

void CmdMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.CmdMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 seqNum = 1;
  if (this->seqnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->seqnum(), output);
  }

  // .HaWC.CmdMsg.AppManagerCmd appCmd = 4;
  if (has_appcmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_appcmd(), output);
  }

  // .HaWC.CmdMsg.DisplayCmd displayCmd = 5;
  if (has_displaycmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_displaycmd(), output);
  }

  // .HaWC.CmdMsg.IO_Cmd ioCmd = 6;
  if (has_iocmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_iocmd(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.CmdMsg)
}

::google::protobuf::uint8* CmdMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.CmdMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 seqNum = 1;
  if (this->seqnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->seqnum(), target);
  }

  // .HaWC.CmdMsg.AppManagerCmd appCmd = 4;
  if (has_appcmd()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_appcmd(), deterministic, target);
  }

  // .HaWC.CmdMsg.DisplayCmd displayCmd = 5;
  if (has_displaycmd()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_displaycmd(), deterministic, target);
  }

  // .HaWC.CmdMsg.IO_Cmd ioCmd = 6;
  if (has_iocmd()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_iocmd(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.CmdMsg)
  return target;
}

size_t CmdMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.CmdMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 seqNum = 1;
  if (this->seqnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->seqnum());
  }

  switch (command_case()) {
    // .HaWC.CmdMsg.AppManagerCmd appCmd = 4;
    case kAppCmd: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *command_.appcmd_);
      break;
    }
    // .HaWC.CmdMsg.DisplayCmd displayCmd = 5;
    case kDisplayCmd: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *command_.displaycmd_);
      break;
    }
    // .HaWC.CmdMsg.IO_Cmd ioCmd = 6;
    case kIoCmd: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *command_.iocmd_);
      break;
    }
    case COMMAND_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CmdMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.CmdMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const CmdMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CmdMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.CmdMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.CmdMsg)
    MergeFrom(*source);
  }
}

void CmdMsg::MergeFrom(const CmdMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.CmdMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.seqnum() != 0) {
    set_seqnum(from.seqnum());
  }
  switch (from.command_case()) {
    case kAppCmd: {
      mutable_appcmd()->::HaWC::CmdMsg_AppManagerCmd::MergeFrom(from.appcmd());
      break;
    }
    case kDisplayCmd: {
      mutable_displaycmd()->::HaWC::CmdMsg_DisplayCmd::MergeFrom(from.displaycmd());
      break;
    }
    case kIoCmd: {
      mutable_iocmd()->::HaWC::CmdMsg_IO_Cmd::MergeFrom(from.iocmd());
      break;
    }
    case COMMAND_NOT_SET: {
      break;
    }
  }
}

void CmdMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.CmdMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CmdMsg::CopyFrom(const CmdMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.CmdMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CmdMsg::IsInitialized() const {
  return true;
}

void CmdMsg::Swap(CmdMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CmdMsg::InternalSwap(CmdMsg* other) {
  using std::swap;
  swap(seqnum_, other->seqnum_);
  swap(command_, other->command_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CmdMsg::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RspMsg_ResetEvt::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RspMsg_ResetEvt::kSessionIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RspMsg_ResetEvt::RspMsg_ResetEvt()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_RspMsg_ResetEvt.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.RspMsg.ResetEvt)
}
RspMsg_ResetEvt::RspMsg_ResetEvt(const RspMsg_ResetEvt& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sessionid_ = from.sessionid_;
  // @@protoc_insertion_point(copy_constructor:HaWC.RspMsg.ResetEvt)
}

void RspMsg_ResetEvt::SharedCtor() {
  sessionid_ = 0u;
}

RspMsg_ResetEvt::~RspMsg_ResetEvt() {
  // @@protoc_insertion_point(destructor:HaWC.RspMsg.ResetEvt)
  SharedDtor();
}

void RspMsg_ResetEvt::SharedDtor() {
}

void RspMsg_ResetEvt::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RspMsg_ResetEvt::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RspMsg_ResetEvt& RspMsg_ResetEvt::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_RspMsg_ResetEvt.base);
  return *internal_default_instance();
}


void RspMsg_ResetEvt::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.RspMsg.ResetEvt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sessionid_ = 0u;
  _internal_metadata_.Clear();
}

bool RspMsg_ResetEvt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.RspMsg.ResetEvt)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 sessionID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sessionid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.RspMsg.ResetEvt)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.RspMsg.ResetEvt)
  return false;
#undef DO_
}

void RspMsg_ResetEvt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.RspMsg.ResetEvt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 sessionID = 1;
  if (this->sessionid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->sessionid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.RspMsg.ResetEvt)
}

::google::protobuf::uint8* RspMsg_ResetEvt::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.RspMsg.ResetEvt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 sessionID = 1;
  if (this->sessionid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->sessionid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.RspMsg.ResetEvt)
  return target;
}

size_t RspMsg_ResetEvt::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.RspMsg.ResetEvt)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 sessionID = 1;
  if (this->sessionid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sessionid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RspMsg_ResetEvt::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.RspMsg.ResetEvt)
  GOOGLE_DCHECK_NE(&from, this);
  const RspMsg_ResetEvt* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RspMsg_ResetEvt>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.RspMsg.ResetEvt)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.RspMsg.ResetEvt)
    MergeFrom(*source);
  }
}

void RspMsg_ResetEvt::MergeFrom(const RspMsg_ResetEvt& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.RspMsg.ResetEvt)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sessionid() != 0) {
    set_sessionid(from.sessionid());
  }
}

void RspMsg_ResetEvt::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.RspMsg.ResetEvt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RspMsg_ResetEvt::CopyFrom(const RspMsg_ResetEvt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.RspMsg.ResetEvt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RspMsg_ResetEvt::IsInitialized() const {
  return true;
}

void RspMsg_ResetEvt::Swap(RspMsg_ResetEvt* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RspMsg_ResetEvt::InternalSwap(RspMsg_ResetEvt* other) {
  using std::swap;
  swap(sessionid_, other->sessionid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RspMsg_ResetEvt::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RspMsg_SaveConfigRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RspMsg_SaveConfigRsp::kResultFieldNumber;
const int RspMsg_SaveConfigRsp::kErrStrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RspMsg_SaveConfigRsp::RspMsg_SaveConfigRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_RspMsg_SaveConfigRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.RspMsg.SaveConfigRsp)
}
RspMsg_SaveConfigRsp::RspMsg_SaveConfigRsp(const RspMsg_SaveConfigRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  errstr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.errstr().size() > 0) {
    errstr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errstr_);
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:HaWC.RspMsg.SaveConfigRsp)
}

void RspMsg_SaveConfigRsp::SharedCtor() {
  errstr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = false;
}

RspMsg_SaveConfigRsp::~RspMsg_SaveConfigRsp() {
  // @@protoc_insertion_point(destructor:HaWC.RspMsg.SaveConfigRsp)
  SharedDtor();
}

void RspMsg_SaveConfigRsp::SharedDtor() {
  errstr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RspMsg_SaveConfigRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RspMsg_SaveConfigRsp::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RspMsg_SaveConfigRsp& RspMsg_SaveConfigRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_RspMsg_SaveConfigRsp.base);
  return *internal_default_instance();
}


void RspMsg_SaveConfigRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.RspMsg.SaveConfigRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errstr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = false;
  _internal_metadata_.Clear();
}

bool RspMsg_SaveConfigRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.RspMsg.SaveConfigRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string errStr = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errstr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->errstr().data(), static_cast<int>(this->errstr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HaWC.RspMsg.SaveConfigRsp.errStr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.RspMsg.SaveConfigRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.RspMsg.SaveConfigRsp)
  return false;
#undef DO_
}

void RspMsg_SaveConfigRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.RspMsg.SaveConfigRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->result(), output);
  }

  // string errStr = 2;
  if (this->errstr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errstr().data(), static_cast<int>(this->errstr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.RspMsg.SaveConfigRsp.errStr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->errstr(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.RspMsg.SaveConfigRsp)
}

::google::protobuf::uint8* RspMsg_SaveConfigRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.RspMsg.SaveConfigRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->result(), target);
  }

  // string errStr = 2;
  if (this->errstr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errstr().data(), static_cast<int>(this->errstr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.RspMsg.SaveConfigRsp.errStr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->errstr(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.RspMsg.SaveConfigRsp)
  return target;
}

size_t RspMsg_SaveConfigRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.RspMsg.SaveConfigRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string errStr = 2;
  if (this->errstr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errstr());
  }

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RspMsg_SaveConfigRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.RspMsg.SaveConfigRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RspMsg_SaveConfigRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RspMsg_SaveConfigRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.RspMsg.SaveConfigRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.RspMsg.SaveConfigRsp)
    MergeFrom(*source);
  }
}

void RspMsg_SaveConfigRsp::MergeFrom(const RspMsg_SaveConfigRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.RspMsg.SaveConfigRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.errstr().size() > 0) {

    errstr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errstr_);
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void RspMsg_SaveConfigRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.RspMsg.SaveConfigRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RspMsg_SaveConfigRsp::CopyFrom(const RspMsg_SaveConfigRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.RspMsg.SaveConfigRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RspMsg_SaveConfigRsp::IsInitialized() const {
  return true;
}

void RspMsg_SaveConfigRsp::Swap(RspMsg_SaveConfigRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RspMsg_SaveConfigRsp::InternalSwap(RspMsg_SaveConfigRsp* other) {
  using std::swap;
  errstr_.Swap(&other->errstr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RspMsg_SaveConfigRsp::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RspMsg_LoadConfigRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RspMsg_LoadConfigRsp::kResultFieldNumber;
const int RspMsg_LoadConfigRsp::kErrStrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RspMsg_LoadConfigRsp::RspMsg_LoadConfigRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_RspMsg_LoadConfigRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.RspMsg.LoadConfigRsp)
}
RspMsg_LoadConfigRsp::RspMsg_LoadConfigRsp(const RspMsg_LoadConfigRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  errstr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.errstr().size() > 0) {
    errstr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errstr_);
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:HaWC.RspMsg.LoadConfigRsp)
}

void RspMsg_LoadConfigRsp::SharedCtor() {
  errstr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = false;
}

RspMsg_LoadConfigRsp::~RspMsg_LoadConfigRsp() {
  // @@protoc_insertion_point(destructor:HaWC.RspMsg.LoadConfigRsp)
  SharedDtor();
}

void RspMsg_LoadConfigRsp::SharedDtor() {
  errstr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RspMsg_LoadConfigRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RspMsg_LoadConfigRsp::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RspMsg_LoadConfigRsp& RspMsg_LoadConfigRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_RspMsg_LoadConfigRsp.base);
  return *internal_default_instance();
}


void RspMsg_LoadConfigRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.RspMsg.LoadConfigRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errstr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = false;
  _internal_metadata_.Clear();
}

bool RspMsg_LoadConfigRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.RspMsg.LoadConfigRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string errStr = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errstr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->errstr().data(), static_cast<int>(this->errstr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HaWC.RspMsg.LoadConfigRsp.errStr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.RspMsg.LoadConfigRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.RspMsg.LoadConfigRsp)
  return false;
#undef DO_
}

void RspMsg_LoadConfigRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.RspMsg.LoadConfigRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->result(), output);
  }

  // string errStr = 2;
  if (this->errstr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errstr().data(), static_cast<int>(this->errstr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.RspMsg.LoadConfigRsp.errStr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->errstr(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.RspMsg.LoadConfigRsp)
}

::google::protobuf::uint8* RspMsg_LoadConfigRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.RspMsg.LoadConfigRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->result(), target);
  }

  // string errStr = 2;
  if (this->errstr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errstr().data(), static_cast<int>(this->errstr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.RspMsg.LoadConfigRsp.errStr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->errstr(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.RspMsg.LoadConfigRsp)
  return target;
}

size_t RspMsg_LoadConfigRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.RspMsg.LoadConfigRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string errStr = 2;
  if (this->errstr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errstr());
  }

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RspMsg_LoadConfigRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.RspMsg.LoadConfigRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RspMsg_LoadConfigRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RspMsg_LoadConfigRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.RspMsg.LoadConfigRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.RspMsg.LoadConfigRsp)
    MergeFrom(*source);
  }
}

void RspMsg_LoadConfigRsp::MergeFrom(const RspMsg_LoadConfigRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.RspMsg.LoadConfigRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.errstr().size() > 0) {

    errstr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errstr_);
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void RspMsg_LoadConfigRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.RspMsg.LoadConfigRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RspMsg_LoadConfigRsp::CopyFrom(const RspMsg_LoadConfigRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.RspMsg.LoadConfigRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RspMsg_LoadConfigRsp::IsInitialized() const {
  return true;
}

void RspMsg_LoadConfigRsp::Swap(RspMsg_LoadConfigRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RspMsg_LoadConfigRsp::InternalSwap(RspMsg_LoadConfigRsp* other) {
  using std::swap;
  errstr_.Swap(&other->errstr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RspMsg_LoadConfigRsp::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RspMsg_ParamDetails::InitAsDefaultInstance() {
  ::HaWC::_RspMsg_ParamDetails_default_instance_.boolval_ = false;
  ::HaWC::_RspMsg_ParamDetails_default_instance_.uintval_ = 0u;
  ::HaWC::_RspMsg_ParamDetails_default_instance_.intval_ = 0;
  ::HaWC::_RspMsg_ParamDetails_default_instance_.doubleval_ = 0;
  ::HaWC::_RspMsg_ParamDetails_default_instance_.strval_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::HaWC::_RspMsg_ParamDetails_default_instance_.databytes_ = 0u;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RspMsg_ParamDetails::kParamIDFieldNumber;
const int RspMsg_ParamDetails::kOffsetFieldNumber;
const int RspMsg_ParamDetails::kUpdatedFieldNumber;
const int RspMsg_ParamDetails::kSavedFieldNumber;
const int RspMsg_ParamDetails::kTakenAffectFieldNumber;
const int RspMsg_ParamDetails::kBoolValFieldNumber;
const int RspMsg_ParamDetails::kUintValFieldNumber;
const int RspMsg_ParamDetails::kIntValFieldNumber;
const int RspMsg_ParamDetails::kDoubleValFieldNumber;
const int RspMsg_ParamDetails::kStrValFieldNumber;
const int RspMsg_ParamDetails::kDataBytesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RspMsg_ParamDetails::RspMsg_ParamDetails()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_RspMsg_ParamDetails.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.RspMsg.ParamDetails)
}
RspMsg_ParamDetails::RspMsg_ParamDetails(const RspMsg_ParamDetails& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  paramid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.paramid().size() > 0) {
    paramid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.paramid_);
  }
  ::memcpy(&offset_, &from.offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&takenaffect_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(takenaffect_));
  clear_has_Data();
  switch (from.Data_case()) {
    case kBoolVal: {
      set_boolval(from.boolval());
      break;
    }
    case kUintVal: {
      set_uintval(from.uintval());
      break;
    }
    case kIntVal: {
      set_intval(from.intval());
      break;
    }
    case kDoubleVal: {
      set_doubleval(from.doubleval());
      break;
    }
    case kStrVal: {
      set_strval(from.strval());
      break;
    }
    case kDataBytes: {
      set_databytes(from.databytes());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:HaWC.RspMsg.ParamDetails)
}

void RspMsg_ParamDetails::SharedCtor() {
  paramid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&takenaffect_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(takenaffect_));
  clear_has_Data();
}

RspMsg_ParamDetails::~RspMsg_ParamDetails() {
  // @@protoc_insertion_point(destructor:HaWC.RspMsg.ParamDetails)
  SharedDtor();
}

void RspMsg_ParamDetails::SharedDtor() {
  paramid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_Data()) {
    clear_Data();
  }
}

void RspMsg_ParamDetails::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RspMsg_ParamDetails::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RspMsg_ParamDetails& RspMsg_ParamDetails::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_RspMsg_ParamDetails.base);
  return *internal_default_instance();
}


void RspMsg_ParamDetails::clear_Data() {
// @@protoc_insertion_point(one_of_clear_start:HaWC.RspMsg.ParamDetails)
  switch (Data_case()) {
    case kBoolVal: {
      // No need to clear
      break;
    }
    case kUintVal: {
      // No need to clear
      break;
    }
    case kIntVal: {
      // No need to clear
      break;
    }
    case kDoubleVal: {
      // No need to clear
      break;
    }
    case kStrVal: {
      Data_.strval_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kDataBytes: {
      // No need to clear
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DATA_NOT_SET;
}


void RspMsg_ParamDetails::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.RspMsg.ParamDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  paramid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&takenaffect_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(takenaffect_));
  clear_Data();
  _internal_metadata_.Clear();
}

bool RspMsg_ParamDetails::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.RspMsg.ParamDetails)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string paramID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_paramid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->paramid().data(), static_cast<int>(this->paramid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HaWC.RspMsg.ParamDetails.paramID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 offset = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool updated = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &updated_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool saved = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &saved_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool takenAffect = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &takenaffect_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool boolVal = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          clear_Data();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &Data_.boolval_)));
          set_has_boolval();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uintVal = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          clear_Data();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &Data_.uintval_)));
          set_has_uintval();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 intVal = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          clear_Data();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &Data_.intval_)));
          set_has_intval();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double doubleVal = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(105u /* 105 & 0xFF */)) {
          clear_Data();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &Data_.doubleval_)));
          set_has_doubleval();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strVal = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strval()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strval().data(), static_cast<int>(this->strval().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HaWC.RspMsg.ParamDetails.strVal"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 dataBytes = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          clear_Data();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &Data_.databytes_)));
          set_has_databytes();
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.RspMsg.ParamDetails)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.RspMsg.ParamDetails)
  return false;
#undef DO_
}

void RspMsg_ParamDetails::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.RspMsg.ParamDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string paramID = 1;
  if (this->paramid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->paramid().data(), static_cast<int>(this->paramid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.RspMsg.ParamDetails.paramID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->paramid(), output);
  }

  // uint32 offset = 2;
  if (this->offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->offset(), output);
  }

  // bool updated = 3;
  if (this->updated() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->updated(), output);
  }

  // bool saved = 4;
  if (this->saved() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->saved(), output);
  }

  // bool takenAffect = 5;
  if (this->takenaffect() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->takenaffect(), output);
  }

  // bool boolVal = 10;
  if (has_boolval()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->boolval(), output);
  }

  // uint32 uintVal = 11;
  if (has_uintval()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->uintval(), output);
  }

  // sint32 intVal = 12;
  if (has_intval()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(12, this->intval(), output);
  }

  // double doubleVal = 13;
  if (has_doubleval()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(13, this->doubleval(), output);
  }

  // string strVal = 14;
  if (has_strval()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strval().data(), static_cast<int>(this->strval().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.RspMsg.ParamDetails.strVal");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->strval(), output);
  }

  // uint32 dataBytes = 15;
  if (has_databytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->databytes(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.RspMsg.ParamDetails)
}

::google::protobuf::uint8* RspMsg_ParamDetails::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.RspMsg.ParamDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string paramID = 1;
  if (this->paramid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->paramid().data(), static_cast<int>(this->paramid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.RspMsg.ParamDetails.paramID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->paramid(), target);
  }

  // uint32 offset = 2;
  if (this->offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->offset(), target);
  }

  // bool updated = 3;
  if (this->updated() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->updated(), target);
  }

  // bool saved = 4;
  if (this->saved() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->saved(), target);
  }

  // bool takenAffect = 5;
  if (this->takenaffect() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->takenaffect(), target);
  }

  // bool boolVal = 10;
  if (has_boolval()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->boolval(), target);
  }

  // uint32 uintVal = 11;
  if (has_uintval()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->uintval(), target);
  }

  // sint32 intVal = 12;
  if (has_intval()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(12, this->intval(), target);
  }

  // double doubleVal = 13;
  if (has_doubleval()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(13, this->doubleval(), target);
  }

  // string strVal = 14;
  if (has_strval()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strval().data(), static_cast<int>(this->strval().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.RspMsg.ParamDetails.strVal");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->strval(), target);
  }

  // uint32 dataBytes = 15;
  if (has_databytes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->databytes(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.RspMsg.ParamDetails)
  return target;
}

size_t RspMsg_ParamDetails::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.RspMsg.ParamDetails)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string paramID = 1;
  if (this->paramid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->paramid());
  }

  // uint32 offset = 2;
  if (this->offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->offset());
  }

  // bool updated = 3;
  if (this->updated() != 0) {
    total_size += 1 + 1;
  }

  // bool saved = 4;
  if (this->saved() != 0) {
    total_size += 1 + 1;
  }

  // bool takenAffect = 5;
  if (this->takenaffect() != 0) {
    total_size += 1 + 1;
  }

  switch (Data_case()) {
    // bool boolVal = 10;
    case kBoolVal: {
      total_size += 1 + 1;
      break;
    }
    // uint32 uintVal = 11;
    case kUintVal: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->uintval());
      break;
    }
    // sint32 intVal = 12;
    case kIntVal: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->intval());
      break;
    }
    // double doubleVal = 13;
    case kDoubleVal: {
      total_size += 1 + 8;
      break;
    }
    // string strVal = 14;
    case kStrVal: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strval());
      break;
    }
    // uint32 dataBytes = 15;
    case kDataBytes: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->databytes());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RspMsg_ParamDetails::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.RspMsg.ParamDetails)
  GOOGLE_DCHECK_NE(&from, this);
  const RspMsg_ParamDetails* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RspMsg_ParamDetails>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.RspMsg.ParamDetails)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.RspMsg.ParamDetails)
    MergeFrom(*source);
  }
}

void RspMsg_ParamDetails::MergeFrom(const RspMsg_ParamDetails& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.RspMsg.ParamDetails)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.paramid().size() > 0) {

    paramid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.paramid_);
  }
  if (from.offset() != 0) {
    set_offset(from.offset());
  }
  if (from.updated() != 0) {
    set_updated(from.updated());
  }
  if (from.saved() != 0) {
    set_saved(from.saved());
  }
  if (from.takenaffect() != 0) {
    set_takenaffect(from.takenaffect());
  }
  switch (from.Data_case()) {
    case kBoolVal: {
      set_boolval(from.boolval());
      break;
    }
    case kUintVal: {
      set_uintval(from.uintval());
      break;
    }
    case kIntVal: {
      set_intval(from.intval());
      break;
    }
    case kDoubleVal: {
      set_doubleval(from.doubleval());
      break;
    }
    case kStrVal: {
      set_strval(from.strval());
      break;
    }
    case kDataBytes: {
      set_databytes(from.databytes());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
}

void RspMsg_ParamDetails::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.RspMsg.ParamDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RspMsg_ParamDetails::CopyFrom(const RspMsg_ParamDetails& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.RspMsg.ParamDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RspMsg_ParamDetails::IsInitialized() const {
  return true;
}

void RspMsg_ParamDetails::Swap(RspMsg_ParamDetails* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RspMsg_ParamDetails::InternalSwap(RspMsg_ParamDetails* other) {
  using std::swap;
  paramid_.Swap(&other->paramid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(offset_, other->offset_);
  swap(updated_, other->updated_);
  swap(saved_, other->saved_);
  swap(takenaffect_, other->takenaffect_);
  swap(Data_, other->Data_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RspMsg_ParamDetails::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RspMsg_ParamsRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RspMsg_ParamsRsp::kTargetFieldNumber;
const int RspMsg_ParamsRsp::kParamsFieldNumber;
const int RspMsg_ParamsRsp::kResultFieldNumber;
const int RspMsg_ParamsRsp::kErrStrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RspMsg_ParamsRsp::RspMsg_ParamsRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_RspMsg_ParamsRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.RspMsg.ParamsRsp)
}
RspMsg_ParamsRsp::RspMsg_ParamsRsp(const RspMsg_ParamsRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      params_(from.params_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  errstr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.errstr().size() > 0) {
    errstr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errstr_);
  }
  ::memcpy(&target_, &from.target_,
    static_cast<size_t>(reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&target_)) + sizeof(result_));
  // @@protoc_insertion_point(copy_constructor:HaWC.RspMsg.ParamsRsp)
}

void RspMsg_ParamsRsp::SharedCtor() {
  errstr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&target_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&target_)) + sizeof(result_));
}

RspMsg_ParamsRsp::~RspMsg_ParamsRsp() {
  // @@protoc_insertion_point(destructor:HaWC.RspMsg.ParamsRsp)
  SharedDtor();
}

void RspMsg_ParamsRsp::SharedDtor() {
  errstr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RspMsg_ParamsRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RspMsg_ParamsRsp::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RspMsg_ParamsRsp& RspMsg_ParamsRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_RspMsg_ParamsRsp.base);
  return *internal_default_instance();
}


void RspMsg_ParamsRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.RspMsg.ParamsRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  params_.Clear();
  errstr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&target_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&target_)) + sizeof(result_));
  _internal_metadata_.Clear();
}

bool RspMsg_ParamsRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.RspMsg.ParamsRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .HaWC.Targets target = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_target(static_cast< ::HaWC::Targets >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .HaWC.RspMsg.ParamDetails params = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool result = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string errStr = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errstr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->errstr().data(), static_cast<int>(this->errstr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HaWC.RspMsg.ParamsRsp.errStr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.RspMsg.ParamsRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.RspMsg.ParamsRsp)
  return false;
#undef DO_
}

void RspMsg_ParamsRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.RspMsg.ParamsRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .HaWC.Targets target = 1;
  if (this->target() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->target(), output);
  }

  // repeated .HaWC.RspMsg.ParamDetails params = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->params_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->params(static_cast<int>(i)),
      output);
  }

  // bool result = 3;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->result(), output);
  }

  // string errStr = 4;
  if (this->errstr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errstr().data(), static_cast<int>(this->errstr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.RspMsg.ParamsRsp.errStr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->errstr(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.RspMsg.ParamsRsp)
}

::google::protobuf::uint8* RspMsg_ParamsRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.RspMsg.ParamsRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .HaWC.Targets target = 1;
  if (this->target() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->target(), target);
  }

  // repeated .HaWC.RspMsg.ParamDetails params = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->params_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->params(static_cast<int>(i)), deterministic, target);
  }

  // bool result = 3;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->result(), target);
  }

  // string errStr = 4;
  if (this->errstr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errstr().data(), static_cast<int>(this->errstr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.RspMsg.ParamsRsp.errStr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->errstr(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.RspMsg.ParamsRsp)
  return target;
}

size_t RspMsg_ParamsRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.RspMsg.ParamsRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .HaWC.RspMsg.ParamDetails params = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->params_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->params(static_cast<int>(i)));
    }
  }

  // string errStr = 4;
  if (this->errstr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errstr());
  }

  // .HaWC.Targets target = 1;
  if (this->target() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->target());
  }

  // bool result = 3;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RspMsg_ParamsRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.RspMsg.ParamsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RspMsg_ParamsRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RspMsg_ParamsRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.RspMsg.ParamsRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.RspMsg.ParamsRsp)
    MergeFrom(*source);
  }
}

void RspMsg_ParamsRsp::MergeFrom(const RspMsg_ParamsRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.RspMsg.ParamsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  params_.MergeFrom(from.params_);
  if (from.errstr().size() > 0) {

    errstr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errstr_);
  }
  if (from.target() != 0) {
    set_target(from.target());
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void RspMsg_ParamsRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.RspMsg.ParamsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RspMsg_ParamsRsp::CopyFrom(const RspMsg_ParamsRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.RspMsg.ParamsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RspMsg_ParamsRsp::IsInitialized() const {
  return true;
}

void RspMsg_ParamsRsp::Swap(RspMsg_ParamsRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RspMsg_ParamsRsp::InternalSwap(RspMsg_ParamsRsp* other) {
  using std::swap;
  CastToBase(&params_)->InternalSwap(CastToBase(&other->params_));
  errstr_.Swap(&other->errstr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(target_, other->target_);
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RspMsg_ParamsRsp::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RspMsg_ParamCfgn::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RspMsg_ParamCfgn::kParamIDFieldNumber;
const int RspMsg_ParamCfgn::kDataTypeFieldNumber;
const int RspMsg_ParamCfgn::kCountFieldNumber;
const int RspMsg_ParamCfgn::kAppResetReqdFieldNumber;
const int RspMsg_ParamCfgn::kOsResetReqdFieldNumber;
const int RspMsg_ParamCfgn::kReadbleFieldNumber;
const int RspMsg_ParamCfgn::kWriteableFieldNumber;
const int RspMsg_ParamCfgn::kScriptableFieldNumber;
const int RspMsg_ParamCfgn::kDescriptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RspMsg_ParamCfgn::RspMsg_ParamCfgn()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_RspMsg_ParamCfgn.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.RspMsg.ParamCfgn)
}
RspMsg_ParamCfgn::RspMsg_ParamCfgn(const RspMsg_ParamCfgn& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  paramid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.paramid().size() > 0) {
    paramid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.paramid_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  ::memcpy(&datatype_, &from.datatype_,
    static_cast<size_t>(reinterpret_cast<char*>(&scriptable_) -
    reinterpret_cast<char*>(&datatype_)) + sizeof(scriptable_));
  // @@protoc_insertion_point(copy_constructor:HaWC.RspMsg.ParamCfgn)
}

void RspMsg_ParamCfgn::SharedCtor() {
  paramid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&datatype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scriptable_) -
      reinterpret_cast<char*>(&datatype_)) + sizeof(scriptable_));
}

RspMsg_ParamCfgn::~RspMsg_ParamCfgn() {
  // @@protoc_insertion_point(destructor:HaWC.RspMsg.ParamCfgn)
  SharedDtor();
}

void RspMsg_ParamCfgn::SharedDtor() {
  paramid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RspMsg_ParamCfgn::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RspMsg_ParamCfgn::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RspMsg_ParamCfgn& RspMsg_ParamCfgn::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_RspMsg_ParamCfgn.base);
  return *internal_default_instance();
}


void RspMsg_ParamCfgn::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.RspMsg.ParamCfgn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  paramid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&datatype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scriptable_) -
      reinterpret_cast<char*>(&datatype_)) + sizeof(scriptable_));
  _internal_metadata_.Clear();
}

bool RspMsg_ParamCfgn::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.RspMsg.ParamCfgn)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string paramID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_paramid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->paramid().data(), static_cast<int>(this->paramid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HaWC.RspMsg.ParamCfgn.paramID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .HaWC.RspMsg.DataTypes dataType = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_datatype(static_cast< ::HaWC::RspMsg_DataTypes >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool appResetReqd = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &appresetreqd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool osResetReqd = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &osresetreqd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool readble = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &readble_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool writeable = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &writeable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool scriptable = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &scriptable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HaWC.RspMsg.ParamCfgn.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.RspMsg.ParamCfgn)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.RspMsg.ParamCfgn)
  return false;
#undef DO_
}

void RspMsg_ParamCfgn::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.RspMsg.ParamCfgn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string paramID = 1;
  if (this->paramid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->paramid().data(), static_cast<int>(this->paramid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.RspMsg.ParamCfgn.paramID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->paramid(), output);
  }

  // .HaWC.RspMsg.DataTypes dataType = 2;
  if (this->datatype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->datatype(), output);
  }

  // uint32 count = 3;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->count(), output);
  }

  // bool appResetReqd = 4;
  if (this->appresetreqd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->appresetreqd(), output);
  }

  // bool osResetReqd = 5;
  if (this->osresetreqd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->osresetreqd(), output);
  }

  // bool readble = 6;
  if (this->readble() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->readble(), output);
  }

  // bool writeable = 7;
  if (this->writeable() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->writeable(), output);
  }

  // bool scriptable = 8;
  if (this->scriptable() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->scriptable(), output);
  }

  // string description = 9;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.RspMsg.ParamCfgn.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->description(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.RspMsg.ParamCfgn)
}

::google::protobuf::uint8* RspMsg_ParamCfgn::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.RspMsg.ParamCfgn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string paramID = 1;
  if (this->paramid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->paramid().data(), static_cast<int>(this->paramid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.RspMsg.ParamCfgn.paramID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->paramid(), target);
  }

  // .HaWC.RspMsg.DataTypes dataType = 2;
  if (this->datatype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->datatype(), target);
  }

  // uint32 count = 3;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->count(), target);
  }

  // bool appResetReqd = 4;
  if (this->appresetreqd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->appresetreqd(), target);
  }

  // bool osResetReqd = 5;
  if (this->osresetreqd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->osresetreqd(), target);
  }

  // bool readble = 6;
  if (this->readble() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->readble(), target);
  }

  // bool writeable = 7;
  if (this->writeable() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->writeable(), target);
  }

  // bool scriptable = 8;
  if (this->scriptable() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->scriptable(), target);
  }

  // string description = 9;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.RspMsg.ParamCfgn.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->description(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.RspMsg.ParamCfgn)
  return target;
}

size_t RspMsg_ParamCfgn::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.RspMsg.ParamCfgn)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string paramID = 1;
  if (this->paramid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->paramid());
  }

  // string description = 9;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // .HaWC.RspMsg.DataTypes dataType = 2;
  if (this->datatype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->datatype());
  }

  // uint32 count = 3;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  // bool appResetReqd = 4;
  if (this->appresetreqd() != 0) {
    total_size += 1 + 1;
  }

  // bool osResetReqd = 5;
  if (this->osresetreqd() != 0) {
    total_size += 1 + 1;
  }

  // bool readble = 6;
  if (this->readble() != 0) {
    total_size += 1 + 1;
  }

  // bool writeable = 7;
  if (this->writeable() != 0) {
    total_size += 1 + 1;
  }

  // bool scriptable = 8;
  if (this->scriptable() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RspMsg_ParamCfgn::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.RspMsg.ParamCfgn)
  GOOGLE_DCHECK_NE(&from, this);
  const RspMsg_ParamCfgn* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RspMsg_ParamCfgn>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.RspMsg.ParamCfgn)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.RspMsg.ParamCfgn)
    MergeFrom(*source);
  }
}

void RspMsg_ParamCfgn::MergeFrom(const RspMsg_ParamCfgn& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.RspMsg.ParamCfgn)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.paramid().size() > 0) {

    paramid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.paramid_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.datatype() != 0) {
    set_datatype(from.datatype());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
  if (from.appresetreqd() != 0) {
    set_appresetreqd(from.appresetreqd());
  }
  if (from.osresetreqd() != 0) {
    set_osresetreqd(from.osresetreqd());
  }
  if (from.readble() != 0) {
    set_readble(from.readble());
  }
  if (from.writeable() != 0) {
    set_writeable(from.writeable());
  }
  if (from.scriptable() != 0) {
    set_scriptable(from.scriptable());
  }
}

void RspMsg_ParamCfgn::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.RspMsg.ParamCfgn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RspMsg_ParamCfgn::CopyFrom(const RspMsg_ParamCfgn& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.RspMsg.ParamCfgn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RspMsg_ParamCfgn::IsInitialized() const {
  return true;
}

void RspMsg_ParamCfgn::Swap(RspMsg_ParamCfgn* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RspMsg_ParamCfgn::InternalSwap(RspMsg_ParamCfgn* other) {
  using std::swap;
  paramid_.Swap(&other->paramid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(datatype_, other->datatype_);
  swap(count_, other->count_);
  swap(appresetreqd_, other->appresetreqd_);
  swap(osresetreqd_, other->osresetreqd_);
  swap(readble_, other->readble_);
  swap(writeable_, other->writeable_);
  swap(scriptable_, other->scriptable_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RspMsg_ParamCfgn::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RspMsg_ParamsCfgnRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RspMsg_ParamsCfgnRsp::kTargetFieldNumber;
const int RspMsg_ParamsCfgnRsp::kParamsFieldNumber;
const int RspMsg_ParamsCfgnRsp::kResultFieldNumber;
const int RspMsg_ParamsCfgnRsp::kErrStrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RspMsg_ParamsCfgnRsp::RspMsg_ParamsCfgnRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_RspMsg_ParamsCfgnRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.RspMsg.ParamsCfgnRsp)
}
RspMsg_ParamsCfgnRsp::RspMsg_ParamsCfgnRsp(const RspMsg_ParamsCfgnRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      params_(from.params_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  errstr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.errstr().size() > 0) {
    errstr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errstr_);
  }
  ::memcpy(&target_, &from.target_,
    static_cast<size_t>(reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&target_)) + sizeof(result_));
  // @@protoc_insertion_point(copy_constructor:HaWC.RspMsg.ParamsCfgnRsp)
}

void RspMsg_ParamsCfgnRsp::SharedCtor() {
  errstr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&target_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&target_)) + sizeof(result_));
}

RspMsg_ParamsCfgnRsp::~RspMsg_ParamsCfgnRsp() {
  // @@protoc_insertion_point(destructor:HaWC.RspMsg.ParamsCfgnRsp)
  SharedDtor();
}

void RspMsg_ParamsCfgnRsp::SharedDtor() {
  errstr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RspMsg_ParamsCfgnRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RspMsg_ParamsCfgnRsp::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RspMsg_ParamsCfgnRsp& RspMsg_ParamsCfgnRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_RspMsg_ParamsCfgnRsp.base);
  return *internal_default_instance();
}


void RspMsg_ParamsCfgnRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.RspMsg.ParamsCfgnRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  params_.Clear();
  errstr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&target_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&target_)) + sizeof(result_));
  _internal_metadata_.Clear();
}

bool RspMsg_ParamsCfgnRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.RspMsg.ParamsCfgnRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .HaWC.Targets target = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_target(static_cast< ::HaWC::Targets >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .HaWC.RspMsg.ParamCfgn params = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool result = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string errStr = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errstr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->errstr().data(), static_cast<int>(this->errstr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HaWC.RspMsg.ParamsCfgnRsp.errStr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.RspMsg.ParamsCfgnRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.RspMsg.ParamsCfgnRsp)
  return false;
#undef DO_
}

void RspMsg_ParamsCfgnRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.RspMsg.ParamsCfgnRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .HaWC.Targets target = 1;
  if (this->target() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->target(), output);
  }

  // repeated .HaWC.RspMsg.ParamCfgn params = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->params_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->params(static_cast<int>(i)),
      output);
  }

  // bool result = 3;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->result(), output);
  }

  // string errStr = 4;
  if (this->errstr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errstr().data(), static_cast<int>(this->errstr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.RspMsg.ParamsCfgnRsp.errStr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->errstr(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.RspMsg.ParamsCfgnRsp)
}

::google::protobuf::uint8* RspMsg_ParamsCfgnRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.RspMsg.ParamsCfgnRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .HaWC.Targets target = 1;
  if (this->target() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->target(), target);
  }

  // repeated .HaWC.RspMsg.ParamCfgn params = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->params_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->params(static_cast<int>(i)), deterministic, target);
  }

  // bool result = 3;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->result(), target);
  }

  // string errStr = 4;
  if (this->errstr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errstr().data(), static_cast<int>(this->errstr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.RspMsg.ParamsCfgnRsp.errStr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->errstr(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.RspMsg.ParamsCfgnRsp)
  return target;
}

size_t RspMsg_ParamsCfgnRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.RspMsg.ParamsCfgnRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .HaWC.RspMsg.ParamCfgn params = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->params_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->params(static_cast<int>(i)));
    }
  }

  // string errStr = 4;
  if (this->errstr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errstr());
  }

  // .HaWC.Targets target = 1;
  if (this->target() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->target());
  }

  // bool result = 3;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RspMsg_ParamsCfgnRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.RspMsg.ParamsCfgnRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RspMsg_ParamsCfgnRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RspMsg_ParamsCfgnRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.RspMsg.ParamsCfgnRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.RspMsg.ParamsCfgnRsp)
    MergeFrom(*source);
  }
}

void RspMsg_ParamsCfgnRsp::MergeFrom(const RspMsg_ParamsCfgnRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.RspMsg.ParamsCfgnRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  params_.MergeFrom(from.params_);
  if (from.errstr().size() > 0) {

    errstr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errstr_);
  }
  if (from.target() != 0) {
    set_target(from.target());
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void RspMsg_ParamsCfgnRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.RspMsg.ParamsCfgnRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RspMsg_ParamsCfgnRsp::CopyFrom(const RspMsg_ParamsCfgnRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.RspMsg.ParamsCfgnRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RspMsg_ParamsCfgnRsp::IsInitialized() const {
  return true;
}

void RspMsg_ParamsCfgnRsp::Swap(RspMsg_ParamsCfgnRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RspMsg_ParamsCfgnRsp::InternalSwap(RspMsg_ParamsCfgnRsp* other) {
  using std::swap;
  CastToBase(&params_)->InternalSwap(CastToBase(&other->params_));
  errstr_.Swap(&other->errstr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(target_, other->target_);
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RspMsg_ParamsCfgnRsp::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RspMsg_FileHashRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RspMsg_FileHashRsp::kFileHashFieldNumber;
const int RspMsg_FileHashRsp::kResultFieldNumber;
const int RspMsg_FileHashRsp::kErrStrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RspMsg_FileHashRsp::RspMsg_FileHashRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_RspMsg_FileHashRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.RspMsg.FileHashRsp)
}
RspMsg_FileHashRsp::RspMsg_FileHashRsp(const RspMsg_FileHashRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filehash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filehash().size() > 0) {
    filehash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filehash_);
  }
  errstr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.errstr().size() > 0) {
    errstr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errstr_);
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:HaWC.RspMsg.FileHashRsp)
}

void RspMsg_FileHashRsp::SharedCtor() {
  filehash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errstr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = false;
}

RspMsg_FileHashRsp::~RspMsg_FileHashRsp() {
  // @@protoc_insertion_point(destructor:HaWC.RspMsg.FileHashRsp)
  SharedDtor();
}

void RspMsg_FileHashRsp::SharedDtor() {
  filehash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errstr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RspMsg_FileHashRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RspMsg_FileHashRsp::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RspMsg_FileHashRsp& RspMsg_FileHashRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_RspMsg_FileHashRsp.base);
  return *internal_default_instance();
}


void RspMsg_FileHashRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.RspMsg.FileHashRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  filehash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errstr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = false;
  _internal_metadata_.Clear();
}

bool RspMsg_FileHashRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.RspMsg.FileHashRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes fileHash = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_filehash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool result = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string errStr = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errstr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->errstr().data(), static_cast<int>(this->errstr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HaWC.RspMsg.FileHashRsp.errStr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.RspMsg.FileHashRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.RspMsg.FileHashRsp)
  return false;
#undef DO_
}

void RspMsg_FileHashRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.RspMsg.FileHashRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes fileHash = 1;
  if (this->filehash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->filehash(), output);
  }

  // bool result = 2;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->result(), output);
  }

  // string errStr = 3;
  if (this->errstr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errstr().data(), static_cast<int>(this->errstr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.RspMsg.FileHashRsp.errStr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->errstr(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.RspMsg.FileHashRsp)
}

::google::protobuf::uint8* RspMsg_FileHashRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.RspMsg.FileHashRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes fileHash = 1;
  if (this->filehash().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->filehash(), target);
  }

  // bool result = 2;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->result(), target);
  }

  // string errStr = 3;
  if (this->errstr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errstr().data(), static_cast<int>(this->errstr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.RspMsg.FileHashRsp.errStr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->errstr(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.RspMsg.FileHashRsp)
  return target;
}

size_t RspMsg_FileHashRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.RspMsg.FileHashRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes fileHash = 1;
  if (this->filehash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->filehash());
  }

  // string errStr = 3;
  if (this->errstr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errstr());
  }

  // bool result = 2;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RspMsg_FileHashRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.RspMsg.FileHashRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RspMsg_FileHashRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RspMsg_FileHashRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.RspMsg.FileHashRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.RspMsg.FileHashRsp)
    MergeFrom(*source);
  }
}

void RspMsg_FileHashRsp::MergeFrom(const RspMsg_FileHashRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.RspMsg.FileHashRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.filehash().size() > 0) {

    filehash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filehash_);
  }
  if (from.errstr().size() > 0) {

    errstr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errstr_);
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void RspMsg_FileHashRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.RspMsg.FileHashRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RspMsg_FileHashRsp::CopyFrom(const RspMsg_FileHashRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.RspMsg.FileHashRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RspMsg_FileHashRsp::IsInitialized() const {
  return true;
}

void RspMsg_FileHashRsp::Swap(RspMsg_FileHashRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RspMsg_FileHashRsp::InternalSwap(RspMsg_FileHashRsp* other) {
  using std::swap;
  filehash_.Swap(&other->filehash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  errstr_.Swap(&other->errstr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RspMsg_FileHashRsp::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RspMsg_AppManagerRsp::InitAsDefaultInstance() {
  ::HaWC::_RspMsg_AppManagerRsp_default_instance_.saveconfig_ = const_cast< ::HaWC::RspMsg_SaveConfigRsp*>(
      ::HaWC::RspMsg_SaveConfigRsp::internal_default_instance());
  ::HaWC::_RspMsg_AppManagerRsp_default_instance_.loadconfigrsp_ = const_cast< ::HaWC::RspMsg_LoadConfigRsp*>(
      ::HaWC::RspMsg_LoadConfigRsp::internal_default_instance());
  ::HaWC::_RspMsg_AppManagerRsp_default_instance_.params_ = const_cast< ::HaWC::RspMsg_ParamsRsp*>(
      ::HaWC::RspMsg_ParamsRsp::internal_default_instance());
  ::HaWC::_RspMsg_AppManagerRsp_default_instance_.getparamscfgn_ = const_cast< ::HaWC::RspMsg_ParamsCfgnRsp*>(
      ::HaWC::RspMsg_ParamsCfgnRsp::internal_default_instance());
  ::HaWC::_RspMsg_AppManagerRsp_default_instance_.filehash_ = const_cast< ::HaWC::RspMsg_FileHashRsp*>(
      ::HaWC::RspMsg_FileHashRsp::internal_default_instance());
  ::HaWC::_RspMsg_AppManagerRsp_default_instance_.resetevent_ = const_cast< ::HaWC::RspMsg_ResetEvt*>(
      ::HaWC::RspMsg_ResetEvt::internal_default_instance());
}
void RspMsg_AppManagerRsp::set_allocated_saveconfig(::HaWC::RspMsg_SaveConfigRsp* saveconfig) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_response();
  if (saveconfig) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      saveconfig = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, saveconfig, submessage_arena);
    }
    set_has_saveconfig();
    response_.saveconfig_ = saveconfig;
  }
  // @@protoc_insertion_point(field_set_allocated:HaWC.RspMsg.AppManagerRsp.saveConfig)
}
void RspMsg_AppManagerRsp::set_allocated_loadconfigrsp(::HaWC::RspMsg_LoadConfigRsp* loadconfigrsp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_response();
  if (loadconfigrsp) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      loadconfigrsp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, loadconfigrsp, submessage_arena);
    }
    set_has_loadconfigrsp();
    response_.loadconfigrsp_ = loadconfigrsp;
  }
  // @@protoc_insertion_point(field_set_allocated:HaWC.RspMsg.AppManagerRsp.loadConfigRsp)
}
void RspMsg_AppManagerRsp::set_allocated_params(::HaWC::RspMsg_ParamsRsp* params) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_response();
  if (params) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      params = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, params, submessage_arena);
    }
    set_has_params();
    response_.params_ = params;
  }
  // @@protoc_insertion_point(field_set_allocated:HaWC.RspMsg.AppManagerRsp.params)
}
void RspMsg_AppManagerRsp::set_allocated_getparamscfgn(::HaWC::RspMsg_ParamsCfgnRsp* getparamscfgn) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_response();
  if (getparamscfgn) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      getparamscfgn = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, getparamscfgn, submessage_arena);
    }
    set_has_getparamscfgn();
    response_.getparamscfgn_ = getparamscfgn;
  }
  // @@protoc_insertion_point(field_set_allocated:HaWC.RspMsg.AppManagerRsp.getParamsCfgn)
}
void RspMsg_AppManagerRsp::set_allocated_filehash(::HaWC::RspMsg_FileHashRsp* filehash) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_response();
  if (filehash) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      filehash = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, filehash, submessage_arena);
    }
    set_has_filehash();
    response_.filehash_ = filehash;
  }
  // @@protoc_insertion_point(field_set_allocated:HaWC.RspMsg.AppManagerRsp.fileHash)
}
void RspMsg_AppManagerRsp::set_allocated_resetevent(::HaWC::RspMsg_ResetEvt* resetevent) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_response();
  if (resetevent) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      resetevent = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, resetevent, submessage_arena);
    }
    set_has_resetevent();
    response_.resetevent_ = resetevent;
  }
  // @@protoc_insertion_point(field_set_allocated:HaWC.RspMsg.AppManagerRsp.resetEvent)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RspMsg_AppManagerRsp::kSaveConfigFieldNumber;
const int RspMsg_AppManagerRsp::kLoadConfigRspFieldNumber;
const int RspMsg_AppManagerRsp::kParamsFieldNumber;
const int RspMsg_AppManagerRsp::kGetParamsCfgnFieldNumber;
const int RspMsg_AppManagerRsp::kFileHashFieldNumber;
const int RspMsg_AppManagerRsp::kResetEventFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RspMsg_AppManagerRsp::RspMsg_AppManagerRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_RspMsg_AppManagerRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.RspMsg.AppManagerRsp)
}
RspMsg_AppManagerRsp::RspMsg_AppManagerRsp(const RspMsg_AppManagerRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_response();
  switch (from.response_case()) {
    case kSaveConfig: {
      mutable_saveconfig()->::HaWC::RspMsg_SaveConfigRsp::MergeFrom(from.saveconfig());
      break;
    }
    case kLoadConfigRsp: {
      mutable_loadconfigrsp()->::HaWC::RspMsg_LoadConfigRsp::MergeFrom(from.loadconfigrsp());
      break;
    }
    case kParams: {
      mutable_params()->::HaWC::RspMsg_ParamsRsp::MergeFrom(from.params());
      break;
    }
    case kGetParamsCfgn: {
      mutable_getparamscfgn()->::HaWC::RspMsg_ParamsCfgnRsp::MergeFrom(from.getparamscfgn());
      break;
    }
    case kFileHash: {
      mutable_filehash()->::HaWC::RspMsg_FileHashRsp::MergeFrom(from.filehash());
      break;
    }
    case kResetEvent: {
      mutable_resetevent()->::HaWC::RspMsg_ResetEvt::MergeFrom(from.resetevent());
      break;
    }
    case RESPONSE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:HaWC.RspMsg.AppManagerRsp)
}

void RspMsg_AppManagerRsp::SharedCtor() {
  clear_has_response();
}

RspMsg_AppManagerRsp::~RspMsg_AppManagerRsp() {
  // @@protoc_insertion_point(destructor:HaWC.RspMsg.AppManagerRsp)
  SharedDtor();
}

void RspMsg_AppManagerRsp::SharedDtor() {
  if (has_response()) {
    clear_response();
  }
}

void RspMsg_AppManagerRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RspMsg_AppManagerRsp::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RspMsg_AppManagerRsp& RspMsg_AppManagerRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_RspMsg_AppManagerRsp.base);
  return *internal_default_instance();
}


void RspMsg_AppManagerRsp::clear_response() {
// @@protoc_insertion_point(one_of_clear_start:HaWC.RspMsg.AppManagerRsp)
  switch (response_case()) {
    case kSaveConfig: {
      delete response_.saveconfig_;
      break;
    }
    case kLoadConfigRsp: {
      delete response_.loadconfigrsp_;
      break;
    }
    case kParams: {
      delete response_.params_;
      break;
    }
    case kGetParamsCfgn: {
      delete response_.getparamscfgn_;
      break;
    }
    case kFileHash: {
      delete response_.filehash_;
      break;
    }
    case kResetEvent: {
      delete response_.resetevent_;
      break;
    }
    case RESPONSE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = RESPONSE_NOT_SET;
}


void RspMsg_AppManagerRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.RspMsg.AppManagerRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_response();
  _internal_metadata_.Clear();
}

bool RspMsg_AppManagerRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.RspMsg.AppManagerRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .HaWC.RspMsg.SaveConfigRsp saveConfig = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_saveconfig()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .HaWC.RspMsg.LoadConfigRsp loadConfigRsp = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_loadconfigrsp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .HaWC.RspMsg.ParamsRsp params = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .HaWC.RspMsg.ParamsCfgnRsp getParamsCfgn = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_getparamscfgn()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .HaWC.RspMsg.FileHashRsp fileHash = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_filehash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .HaWC.RspMsg.ResetEvt resetEvent = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 202 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_resetevent()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.RspMsg.AppManagerRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.RspMsg.AppManagerRsp)
  return false;
#undef DO_
}

void RspMsg_AppManagerRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.RspMsg.AppManagerRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .HaWC.RspMsg.SaveConfigRsp saveConfig = 5;
  if (has_saveconfig()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_saveconfig(), output);
  }

  // .HaWC.RspMsg.LoadConfigRsp loadConfigRsp = 7;
  if (has_loadconfigrsp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_loadconfigrsp(), output);
  }

  // .HaWC.RspMsg.ParamsRsp params = 9;
  if (has_params()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_params(), output);
  }

  // .HaWC.RspMsg.ParamsCfgnRsp getParamsCfgn = 11;
  if (has_getparamscfgn()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_getparamscfgn(), output);
  }

  // .HaWC.RspMsg.FileHashRsp fileHash = 15;
  if (has_filehash()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->_internal_filehash(), output);
  }

  // .HaWC.RspMsg.ResetEvt resetEvent = 25;
  if (has_resetevent()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      25, this->_internal_resetevent(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.RspMsg.AppManagerRsp)
}

::google::protobuf::uint8* RspMsg_AppManagerRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.RspMsg.AppManagerRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .HaWC.RspMsg.SaveConfigRsp saveConfig = 5;
  if (has_saveconfig()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_saveconfig(), deterministic, target);
  }

  // .HaWC.RspMsg.LoadConfigRsp loadConfigRsp = 7;
  if (has_loadconfigrsp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_loadconfigrsp(), deterministic, target);
  }

  // .HaWC.RspMsg.ParamsRsp params = 9;
  if (has_params()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_params(), deterministic, target);
  }

  // .HaWC.RspMsg.ParamsCfgnRsp getParamsCfgn = 11;
  if (has_getparamscfgn()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_getparamscfgn(), deterministic, target);
  }

  // .HaWC.RspMsg.FileHashRsp fileHash = 15;
  if (has_filehash()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->_internal_filehash(), deterministic, target);
  }

  // .HaWC.RspMsg.ResetEvt resetEvent = 25;
  if (has_resetevent()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        25, this->_internal_resetevent(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.RspMsg.AppManagerRsp)
  return target;
}

size_t RspMsg_AppManagerRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.RspMsg.AppManagerRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (response_case()) {
    // .HaWC.RspMsg.SaveConfigRsp saveConfig = 5;
    case kSaveConfig: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *response_.saveconfig_);
      break;
    }
    // .HaWC.RspMsg.LoadConfigRsp loadConfigRsp = 7;
    case kLoadConfigRsp: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *response_.loadconfigrsp_);
      break;
    }
    // .HaWC.RspMsg.ParamsRsp params = 9;
    case kParams: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *response_.params_);
      break;
    }
    // .HaWC.RspMsg.ParamsCfgnRsp getParamsCfgn = 11;
    case kGetParamsCfgn: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *response_.getparamscfgn_);
      break;
    }
    // .HaWC.RspMsg.FileHashRsp fileHash = 15;
    case kFileHash: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *response_.filehash_);
      break;
    }
    // .HaWC.RspMsg.ResetEvt resetEvent = 25;
    case kResetEvent: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *response_.resetevent_);
      break;
    }
    case RESPONSE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RspMsg_AppManagerRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.RspMsg.AppManagerRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RspMsg_AppManagerRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RspMsg_AppManagerRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.RspMsg.AppManagerRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.RspMsg.AppManagerRsp)
    MergeFrom(*source);
  }
}

void RspMsg_AppManagerRsp::MergeFrom(const RspMsg_AppManagerRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.RspMsg.AppManagerRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.response_case()) {
    case kSaveConfig: {
      mutable_saveconfig()->::HaWC::RspMsg_SaveConfigRsp::MergeFrom(from.saveconfig());
      break;
    }
    case kLoadConfigRsp: {
      mutable_loadconfigrsp()->::HaWC::RspMsg_LoadConfigRsp::MergeFrom(from.loadconfigrsp());
      break;
    }
    case kParams: {
      mutable_params()->::HaWC::RspMsg_ParamsRsp::MergeFrom(from.params());
      break;
    }
    case kGetParamsCfgn: {
      mutable_getparamscfgn()->::HaWC::RspMsg_ParamsCfgnRsp::MergeFrom(from.getparamscfgn());
      break;
    }
    case kFileHash: {
      mutable_filehash()->::HaWC::RspMsg_FileHashRsp::MergeFrom(from.filehash());
      break;
    }
    case kResetEvent: {
      mutable_resetevent()->::HaWC::RspMsg_ResetEvt::MergeFrom(from.resetevent());
      break;
    }
    case RESPONSE_NOT_SET: {
      break;
    }
  }
}

void RspMsg_AppManagerRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.RspMsg.AppManagerRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RspMsg_AppManagerRsp::CopyFrom(const RspMsg_AppManagerRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.RspMsg.AppManagerRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RspMsg_AppManagerRsp::IsInitialized() const {
  return true;
}

void RspMsg_AppManagerRsp::Swap(RspMsg_AppManagerRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RspMsg_AppManagerRsp::InternalSwap(RspMsg_AppManagerRsp* other) {
  using std::swap;
  swap(response_, other->response_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RspMsg_AppManagerRsp::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RspMsg_FeedSourceRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RspMsg_FeedSourceRsp::kFeedIDFieldNumber;
const int RspMsg_FeedSourceRsp::kTypeFieldNumber;
const int RspMsg_FeedSourceRsp::kSourceStrFieldNumber;
const int RspMsg_FeedSourceRsp::kQosFrameTimeoutFieldNumber;
const int RspMsg_FeedSourceRsp::kQosFrameRefreshFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RspMsg_FeedSourceRsp::RspMsg_FeedSourceRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_RspMsg_FeedSourceRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.RspMsg.FeedSourceRsp)
}
RspMsg_FeedSourceRsp::RspMsg_FeedSourceRsp(const RspMsg_FeedSourceRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sourcestr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sourcestr().size() > 0) {
    sourcestr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sourcestr_);
  }
  ::memcpy(&feedid_, &from.feedid_,
    static_cast<size_t>(reinterpret_cast<char*>(&qosframerefresh_) -
    reinterpret_cast<char*>(&feedid_)) + sizeof(qosframerefresh_));
  // @@protoc_insertion_point(copy_constructor:HaWC.RspMsg.FeedSourceRsp)
}

void RspMsg_FeedSourceRsp::SharedCtor() {
  sourcestr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&feedid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&qosframerefresh_) -
      reinterpret_cast<char*>(&feedid_)) + sizeof(qosframerefresh_));
}

RspMsg_FeedSourceRsp::~RspMsg_FeedSourceRsp() {
  // @@protoc_insertion_point(destructor:HaWC.RspMsg.FeedSourceRsp)
  SharedDtor();
}

void RspMsg_FeedSourceRsp::SharedDtor() {
  sourcestr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RspMsg_FeedSourceRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RspMsg_FeedSourceRsp::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RspMsg_FeedSourceRsp& RspMsg_FeedSourceRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_RspMsg_FeedSourceRsp.base);
  return *internal_default_instance();
}


void RspMsg_FeedSourceRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.RspMsg.FeedSourceRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sourcestr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&feedid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&qosframerefresh_) -
      reinterpret_cast<char*>(&feedid_)) + sizeof(qosframerefresh_));
  _internal_metadata_.Clear();
}

bool RspMsg_FeedSourceRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.RspMsg.FeedSourceRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 feedID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &feedid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .HaWC.FeedType type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::HaWC::FeedType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sourceStr = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sourcestr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sourcestr().data(), static_cast<int>(this->sourcestr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HaWC.RspMsg.FeedSourceRsp.sourceStr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 qosFrameTimeout = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &qosframetimeout_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 qosFrameRefresh = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &qosframerefresh_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.RspMsg.FeedSourceRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.RspMsg.FeedSourceRsp)
  return false;
#undef DO_
}

void RspMsg_FeedSourceRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.RspMsg.FeedSourceRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 feedID = 1;
  if (this->feedid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->feedid(), output);
  }

  // .HaWC.FeedType type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // string sourceStr = 3;
  if (this->sourcestr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sourcestr().data(), static_cast<int>(this->sourcestr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.RspMsg.FeedSourceRsp.sourceStr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sourcestr(), output);
  }

  // uint32 qosFrameTimeout = 4;
  if (this->qosframetimeout() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->qosframetimeout(), output);
  }

  // uint32 qosFrameRefresh = 5;
  if (this->qosframerefresh() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->qosframerefresh(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.RspMsg.FeedSourceRsp)
}

::google::protobuf::uint8* RspMsg_FeedSourceRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.RspMsg.FeedSourceRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 feedID = 1;
  if (this->feedid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->feedid(), target);
  }

  // .HaWC.FeedType type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // string sourceStr = 3;
  if (this->sourcestr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sourcestr().data(), static_cast<int>(this->sourcestr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.RspMsg.FeedSourceRsp.sourceStr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->sourcestr(), target);
  }

  // uint32 qosFrameTimeout = 4;
  if (this->qosframetimeout() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->qosframetimeout(), target);
  }

  // uint32 qosFrameRefresh = 5;
  if (this->qosframerefresh() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->qosframerefresh(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.RspMsg.FeedSourceRsp)
  return target;
}

size_t RspMsg_FeedSourceRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.RspMsg.FeedSourceRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string sourceStr = 3;
  if (this->sourcestr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sourcestr());
  }

  // int32 feedID = 1;
  if (this->feedid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->feedid());
  }

  // .HaWC.FeedType type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // uint32 qosFrameTimeout = 4;
  if (this->qosframetimeout() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->qosframetimeout());
  }

  // uint32 qosFrameRefresh = 5;
  if (this->qosframerefresh() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->qosframerefresh());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RspMsg_FeedSourceRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.RspMsg.FeedSourceRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RspMsg_FeedSourceRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RspMsg_FeedSourceRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.RspMsg.FeedSourceRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.RspMsg.FeedSourceRsp)
    MergeFrom(*source);
  }
}

void RspMsg_FeedSourceRsp::MergeFrom(const RspMsg_FeedSourceRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.RspMsg.FeedSourceRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sourcestr().size() > 0) {

    sourcestr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sourcestr_);
  }
  if (from.feedid() != 0) {
    set_feedid(from.feedid());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.qosframetimeout() != 0) {
    set_qosframetimeout(from.qosframetimeout());
  }
  if (from.qosframerefresh() != 0) {
    set_qosframerefresh(from.qosframerefresh());
  }
}

void RspMsg_FeedSourceRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.RspMsg.FeedSourceRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RspMsg_FeedSourceRsp::CopyFrom(const RspMsg_FeedSourceRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.RspMsg.FeedSourceRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RspMsg_FeedSourceRsp::IsInitialized() const {
  return true;
}

void RspMsg_FeedSourceRsp::Swap(RspMsg_FeedSourceRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RspMsg_FeedSourceRsp::InternalSwap(RspMsg_FeedSourceRsp* other) {
  using std::swap;
  sourcestr_.Swap(&other->sourcestr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(feedid_, other->feedid_);
  swap(type_, other->type_);
  swap(qosframetimeout_, other->qosframetimeout_);
  swap(qosframerefresh_, other->qosframerefresh_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RspMsg_FeedSourceRsp::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RspMsg_OverlayCreateRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RspMsg_OverlayCreateRsp::RspMsg_OverlayCreateRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_RspMsg_OverlayCreateRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.RspMsg.OverlayCreateRsp)
}
RspMsg_OverlayCreateRsp::RspMsg_OverlayCreateRsp(const RspMsg_OverlayCreateRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:HaWC.RspMsg.OverlayCreateRsp)
}

void RspMsg_OverlayCreateRsp::SharedCtor() {
}

RspMsg_OverlayCreateRsp::~RspMsg_OverlayCreateRsp() {
  // @@protoc_insertion_point(destructor:HaWC.RspMsg.OverlayCreateRsp)
  SharedDtor();
}

void RspMsg_OverlayCreateRsp::SharedDtor() {
}

void RspMsg_OverlayCreateRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RspMsg_OverlayCreateRsp::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RspMsg_OverlayCreateRsp& RspMsg_OverlayCreateRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_RspMsg_OverlayCreateRsp.base);
  return *internal_default_instance();
}


void RspMsg_OverlayCreateRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.RspMsg.OverlayCreateRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool RspMsg_OverlayCreateRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.RspMsg.OverlayCreateRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.RspMsg.OverlayCreateRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.RspMsg.OverlayCreateRsp)
  return false;
#undef DO_
}

void RspMsg_OverlayCreateRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.RspMsg.OverlayCreateRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.RspMsg.OverlayCreateRsp)
}

::google::protobuf::uint8* RspMsg_OverlayCreateRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.RspMsg.OverlayCreateRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.RspMsg.OverlayCreateRsp)
  return target;
}

size_t RspMsg_OverlayCreateRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.RspMsg.OverlayCreateRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RspMsg_OverlayCreateRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.RspMsg.OverlayCreateRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RspMsg_OverlayCreateRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RspMsg_OverlayCreateRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.RspMsg.OverlayCreateRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.RspMsg.OverlayCreateRsp)
    MergeFrom(*source);
  }
}

void RspMsg_OverlayCreateRsp::MergeFrom(const RspMsg_OverlayCreateRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.RspMsg.OverlayCreateRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void RspMsg_OverlayCreateRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.RspMsg.OverlayCreateRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RspMsg_OverlayCreateRsp::CopyFrom(const RspMsg_OverlayCreateRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.RspMsg.OverlayCreateRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RspMsg_OverlayCreateRsp::IsInitialized() const {
  return true;
}

void RspMsg_OverlayCreateRsp::Swap(RspMsg_OverlayCreateRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RspMsg_OverlayCreateRsp::InternalSwap(RspMsg_OverlayCreateRsp* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RspMsg_OverlayCreateRsp::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RspMsg_OverlayUpdateRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RspMsg_OverlayUpdateRsp::RspMsg_OverlayUpdateRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_RspMsg_OverlayUpdateRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.RspMsg.OverlayUpdateRsp)
}
RspMsg_OverlayUpdateRsp::RspMsg_OverlayUpdateRsp(const RspMsg_OverlayUpdateRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:HaWC.RspMsg.OverlayUpdateRsp)
}

void RspMsg_OverlayUpdateRsp::SharedCtor() {
}

RspMsg_OverlayUpdateRsp::~RspMsg_OverlayUpdateRsp() {
  // @@protoc_insertion_point(destructor:HaWC.RspMsg.OverlayUpdateRsp)
  SharedDtor();
}

void RspMsg_OverlayUpdateRsp::SharedDtor() {
}

void RspMsg_OverlayUpdateRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RspMsg_OverlayUpdateRsp::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RspMsg_OverlayUpdateRsp& RspMsg_OverlayUpdateRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_RspMsg_OverlayUpdateRsp.base);
  return *internal_default_instance();
}


void RspMsg_OverlayUpdateRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.RspMsg.OverlayUpdateRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool RspMsg_OverlayUpdateRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.RspMsg.OverlayUpdateRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.RspMsg.OverlayUpdateRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.RspMsg.OverlayUpdateRsp)
  return false;
#undef DO_
}

void RspMsg_OverlayUpdateRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.RspMsg.OverlayUpdateRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.RspMsg.OverlayUpdateRsp)
}

::google::protobuf::uint8* RspMsg_OverlayUpdateRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.RspMsg.OverlayUpdateRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.RspMsg.OverlayUpdateRsp)
  return target;
}

size_t RspMsg_OverlayUpdateRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.RspMsg.OverlayUpdateRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RspMsg_OverlayUpdateRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.RspMsg.OverlayUpdateRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RspMsg_OverlayUpdateRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RspMsg_OverlayUpdateRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.RspMsg.OverlayUpdateRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.RspMsg.OverlayUpdateRsp)
    MergeFrom(*source);
  }
}

void RspMsg_OverlayUpdateRsp::MergeFrom(const RspMsg_OverlayUpdateRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.RspMsg.OverlayUpdateRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void RspMsg_OverlayUpdateRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.RspMsg.OverlayUpdateRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RspMsg_OverlayUpdateRsp::CopyFrom(const RspMsg_OverlayUpdateRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.RspMsg.OverlayUpdateRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RspMsg_OverlayUpdateRsp::IsInitialized() const {
  return true;
}

void RspMsg_OverlayUpdateRsp::Swap(RspMsg_OverlayUpdateRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RspMsg_OverlayUpdateRsp::InternalSwap(RspMsg_OverlayUpdateRsp* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RspMsg_OverlayUpdateRsp::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RspMsg_OverlayRsp::InitAsDefaultInstance() {
  ::HaWC::_RspMsg_OverlayRsp_default_instance_.createscreen_ = const_cast< ::HaWC::RspMsg_OverlayCreateRsp*>(
      ::HaWC::RspMsg_OverlayCreateRsp::internal_default_instance());
  ::HaWC::_RspMsg_OverlayRsp_default_instance_.updatesreen_ = const_cast< ::HaWC::RspMsg_OverlayUpdateRsp*>(
      ::HaWC::RspMsg_OverlayUpdateRsp::internal_default_instance());
}
void RspMsg_OverlayRsp::set_allocated_createscreen(::HaWC::RspMsg_OverlayCreateRsp* createscreen) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_response();
  if (createscreen) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      createscreen = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, createscreen, submessage_arena);
    }
    set_has_createscreen();
    response_.createscreen_ = createscreen;
  }
  // @@protoc_insertion_point(field_set_allocated:HaWC.RspMsg.OverlayRsp.createScreen)
}
void RspMsg_OverlayRsp::set_allocated_updatesreen(::HaWC::RspMsg_OverlayUpdateRsp* updatesreen) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_response();
  if (updatesreen) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      updatesreen = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, updatesreen, submessage_arena);
    }
    set_has_updatesreen();
    response_.updatesreen_ = updatesreen;
  }
  // @@protoc_insertion_point(field_set_allocated:HaWC.RspMsg.OverlayRsp.updateSreen)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RspMsg_OverlayRsp::kViewPortIDFieldNumber;
const int RspMsg_OverlayRsp::kCreateScreenFieldNumber;
const int RspMsg_OverlayRsp::kUpdateSreenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RspMsg_OverlayRsp::RspMsg_OverlayRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_RspMsg_OverlayRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.RspMsg.OverlayRsp)
}
RspMsg_OverlayRsp::RspMsg_OverlayRsp(const RspMsg_OverlayRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  viewportid_ = from.viewportid_;
  clear_has_response();
  switch (from.response_case()) {
    case kCreateScreen: {
      mutable_createscreen()->::HaWC::RspMsg_OverlayCreateRsp::MergeFrom(from.createscreen());
      break;
    }
    case kUpdateSreen: {
      mutable_updatesreen()->::HaWC::RspMsg_OverlayUpdateRsp::MergeFrom(from.updatesreen());
      break;
    }
    case RESPONSE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:HaWC.RspMsg.OverlayRsp)
}

void RspMsg_OverlayRsp::SharedCtor() {
  viewportid_ = 0u;
  clear_has_response();
}

RspMsg_OverlayRsp::~RspMsg_OverlayRsp() {
  // @@protoc_insertion_point(destructor:HaWC.RspMsg.OverlayRsp)
  SharedDtor();
}

void RspMsg_OverlayRsp::SharedDtor() {
  if (has_response()) {
    clear_response();
  }
}

void RspMsg_OverlayRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RspMsg_OverlayRsp::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RspMsg_OverlayRsp& RspMsg_OverlayRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_RspMsg_OverlayRsp.base);
  return *internal_default_instance();
}


void RspMsg_OverlayRsp::clear_response() {
// @@protoc_insertion_point(one_of_clear_start:HaWC.RspMsg.OverlayRsp)
  switch (response_case()) {
    case kCreateScreen: {
      delete response_.createscreen_;
      break;
    }
    case kUpdateSreen: {
      delete response_.updatesreen_;
      break;
    }
    case RESPONSE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = RESPONSE_NOT_SET;
}


void RspMsg_OverlayRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.RspMsg.OverlayRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  viewportid_ = 0u;
  clear_response();
  _internal_metadata_.Clear();
}

bool RspMsg_OverlayRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.RspMsg.OverlayRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 viewPortID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &viewportid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .HaWC.RspMsg.OverlayCreateRsp createScreen = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_createscreen()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .HaWC.RspMsg.OverlayUpdateRsp updateSreen = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_updatesreen()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.RspMsg.OverlayRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.RspMsg.OverlayRsp)
  return false;
#undef DO_
}

void RspMsg_OverlayRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.RspMsg.OverlayRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 viewPortID = 1;
  if (this->viewportid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->viewportid(), output);
  }

  // .HaWC.RspMsg.OverlayCreateRsp createScreen = 5;
  if (has_createscreen()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_createscreen(), output);
  }

  // .HaWC.RspMsg.OverlayUpdateRsp updateSreen = 6;
  if (has_updatesreen()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_updatesreen(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.RspMsg.OverlayRsp)
}

::google::protobuf::uint8* RspMsg_OverlayRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.RspMsg.OverlayRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 viewPortID = 1;
  if (this->viewportid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->viewportid(), target);
  }

  // .HaWC.RspMsg.OverlayCreateRsp createScreen = 5;
  if (has_createscreen()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_createscreen(), deterministic, target);
  }

  // .HaWC.RspMsg.OverlayUpdateRsp updateSreen = 6;
  if (has_updatesreen()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_updatesreen(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.RspMsg.OverlayRsp)
  return target;
}

size_t RspMsg_OverlayRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.RspMsg.OverlayRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 viewPortID = 1;
  if (this->viewportid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->viewportid());
  }

  switch (response_case()) {
    // .HaWC.RspMsg.OverlayCreateRsp createScreen = 5;
    case kCreateScreen: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *response_.createscreen_);
      break;
    }
    // .HaWC.RspMsg.OverlayUpdateRsp updateSreen = 6;
    case kUpdateSreen: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *response_.updatesreen_);
      break;
    }
    case RESPONSE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RspMsg_OverlayRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.RspMsg.OverlayRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RspMsg_OverlayRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RspMsg_OverlayRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.RspMsg.OverlayRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.RspMsg.OverlayRsp)
    MergeFrom(*source);
  }
}

void RspMsg_OverlayRsp::MergeFrom(const RspMsg_OverlayRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.RspMsg.OverlayRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.viewportid() != 0) {
    set_viewportid(from.viewportid());
  }
  switch (from.response_case()) {
    case kCreateScreen: {
      mutable_createscreen()->::HaWC::RspMsg_OverlayCreateRsp::MergeFrom(from.createscreen());
      break;
    }
    case kUpdateSreen: {
      mutable_updatesreen()->::HaWC::RspMsg_OverlayUpdateRsp::MergeFrom(from.updatesreen());
      break;
    }
    case RESPONSE_NOT_SET: {
      break;
    }
  }
}

void RspMsg_OverlayRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.RspMsg.OverlayRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RspMsg_OverlayRsp::CopyFrom(const RspMsg_OverlayRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.RspMsg.OverlayRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RspMsg_OverlayRsp::IsInitialized() const {
  return true;
}

void RspMsg_OverlayRsp::Swap(RspMsg_OverlayRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RspMsg_OverlayRsp::InternalSwap(RspMsg_OverlayRsp* other) {
  using std::swap;
  swap(viewportid_, other->viewportid_);
  swap(response_, other->response_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RspMsg_OverlayRsp::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RspMsg_ViewFeedRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RspMsg_ViewFeedRsp::kViewPortIDFieldNumber;
const int RspMsg_ViewFeedRsp::kFeedIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RspMsg_ViewFeedRsp::RspMsg_ViewFeedRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_RspMsg_ViewFeedRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.RspMsg.ViewFeedRsp)
}
RspMsg_ViewFeedRsp::RspMsg_ViewFeedRsp(const RspMsg_ViewFeedRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&viewportid_, &from.viewportid_,
    static_cast<size_t>(reinterpret_cast<char*>(&feedid_) -
    reinterpret_cast<char*>(&viewportid_)) + sizeof(feedid_));
  // @@protoc_insertion_point(copy_constructor:HaWC.RspMsg.ViewFeedRsp)
}

void RspMsg_ViewFeedRsp::SharedCtor() {
  ::memset(&viewportid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&feedid_) -
      reinterpret_cast<char*>(&viewportid_)) + sizeof(feedid_));
}

RspMsg_ViewFeedRsp::~RspMsg_ViewFeedRsp() {
  // @@protoc_insertion_point(destructor:HaWC.RspMsg.ViewFeedRsp)
  SharedDtor();
}

void RspMsg_ViewFeedRsp::SharedDtor() {
}

void RspMsg_ViewFeedRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RspMsg_ViewFeedRsp::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RspMsg_ViewFeedRsp& RspMsg_ViewFeedRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_RspMsg_ViewFeedRsp.base);
  return *internal_default_instance();
}


void RspMsg_ViewFeedRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.RspMsg.ViewFeedRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&viewportid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&feedid_) -
      reinterpret_cast<char*>(&viewportid_)) + sizeof(feedid_));
  _internal_metadata_.Clear();
}

bool RspMsg_ViewFeedRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.RspMsg.ViewFeedRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 viewPortID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &viewportid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 feedID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &feedid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.RspMsg.ViewFeedRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.RspMsg.ViewFeedRsp)
  return false;
#undef DO_
}

void RspMsg_ViewFeedRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.RspMsg.ViewFeedRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 viewPortID = 1;
  if (this->viewportid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->viewportid(), output);
  }

  // int32 feedID = 2;
  if (this->feedid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->feedid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.RspMsg.ViewFeedRsp)
}

::google::protobuf::uint8* RspMsg_ViewFeedRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.RspMsg.ViewFeedRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 viewPortID = 1;
  if (this->viewportid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->viewportid(), target);
  }

  // int32 feedID = 2;
  if (this->feedid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->feedid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.RspMsg.ViewFeedRsp)
  return target;
}

size_t RspMsg_ViewFeedRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.RspMsg.ViewFeedRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 viewPortID = 1;
  if (this->viewportid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->viewportid());
  }

  // int32 feedID = 2;
  if (this->feedid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->feedid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RspMsg_ViewFeedRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.RspMsg.ViewFeedRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RspMsg_ViewFeedRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RspMsg_ViewFeedRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.RspMsg.ViewFeedRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.RspMsg.ViewFeedRsp)
    MergeFrom(*source);
  }
}

void RspMsg_ViewFeedRsp::MergeFrom(const RspMsg_ViewFeedRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.RspMsg.ViewFeedRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.viewportid() != 0) {
    set_viewportid(from.viewportid());
  }
  if (from.feedid() != 0) {
    set_feedid(from.feedid());
  }
}

void RspMsg_ViewFeedRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.RspMsg.ViewFeedRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RspMsg_ViewFeedRsp::CopyFrom(const RspMsg_ViewFeedRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.RspMsg.ViewFeedRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RspMsg_ViewFeedRsp::IsInitialized() const {
  return true;
}

void RspMsg_ViewFeedRsp::Swap(RspMsg_ViewFeedRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RspMsg_ViewFeedRsp::InternalSwap(RspMsg_ViewFeedRsp* other) {
  using std::swap;
  swap(viewportid_, other->viewportid_);
  swap(feedid_, other->feedid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RspMsg_ViewFeedRsp::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RspMsg_ViewWindowRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RspMsg_ViewWindowRsp::kViewPortIDFieldNumber;
const int RspMsg_ViewWindowRsp::kXFieldNumber;
const int RspMsg_ViewWindowRsp::kYFieldNumber;
const int RspMsg_ViewWindowRsp::kZFieldNumber;
const int RspMsg_ViewWindowRsp::kWidthFieldNumber;
const int RspMsg_ViewWindowRsp::kHeightFieldNumber;
const int RspMsg_ViewWindowRsp::kAlphaFieldNumber;
const int RspMsg_ViewWindowRsp::kEnableOverlayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RspMsg_ViewWindowRsp::RspMsg_ViewWindowRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_RspMsg_ViewWindowRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.RspMsg.ViewWindowRsp)
}
RspMsg_ViewWindowRsp::RspMsg_ViewWindowRsp(const RspMsg_ViewWindowRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&viewportid_, &from.viewportid_,
    static_cast<size_t>(reinterpret_cast<char*>(&enableoverlay_) -
    reinterpret_cast<char*>(&viewportid_)) + sizeof(enableoverlay_));
  // @@protoc_insertion_point(copy_constructor:HaWC.RspMsg.ViewWindowRsp)
}

void RspMsg_ViewWindowRsp::SharedCtor() {
  ::memset(&viewportid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enableoverlay_) -
      reinterpret_cast<char*>(&viewportid_)) + sizeof(enableoverlay_));
}

RspMsg_ViewWindowRsp::~RspMsg_ViewWindowRsp() {
  // @@protoc_insertion_point(destructor:HaWC.RspMsg.ViewWindowRsp)
  SharedDtor();
}

void RspMsg_ViewWindowRsp::SharedDtor() {
}

void RspMsg_ViewWindowRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RspMsg_ViewWindowRsp::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RspMsg_ViewWindowRsp& RspMsg_ViewWindowRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_RspMsg_ViewWindowRsp.base);
  return *internal_default_instance();
}


void RspMsg_ViewWindowRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.RspMsg.ViewWindowRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&viewportid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enableoverlay_) -
      reinterpret_cast<char*>(&viewportid_)) + sizeof(enableoverlay_));
  _internal_metadata_.Clear();
}

bool RspMsg_ViewWindowRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.RspMsg.ViewWindowRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 viewPortID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &viewportid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 x = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 y = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 z = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 width = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 height = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double alpha = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &alpha_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool enableOverlay = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enableoverlay_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.RspMsg.ViewWindowRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.RspMsg.ViewWindowRsp)
  return false;
#undef DO_
}

void RspMsg_ViewWindowRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.RspMsg.ViewWindowRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 viewPortID = 1;
  if (this->viewportid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->viewportid(), output);
  }

  // int32 x = 2;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->x(), output);
  }

  // int32 y = 3;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->y(), output);
  }

  // int32 z = 4;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->z(), output);
  }

  // int32 width = 5;
  if (this->width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->width(), output);
  }

  // int32 height = 6;
  if (this->height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->height(), output);
  }

  // double alpha = 7;
  if (this->alpha() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->alpha(), output);
  }

  // bool enableOverlay = 8;
  if (this->enableoverlay() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->enableoverlay(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.RspMsg.ViewWindowRsp)
}

::google::protobuf::uint8* RspMsg_ViewWindowRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.RspMsg.ViewWindowRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 viewPortID = 1;
  if (this->viewportid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->viewportid(), target);
  }

  // int32 x = 2;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->x(), target);
  }

  // int32 y = 3;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->y(), target);
  }

  // int32 z = 4;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->z(), target);
  }

  // int32 width = 5;
  if (this->width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->width(), target);
  }

  // int32 height = 6;
  if (this->height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->height(), target);
  }

  // double alpha = 7;
  if (this->alpha() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->alpha(), target);
  }

  // bool enableOverlay = 8;
  if (this->enableoverlay() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->enableoverlay(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.RspMsg.ViewWindowRsp)
  return target;
}

size_t RspMsg_ViewWindowRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.RspMsg.ViewWindowRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 viewPortID = 1;
  if (this->viewportid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->viewportid());
  }

  // int32 x = 2;
  if (this->x() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());
  }

  // int32 y = 3;
  if (this->y() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());
  }

  // int32 z = 4;
  if (this->z() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->z());
  }

  // int32 width = 5;
  if (this->width() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->width());
  }

  // int32 height = 6;
  if (this->height() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->height());
  }

  // double alpha = 7;
  if (this->alpha() != 0) {
    total_size += 1 + 8;
  }

  // bool enableOverlay = 8;
  if (this->enableoverlay() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RspMsg_ViewWindowRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.RspMsg.ViewWindowRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RspMsg_ViewWindowRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RspMsg_ViewWindowRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.RspMsg.ViewWindowRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.RspMsg.ViewWindowRsp)
    MergeFrom(*source);
  }
}

void RspMsg_ViewWindowRsp::MergeFrom(const RspMsg_ViewWindowRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.RspMsg.ViewWindowRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.viewportid() != 0) {
    set_viewportid(from.viewportid());
  }
  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
  if (from.width() != 0) {
    set_width(from.width());
  }
  if (from.height() != 0) {
    set_height(from.height());
  }
  if (from.alpha() != 0) {
    set_alpha(from.alpha());
  }
  if (from.enableoverlay() != 0) {
    set_enableoverlay(from.enableoverlay());
  }
}

void RspMsg_ViewWindowRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.RspMsg.ViewWindowRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RspMsg_ViewWindowRsp::CopyFrom(const RspMsg_ViewWindowRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.RspMsg.ViewWindowRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RspMsg_ViewWindowRsp::IsInitialized() const {
  return true;
}

void RspMsg_ViewWindowRsp::Swap(RspMsg_ViewWindowRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RspMsg_ViewWindowRsp::InternalSwap(RspMsg_ViewWindowRsp* other) {
  using std::swap;
  swap(viewportid_, other->viewportid_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  swap(width_, other->width_);
  swap(height_, other->height_);
  swap(alpha_, other->alpha_);
  swap(enableoverlay_, other->enableoverlay_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RspMsg_ViewWindowRsp::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RspMsg_DisplayCfgRsp::InitAsDefaultInstance() {
  ::HaWC::_RspMsg_DisplayCfgRsp_default_instance_._instance.get_mutable()->mainoverlayset_ = const_cast< ::HaWC::RspMsg_OverlayRsp*>(
      ::HaWC::RspMsg_OverlayRsp::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RspMsg_DisplayCfgRsp::kResultFieldNumber;
const int RspMsg_DisplayCfgRsp::kErrStrFieldNumber;
const int RspMsg_DisplayCfgRsp::kFeedSrcsFieldNumber;
const int RspMsg_DisplayCfgRsp::kMainOverlaySetFieldNumber;
const int RspMsg_DisplayCfgRsp::kViewFeedsFieldNumber;
const int RspMsg_DisplayCfgRsp::kViewWindowsFieldNumber;
const int RspMsg_DisplayCfgRsp::kViewOverlaysSetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RspMsg_DisplayCfgRsp::RspMsg_DisplayCfgRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_RspMsg_DisplayCfgRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.RspMsg.DisplayCfgRsp)
}
RspMsg_DisplayCfgRsp::RspMsg_DisplayCfgRsp(const RspMsg_DisplayCfgRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      feedsrcs_(from.feedsrcs_),
      viewfeeds_(from.viewfeeds_),
      viewwindows_(from.viewwindows_),
      viewoverlaysset_(from.viewoverlaysset_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  errstr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.errstr().size() > 0) {
    errstr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errstr_);
  }
  if (from.has_mainoverlayset()) {
    mainoverlayset_ = new ::HaWC::RspMsg_OverlayRsp(*from.mainoverlayset_);
  } else {
    mainoverlayset_ = NULL;
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:HaWC.RspMsg.DisplayCfgRsp)
}

void RspMsg_DisplayCfgRsp::SharedCtor() {
  errstr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&mainoverlayset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&mainoverlayset_)) + sizeof(result_));
}

RspMsg_DisplayCfgRsp::~RspMsg_DisplayCfgRsp() {
  // @@protoc_insertion_point(destructor:HaWC.RspMsg.DisplayCfgRsp)
  SharedDtor();
}

void RspMsg_DisplayCfgRsp::SharedDtor() {
  errstr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete mainoverlayset_;
}

void RspMsg_DisplayCfgRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RspMsg_DisplayCfgRsp::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RspMsg_DisplayCfgRsp& RspMsg_DisplayCfgRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_RspMsg_DisplayCfgRsp.base);
  return *internal_default_instance();
}


void RspMsg_DisplayCfgRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.RspMsg.DisplayCfgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  feedsrcs_.Clear();
  viewfeeds_.Clear();
  viewwindows_.Clear();
  viewoverlaysset_.Clear();
  errstr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && mainoverlayset_ != NULL) {
    delete mainoverlayset_;
  }
  mainoverlayset_ = NULL;
  result_ = false;
  _internal_metadata_.Clear();
}

bool RspMsg_DisplayCfgRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.RspMsg.DisplayCfgRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string errStr = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errstr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->errstr().data(), static_cast<int>(this->errstr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HaWC.RspMsg.DisplayCfgRsp.errStr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .HaWC.RspMsg.FeedSourceRsp feedSrcs = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_feedsrcs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .HaWC.RspMsg.OverlayRsp mainOverlaySet = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mainoverlayset()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .HaWC.RspMsg.ViewFeedRsp viewFeeds = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_viewfeeds()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .HaWC.RspMsg.ViewWindowRsp viewWindows = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_viewwindows()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .HaWC.RspMsg.OverlayRsp viewOverlaysSet = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_viewoverlaysset()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.RspMsg.DisplayCfgRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.RspMsg.DisplayCfgRsp)
  return false;
#undef DO_
}

void RspMsg_DisplayCfgRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.RspMsg.DisplayCfgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->result(), output);
  }

  // string errStr = 2;
  if (this->errstr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errstr().data(), static_cast<int>(this->errstr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.RspMsg.DisplayCfgRsp.errStr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->errstr(), output);
  }

  // repeated .HaWC.RspMsg.FeedSourceRsp feedSrcs = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->feedsrcs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->feedsrcs(static_cast<int>(i)),
      output);
  }

  // .HaWC.RspMsg.OverlayRsp mainOverlaySet = 7;
  if (this->has_mainoverlayset()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_mainoverlayset(), output);
  }

  // repeated .HaWC.RspMsg.ViewFeedRsp viewFeeds = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->viewfeeds_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9,
      this->viewfeeds(static_cast<int>(i)),
      output);
  }

  // repeated .HaWC.RspMsg.ViewWindowRsp viewWindows = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->viewwindows_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10,
      this->viewwindows(static_cast<int>(i)),
      output);
  }

  // repeated .HaWC.RspMsg.OverlayRsp viewOverlaysSet = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->viewoverlaysset_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12,
      this->viewoverlaysset(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.RspMsg.DisplayCfgRsp)
}

::google::protobuf::uint8* RspMsg_DisplayCfgRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.RspMsg.DisplayCfgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->result(), target);
  }

  // string errStr = 2;
  if (this->errstr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errstr().data(), static_cast<int>(this->errstr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.RspMsg.DisplayCfgRsp.errStr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->errstr(), target);
  }

  // repeated .HaWC.RspMsg.FeedSourceRsp feedSrcs = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->feedsrcs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->feedsrcs(static_cast<int>(i)), deterministic, target);
  }

  // .HaWC.RspMsg.OverlayRsp mainOverlaySet = 7;
  if (this->has_mainoverlayset()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_mainoverlayset(), deterministic, target);
  }

  // repeated .HaWC.RspMsg.ViewFeedRsp viewFeeds = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->viewfeeds_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->viewfeeds(static_cast<int>(i)), deterministic, target);
  }

  // repeated .HaWC.RspMsg.ViewWindowRsp viewWindows = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->viewwindows_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->viewwindows(static_cast<int>(i)), deterministic, target);
  }

  // repeated .HaWC.RspMsg.OverlayRsp viewOverlaysSet = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->viewoverlaysset_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->viewoverlaysset(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.RspMsg.DisplayCfgRsp)
  return target;
}

size_t RspMsg_DisplayCfgRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.RspMsg.DisplayCfgRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .HaWC.RspMsg.FeedSourceRsp feedSrcs = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->feedsrcs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->feedsrcs(static_cast<int>(i)));
    }
  }

  // repeated .HaWC.RspMsg.ViewFeedRsp viewFeeds = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->viewfeeds_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->viewfeeds(static_cast<int>(i)));
    }
  }

  // repeated .HaWC.RspMsg.ViewWindowRsp viewWindows = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->viewwindows_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->viewwindows(static_cast<int>(i)));
    }
  }

  // repeated .HaWC.RspMsg.OverlayRsp viewOverlaysSet = 12;
  {
    unsigned int count = static_cast<unsigned int>(this->viewoverlaysset_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->viewoverlaysset(static_cast<int>(i)));
    }
  }

  // string errStr = 2;
  if (this->errstr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errstr());
  }

  // .HaWC.RspMsg.OverlayRsp mainOverlaySet = 7;
  if (this->has_mainoverlayset()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *mainoverlayset_);
  }

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RspMsg_DisplayCfgRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.RspMsg.DisplayCfgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RspMsg_DisplayCfgRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RspMsg_DisplayCfgRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.RspMsg.DisplayCfgRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.RspMsg.DisplayCfgRsp)
    MergeFrom(*source);
  }
}

void RspMsg_DisplayCfgRsp::MergeFrom(const RspMsg_DisplayCfgRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.RspMsg.DisplayCfgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  feedsrcs_.MergeFrom(from.feedsrcs_);
  viewfeeds_.MergeFrom(from.viewfeeds_);
  viewwindows_.MergeFrom(from.viewwindows_);
  viewoverlaysset_.MergeFrom(from.viewoverlaysset_);
  if (from.errstr().size() > 0) {

    errstr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errstr_);
  }
  if (from.has_mainoverlayset()) {
    mutable_mainoverlayset()->::HaWC::RspMsg_OverlayRsp::MergeFrom(from.mainoverlayset());
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void RspMsg_DisplayCfgRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.RspMsg.DisplayCfgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RspMsg_DisplayCfgRsp::CopyFrom(const RspMsg_DisplayCfgRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.RspMsg.DisplayCfgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RspMsg_DisplayCfgRsp::IsInitialized() const {
  return true;
}

void RspMsg_DisplayCfgRsp::Swap(RspMsg_DisplayCfgRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RspMsg_DisplayCfgRsp::InternalSwap(RspMsg_DisplayCfgRsp* other) {
  using std::swap;
  CastToBase(&feedsrcs_)->InternalSwap(CastToBase(&other->feedsrcs_));
  CastToBase(&viewfeeds_)->InternalSwap(CastToBase(&other->viewfeeds_));
  CastToBase(&viewwindows_)->InternalSwap(CastToBase(&other->viewwindows_));
  CastToBase(&viewoverlaysset_)->InternalSwap(CastToBase(&other->viewoverlaysset_));
  errstr_.Swap(&other->errstr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(mainoverlayset_, other->mainoverlayset_);
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RspMsg_DisplayCfgRsp::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RspMsg_SaveDisplayRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RspMsg_SaveDisplayRsp::kResultFieldNumber;
const int RspMsg_SaveDisplayRsp::kErrStrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RspMsg_SaveDisplayRsp::RspMsg_SaveDisplayRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_RspMsg_SaveDisplayRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.RspMsg.SaveDisplayRsp)
}
RspMsg_SaveDisplayRsp::RspMsg_SaveDisplayRsp(const RspMsg_SaveDisplayRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  errstr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.errstr().size() > 0) {
    errstr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errstr_);
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:HaWC.RspMsg.SaveDisplayRsp)
}

void RspMsg_SaveDisplayRsp::SharedCtor() {
  errstr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = false;
}

RspMsg_SaveDisplayRsp::~RspMsg_SaveDisplayRsp() {
  // @@protoc_insertion_point(destructor:HaWC.RspMsg.SaveDisplayRsp)
  SharedDtor();
}

void RspMsg_SaveDisplayRsp::SharedDtor() {
  errstr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RspMsg_SaveDisplayRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RspMsg_SaveDisplayRsp::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RspMsg_SaveDisplayRsp& RspMsg_SaveDisplayRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_RspMsg_SaveDisplayRsp.base);
  return *internal_default_instance();
}


void RspMsg_SaveDisplayRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.RspMsg.SaveDisplayRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errstr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = false;
  _internal_metadata_.Clear();
}

bool RspMsg_SaveDisplayRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.RspMsg.SaveDisplayRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string errStr = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errstr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->errstr().data(), static_cast<int>(this->errstr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HaWC.RspMsg.SaveDisplayRsp.errStr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.RspMsg.SaveDisplayRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.RspMsg.SaveDisplayRsp)
  return false;
#undef DO_
}

void RspMsg_SaveDisplayRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.RspMsg.SaveDisplayRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->result(), output);
  }

  // string errStr = 2;
  if (this->errstr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errstr().data(), static_cast<int>(this->errstr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.RspMsg.SaveDisplayRsp.errStr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->errstr(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.RspMsg.SaveDisplayRsp)
}

::google::protobuf::uint8* RspMsg_SaveDisplayRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.RspMsg.SaveDisplayRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->result(), target);
  }

  // string errStr = 2;
  if (this->errstr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errstr().data(), static_cast<int>(this->errstr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.RspMsg.SaveDisplayRsp.errStr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->errstr(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.RspMsg.SaveDisplayRsp)
  return target;
}

size_t RspMsg_SaveDisplayRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.RspMsg.SaveDisplayRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string errStr = 2;
  if (this->errstr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errstr());
  }

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RspMsg_SaveDisplayRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.RspMsg.SaveDisplayRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RspMsg_SaveDisplayRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RspMsg_SaveDisplayRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.RspMsg.SaveDisplayRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.RspMsg.SaveDisplayRsp)
    MergeFrom(*source);
  }
}

void RspMsg_SaveDisplayRsp::MergeFrom(const RspMsg_SaveDisplayRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.RspMsg.SaveDisplayRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.errstr().size() > 0) {

    errstr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errstr_);
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void RspMsg_SaveDisplayRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.RspMsg.SaveDisplayRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RspMsg_SaveDisplayRsp::CopyFrom(const RspMsg_SaveDisplayRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.RspMsg.SaveDisplayRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RspMsg_SaveDisplayRsp::IsInitialized() const {
  return true;
}

void RspMsg_SaveDisplayRsp::Swap(RspMsg_SaveDisplayRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RspMsg_SaveDisplayRsp::InternalSwap(RspMsg_SaveDisplayRsp* other) {
  using std::swap;
  errstr_.Swap(&other->errstr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RspMsg_SaveDisplayRsp::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RspMsg_LoadDisplayRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RspMsg_LoadDisplayRsp::kResultFieldNumber;
const int RspMsg_LoadDisplayRsp::kErrStrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RspMsg_LoadDisplayRsp::RspMsg_LoadDisplayRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_RspMsg_LoadDisplayRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.RspMsg.LoadDisplayRsp)
}
RspMsg_LoadDisplayRsp::RspMsg_LoadDisplayRsp(const RspMsg_LoadDisplayRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  errstr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.errstr().size() > 0) {
    errstr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errstr_);
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:HaWC.RspMsg.LoadDisplayRsp)
}

void RspMsg_LoadDisplayRsp::SharedCtor() {
  errstr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = false;
}

RspMsg_LoadDisplayRsp::~RspMsg_LoadDisplayRsp() {
  // @@protoc_insertion_point(destructor:HaWC.RspMsg.LoadDisplayRsp)
  SharedDtor();
}

void RspMsg_LoadDisplayRsp::SharedDtor() {
  errstr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RspMsg_LoadDisplayRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RspMsg_LoadDisplayRsp::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RspMsg_LoadDisplayRsp& RspMsg_LoadDisplayRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_RspMsg_LoadDisplayRsp.base);
  return *internal_default_instance();
}


void RspMsg_LoadDisplayRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.RspMsg.LoadDisplayRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errstr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = false;
  _internal_metadata_.Clear();
}

bool RspMsg_LoadDisplayRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.RspMsg.LoadDisplayRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string errStr = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errstr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->errstr().data(), static_cast<int>(this->errstr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HaWC.RspMsg.LoadDisplayRsp.errStr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.RspMsg.LoadDisplayRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.RspMsg.LoadDisplayRsp)
  return false;
#undef DO_
}

void RspMsg_LoadDisplayRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.RspMsg.LoadDisplayRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->result(), output);
  }

  // string errStr = 2;
  if (this->errstr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errstr().data(), static_cast<int>(this->errstr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.RspMsg.LoadDisplayRsp.errStr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->errstr(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.RspMsg.LoadDisplayRsp)
}

::google::protobuf::uint8* RspMsg_LoadDisplayRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.RspMsg.LoadDisplayRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->result(), target);
  }

  // string errStr = 2;
  if (this->errstr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errstr().data(), static_cast<int>(this->errstr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.RspMsg.LoadDisplayRsp.errStr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->errstr(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.RspMsg.LoadDisplayRsp)
  return target;
}

size_t RspMsg_LoadDisplayRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.RspMsg.LoadDisplayRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string errStr = 2;
  if (this->errstr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errstr());
  }

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RspMsg_LoadDisplayRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.RspMsg.LoadDisplayRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RspMsg_LoadDisplayRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RspMsg_LoadDisplayRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.RspMsg.LoadDisplayRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.RspMsg.LoadDisplayRsp)
    MergeFrom(*source);
  }
}

void RspMsg_LoadDisplayRsp::MergeFrom(const RspMsg_LoadDisplayRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.RspMsg.LoadDisplayRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.errstr().size() > 0) {

    errstr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errstr_);
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void RspMsg_LoadDisplayRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.RspMsg.LoadDisplayRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RspMsg_LoadDisplayRsp::CopyFrom(const RspMsg_LoadDisplayRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.RspMsg.LoadDisplayRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RspMsg_LoadDisplayRsp::IsInitialized() const {
  return true;
}

void RspMsg_LoadDisplayRsp::Swap(RspMsg_LoadDisplayRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RspMsg_LoadDisplayRsp::InternalSwap(RspMsg_LoadDisplayRsp* other) {
  using std::swap;
  errstr_.Swap(&other->errstr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RspMsg_LoadDisplayRsp::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RspMsg_LoadFontsRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RspMsg_LoadFontsRsp::kResultFieldNumber;
const int RspMsg_LoadFontsRsp::kErrStrFieldNumber;
const int RspMsg_LoadFontsRsp::kFontFilesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RspMsg_LoadFontsRsp::RspMsg_LoadFontsRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_RspMsg_LoadFontsRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.RspMsg.LoadFontsRsp)
}
RspMsg_LoadFontsRsp::RspMsg_LoadFontsRsp(const RspMsg_LoadFontsRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      fontfiles_(from.fontfiles_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  errstr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.errstr().size() > 0) {
    errstr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errstr_);
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:HaWC.RspMsg.LoadFontsRsp)
}

void RspMsg_LoadFontsRsp::SharedCtor() {
  errstr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = false;
}

RspMsg_LoadFontsRsp::~RspMsg_LoadFontsRsp() {
  // @@protoc_insertion_point(destructor:HaWC.RspMsg.LoadFontsRsp)
  SharedDtor();
}

void RspMsg_LoadFontsRsp::SharedDtor() {
  errstr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RspMsg_LoadFontsRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RspMsg_LoadFontsRsp::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RspMsg_LoadFontsRsp& RspMsg_LoadFontsRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_RspMsg_LoadFontsRsp.base);
  return *internal_default_instance();
}


void RspMsg_LoadFontsRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.RspMsg.LoadFontsRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fontfiles_.Clear();
  errstr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = false;
  _internal_metadata_.Clear();
}

bool RspMsg_LoadFontsRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.RspMsg.LoadFontsRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string errStr = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errstr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->errstr().data(), static_cast<int>(this->errstr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HaWC.RspMsg.LoadFontsRsp.errStr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string fontFiles = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_fontfiles()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fontfiles(this->fontfiles_size() - 1).data(),
            static_cast<int>(this->fontfiles(this->fontfiles_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HaWC.RspMsg.LoadFontsRsp.fontFiles"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.RspMsg.LoadFontsRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.RspMsg.LoadFontsRsp)
  return false;
#undef DO_
}

void RspMsg_LoadFontsRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.RspMsg.LoadFontsRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->result(), output);
  }

  // string errStr = 2;
  if (this->errstr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errstr().data(), static_cast<int>(this->errstr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.RspMsg.LoadFontsRsp.errStr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->errstr(), output);
  }

  // repeated string fontFiles = 4;
  for (int i = 0, n = this->fontfiles_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fontfiles(i).data(), static_cast<int>(this->fontfiles(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.RspMsg.LoadFontsRsp.fontFiles");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->fontfiles(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.RspMsg.LoadFontsRsp)
}

::google::protobuf::uint8* RspMsg_LoadFontsRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.RspMsg.LoadFontsRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->result(), target);
  }

  // string errStr = 2;
  if (this->errstr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errstr().data(), static_cast<int>(this->errstr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.RspMsg.LoadFontsRsp.errStr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->errstr(), target);
  }

  // repeated string fontFiles = 4;
  for (int i = 0, n = this->fontfiles_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fontfiles(i).data(), static_cast<int>(this->fontfiles(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.RspMsg.LoadFontsRsp.fontFiles");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->fontfiles(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.RspMsg.LoadFontsRsp)
  return target;
}

size_t RspMsg_LoadFontsRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.RspMsg.LoadFontsRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string fontFiles = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->fontfiles_size());
  for (int i = 0, n = this->fontfiles_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->fontfiles(i));
  }

  // string errStr = 2;
  if (this->errstr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errstr());
  }

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RspMsg_LoadFontsRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.RspMsg.LoadFontsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RspMsg_LoadFontsRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RspMsg_LoadFontsRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.RspMsg.LoadFontsRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.RspMsg.LoadFontsRsp)
    MergeFrom(*source);
  }
}

void RspMsg_LoadFontsRsp::MergeFrom(const RspMsg_LoadFontsRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.RspMsg.LoadFontsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  fontfiles_.MergeFrom(from.fontfiles_);
  if (from.errstr().size() > 0) {

    errstr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errstr_);
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void RspMsg_LoadFontsRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.RspMsg.LoadFontsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RspMsg_LoadFontsRsp::CopyFrom(const RspMsg_LoadFontsRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.RspMsg.LoadFontsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RspMsg_LoadFontsRsp::IsInitialized() const {
  return true;
}

void RspMsg_LoadFontsRsp::Swap(RspMsg_LoadFontsRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RspMsg_LoadFontsRsp::InternalSwap(RspMsg_LoadFontsRsp* other) {
  using std::swap;
  fontfiles_.InternalSwap(CastToBase(&other->fontfiles_));
  errstr_.Swap(&other->errstr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RspMsg_LoadFontsRsp::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RspMsg_SaveOverlayToFileRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RspMsg_SaveOverlayToFileRsp::kResultFieldNumber;
const int RspMsg_SaveOverlayToFileRsp::kErrStrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RspMsg_SaveOverlayToFileRsp::RspMsg_SaveOverlayToFileRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_RspMsg_SaveOverlayToFileRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.RspMsg.SaveOverlayToFileRsp)
}
RspMsg_SaveOverlayToFileRsp::RspMsg_SaveOverlayToFileRsp(const RspMsg_SaveOverlayToFileRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  errstr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.errstr().size() > 0) {
    errstr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errstr_);
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:HaWC.RspMsg.SaveOverlayToFileRsp)
}

void RspMsg_SaveOverlayToFileRsp::SharedCtor() {
  errstr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = false;
}

RspMsg_SaveOverlayToFileRsp::~RspMsg_SaveOverlayToFileRsp() {
  // @@protoc_insertion_point(destructor:HaWC.RspMsg.SaveOverlayToFileRsp)
  SharedDtor();
}

void RspMsg_SaveOverlayToFileRsp::SharedDtor() {
  errstr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RspMsg_SaveOverlayToFileRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RspMsg_SaveOverlayToFileRsp::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RspMsg_SaveOverlayToFileRsp& RspMsg_SaveOverlayToFileRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_RspMsg_SaveOverlayToFileRsp.base);
  return *internal_default_instance();
}


void RspMsg_SaveOverlayToFileRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.RspMsg.SaveOverlayToFileRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errstr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = false;
  _internal_metadata_.Clear();
}

bool RspMsg_SaveOverlayToFileRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.RspMsg.SaveOverlayToFileRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string errStr = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errstr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->errstr().data(), static_cast<int>(this->errstr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HaWC.RspMsg.SaveOverlayToFileRsp.errStr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.RspMsg.SaveOverlayToFileRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.RspMsg.SaveOverlayToFileRsp)
  return false;
#undef DO_
}

void RspMsg_SaveOverlayToFileRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.RspMsg.SaveOverlayToFileRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->result(), output);
  }

  // string errStr = 2;
  if (this->errstr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errstr().data(), static_cast<int>(this->errstr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.RspMsg.SaveOverlayToFileRsp.errStr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->errstr(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.RspMsg.SaveOverlayToFileRsp)
}

::google::protobuf::uint8* RspMsg_SaveOverlayToFileRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.RspMsg.SaveOverlayToFileRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->result(), target);
  }

  // string errStr = 2;
  if (this->errstr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errstr().data(), static_cast<int>(this->errstr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.RspMsg.SaveOverlayToFileRsp.errStr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->errstr(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.RspMsg.SaveOverlayToFileRsp)
  return target;
}

size_t RspMsg_SaveOverlayToFileRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.RspMsg.SaveOverlayToFileRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string errStr = 2;
  if (this->errstr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errstr());
  }

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RspMsg_SaveOverlayToFileRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.RspMsg.SaveOverlayToFileRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RspMsg_SaveOverlayToFileRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RspMsg_SaveOverlayToFileRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.RspMsg.SaveOverlayToFileRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.RspMsg.SaveOverlayToFileRsp)
    MergeFrom(*source);
  }
}

void RspMsg_SaveOverlayToFileRsp::MergeFrom(const RspMsg_SaveOverlayToFileRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.RspMsg.SaveOverlayToFileRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.errstr().size() > 0) {

    errstr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errstr_);
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void RspMsg_SaveOverlayToFileRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.RspMsg.SaveOverlayToFileRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RspMsg_SaveOverlayToFileRsp::CopyFrom(const RspMsg_SaveOverlayToFileRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.RspMsg.SaveOverlayToFileRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RspMsg_SaveOverlayToFileRsp::IsInitialized() const {
  return true;
}

void RspMsg_SaveOverlayToFileRsp::Swap(RspMsg_SaveOverlayToFileRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RspMsg_SaveOverlayToFileRsp::InternalSwap(RspMsg_SaveOverlayToFileRsp* other) {
  using std::swap;
  errstr_.Swap(&other->errstr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RspMsg_SaveOverlayToFileRsp::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RspMsg_LoadOverlayFromFileRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RspMsg_LoadOverlayFromFileRsp::kResultFieldNumber;
const int RspMsg_LoadOverlayFromFileRsp::kErrStrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RspMsg_LoadOverlayFromFileRsp::RspMsg_LoadOverlayFromFileRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_RspMsg_LoadOverlayFromFileRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.RspMsg.LoadOverlayFromFileRsp)
}
RspMsg_LoadOverlayFromFileRsp::RspMsg_LoadOverlayFromFileRsp(const RspMsg_LoadOverlayFromFileRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  errstr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.errstr().size() > 0) {
    errstr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errstr_);
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:HaWC.RspMsg.LoadOverlayFromFileRsp)
}

void RspMsg_LoadOverlayFromFileRsp::SharedCtor() {
  errstr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = false;
}

RspMsg_LoadOverlayFromFileRsp::~RspMsg_LoadOverlayFromFileRsp() {
  // @@protoc_insertion_point(destructor:HaWC.RspMsg.LoadOverlayFromFileRsp)
  SharedDtor();
}

void RspMsg_LoadOverlayFromFileRsp::SharedDtor() {
  errstr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RspMsg_LoadOverlayFromFileRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RspMsg_LoadOverlayFromFileRsp::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RspMsg_LoadOverlayFromFileRsp& RspMsg_LoadOverlayFromFileRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_RspMsg_LoadOverlayFromFileRsp.base);
  return *internal_default_instance();
}


void RspMsg_LoadOverlayFromFileRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.RspMsg.LoadOverlayFromFileRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errstr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = false;
  _internal_metadata_.Clear();
}

bool RspMsg_LoadOverlayFromFileRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.RspMsg.LoadOverlayFromFileRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string errStr = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errstr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->errstr().data(), static_cast<int>(this->errstr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HaWC.RspMsg.LoadOverlayFromFileRsp.errStr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.RspMsg.LoadOverlayFromFileRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.RspMsg.LoadOverlayFromFileRsp)
  return false;
#undef DO_
}

void RspMsg_LoadOverlayFromFileRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.RspMsg.LoadOverlayFromFileRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->result(), output);
  }

  // string errStr = 2;
  if (this->errstr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errstr().data(), static_cast<int>(this->errstr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.RspMsg.LoadOverlayFromFileRsp.errStr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->errstr(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.RspMsg.LoadOverlayFromFileRsp)
}

::google::protobuf::uint8* RspMsg_LoadOverlayFromFileRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.RspMsg.LoadOverlayFromFileRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->result(), target);
  }

  // string errStr = 2;
  if (this->errstr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errstr().data(), static_cast<int>(this->errstr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.RspMsg.LoadOverlayFromFileRsp.errStr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->errstr(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.RspMsg.LoadOverlayFromFileRsp)
  return target;
}

size_t RspMsg_LoadOverlayFromFileRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.RspMsg.LoadOverlayFromFileRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string errStr = 2;
  if (this->errstr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errstr());
  }

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RspMsg_LoadOverlayFromFileRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.RspMsg.LoadOverlayFromFileRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RspMsg_LoadOverlayFromFileRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RspMsg_LoadOverlayFromFileRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.RspMsg.LoadOverlayFromFileRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.RspMsg.LoadOverlayFromFileRsp)
    MergeFrom(*source);
  }
}

void RspMsg_LoadOverlayFromFileRsp::MergeFrom(const RspMsg_LoadOverlayFromFileRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.RspMsg.LoadOverlayFromFileRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.errstr().size() > 0) {

    errstr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errstr_);
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void RspMsg_LoadOverlayFromFileRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.RspMsg.LoadOverlayFromFileRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RspMsg_LoadOverlayFromFileRsp::CopyFrom(const RspMsg_LoadOverlayFromFileRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.RspMsg.LoadOverlayFromFileRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RspMsg_LoadOverlayFromFileRsp::IsInitialized() const {
  return true;
}

void RspMsg_LoadOverlayFromFileRsp::Swap(RspMsg_LoadOverlayFromFileRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RspMsg_LoadOverlayFromFileRsp::InternalSwap(RspMsg_LoadOverlayFromFileRsp* other) {
  using std::swap;
  errstr_.Swap(&other->errstr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RspMsg_LoadOverlayFromFileRsp::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RspMsg_QosBcast::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RspMsg_QosBcast::kFeedNameFieldNumber;
const int RspMsg_QosBcast::kFeedTypeFieldNumber;
const int RspMsg_QosBcast::kSourceStrFieldNumber;
const int RspMsg_QosBcast::kQosStateFieldNumber;
const int RspMsg_QosBcast::kRepeatFieldNumber;
const int RspMsg_QosBcast::kTimeSinceFrameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RspMsg_QosBcast::RspMsg_QosBcast()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_RspMsg_QosBcast.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.RspMsg.QosBcast)
}
RspMsg_QosBcast::RspMsg_QosBcast(const RspMsg_QosBcast& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  feedname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.feedname().size() > 0) {
    feedname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.feedname_);
  }
  sourcestr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sourcestr().size() > 0) {
    sourcestr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sourcestr_);
  }
  ::memcpy(&feedtype_, &from.feedtype_,
    static_cast<size_t>(reinterpret_cast<char*>(&timesinceframe_) -
    reinterpret_cast<char*>(&feedtype_)) + sizeof(timesinceframe_));
  // @@protoc_insertion_point(copy_constructor:HaWC.RspMsg.QosBcast)
}

void RspMsg_QosBcast::SharedCtor() {
  feedname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sourcestr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&feedtype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timesinceframe_) -
      reinterpret_cast<char*>(&feedtype_)) + sizeof(timesinceframe_));
}

RspMsg_QosBcast::~RspMsg_QosBcast() {
  // @@protoc_insertion_point(destructor:HaWC.RspMsg.QosBcast)
  SharedDtor();
}

void RspMsg_QosBcast::SharedDtor() {
  feedname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sourcestr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RspMsg_QosBcast::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RspMsg_QosBcast::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RspMsg_QosBcast& RspMsg_QosBcast::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_RspMsg_QosBcast.base);
  return *internal_default_instance();
}


void RspMsg_QosBcast::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.RspMsg.QosBcast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  feedname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sourcestr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&feedtype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timesinceframe_) -
      reinterpret_cast<char*>(&feedtype_)) + sizeof(timesinceframe_));
  _internal_metadata_.Clear();
}

bool RspMsg_QosBcast::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.RspMsg.QosBcast)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string feedName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_feedname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->feedname().data(), static_cast<int>(this->feedname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HaWC.RspMsg.QosBcast.feedName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .HaWC.FeedType feedType = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_feedtype(static_cast< ::HaWC::FeedType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sourceStr = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sourcestr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sourcestr().data(), static_cast<int>(this->sourcestr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HaWC.RspMsg.QosBcast.sourceStr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .HaWC.QosStates qosState = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_qosstate(static_cast< ::HaWC::QosStates >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool repeat = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &repeat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 timeSinceFrame = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &timesinceframe_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.RspMsg.QosBcast)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.RspMsg.QosBcast)
  return false;
#undef DO_
}

void RspMsg_QosBcast::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.RspMsg.QosBcast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string feedName = 1;
  if (this->feedname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->feedname().data(), static_cast<int>(this->feedname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.RspMsg.QosBcast.feedName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->feedname(), output);
  }

  // .HaWC.FeedType feedType = 2;
  if (this->feedtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->feedtype(), output);
  }

  // string sourceStr = 3;
  if (this->sourcestr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sourcestr().data(), static_cast<int>(this->sourcestr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.RspMsg.QosBcast.sourceStr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sourcestr(), output);
  }

  // .HaWC.QosStates qosState = 4;
  if (this->qosstate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->qosstate(), output);
  }

  // bool repeat = 5;
  if (this->repeat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->repeat(), output);
  }

  // int32 timeSinceFrame = 6;
  if (this->timesinceframe() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->timesinceframe(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.RspMsg.QosBcast)
}

::google::protobuf::uint8* RspMsg_QosBcast::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.RspMsg.QosBcast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string feedName = 1;
  if (this->feedname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->feedname().data(), static_cast<int>(this->feedname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.RspMsg.QosBcast.feedName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->feedname(), target);
  }

  // .HaWC.FeedType feedType = 2;
  if (this->feedtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->feedtype(), target);
  }

  // string sourceStr = 3;
  if (this->sourcestr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sourcestr().data(), static_cast<int>(this->sourcestr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HaWC.RspMsg.QosBcast.sourceStr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->sourcestr(), target);
  }

  // .HaWC.QosStates qosState = 4;
  if (this->qosstate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->qosstate(), target);
  }

  // bool repeat = 5;
  if (this->repeat() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->repeat(), target);
  }

  // int32 timeSinceFrame = 6;
  if (this->timesinceframe() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->timesinceframe(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.RspMsg.QosBcast)
  return target;
}

size_t RspMsg_QosBcast::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.RspMsg.QosBcast)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string feedName = 1;
  if (this->feedname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->feedname());
  }

  // string sourceStr = 3;
  if (this->sourcestr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sourcestr());
  }

  // .HaWC.FeedType feedType = 2;
  if (this->feedtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->feedtype());
  }

  // .HaWC.QosStates qosState = 4;
  if (this->qosstate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->qosstate());
  }

  // bool repeat = 5;
  if (this->repeat() != 0) {
    total_size += 1 + 1;
  }

  // int32 timeSinceFrame = 6;
  if (this->timesinceframe() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->timesinceframe());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RspMsg_QosBcast::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.RspMsg.QosBcast)
  GOOGLE_DCHECK_NE(&from, this);
  const RspMsg_QosBcast* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RspMsg_QosBcast>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.RspMsg.QosBcast)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.RspMsg.QosBcast)
    MergeFrom(*source);
  }
}

void RspMsg_QosBcast::MergeFrom(const RspMsg_QosBcast& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.RspMsg.QosBcast)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.feedname().size() > 0) {

    feedname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.feedname_);
  }
  if (from.sourcestr().size() > 0) {

    sourcestr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sourcestr_);
  }
  if (from.feedtype() != 0) {
    set_feedtype(from.feedtype());
  }
  if (from.qosstate() != 0) {
    set_qosstate(from.qosstate());
  }
  if (from.repeat() != 0) {
    set_repeat(from.repeat());
  }
  if (from.timesinceframe() != 0) {
    set_timesinceframe(from.timesinceframe());
  }
}

void RspMsg_QosBcast::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.RspMsg.QosBcast)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RspMsg_QosBcast::CopyFrom(const RspMsg_QosBcast& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.RspMsg.QosBcast)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RspMsg_QosBcast::IsInitialized() const {
  return true;
}

void RspMsg_QosBcast::Swap(RspMsg_QosBcast* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RspMsg_QosBcast::InternalSwap(RspMsg_QosBcast* other) {
  using std::swap;
  feedname_.Swap(&other->feedname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sourcestr_.Swap(&other->sourcestr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(feedtype_, other->feedtype_);
  swap(qosstate_, other->qosstate_);
  swap(repeat_, other->repeat_);
  swap(timesinceframe_, other->timesinceframe_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RspMsg_QosBcast::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RspMsg_DisplayRsp::InitAsDefaultInstance() {
  ::HaWC::_RspMsg_DisplayRsp_default_instance_.displaycfgrsp_ = const_cast< ::HaWC::RspMsg_DisplayCfgRsp*>(
      ::HaWC::RspMsg_DisplayCfgRsp::internal_default_instance());
  ::HaWC::_RspMsg_DisplayRsp_default_instance_.savedisplayrsp_ = const_cast< ::HaWC::RspMsg_SaveDisplayRsp*>(
      ::HaWC::RspMsg_SaveDisplayRsp::internal_default_instance());
  ::HaWC::_RspMsg_DisplayRsp_default_instance_.loaddisplayrsp_ = const_cast< ::HaWC::RspMsg_LoadDisplayRsp*>(
      ::HaWC::RspMsg_LoadDisplayRsp::internal_default_instance());
  ::HaWC::_RspMsg_DisplayRsp_default_instance_.loadfontsrsp_ = const_cast< ::HaWC::RspMsg_LoadFontsRsp*>(
      ::HaWC::RspMsg_LoadFontsRsp::internal_default_instance());
  ::HaWC::_RspMsg_DisplayRsp_default_instance_.saveoverlaytofilersp_ = const_cast< ::HaWC::RspMsg_SaveOverlayToFileRsp*>(
      ::HaWC::RspMsg_SaveOverlayToFileRsp::internal_default_instance());
  ::HaWC::_RspMsg_DisplayRsp_default_instance_.loadoverlayfromfilersp_ = const_cast< ::HaWC::RspMsg_LoadOverlayFromFileRsp*>(
      ::HaWC::RspMsg_LoadOverlayFromFileRsp::internal_default_instance());
  ::HaWC::_RspMsg_DisplayRsp_default_instance_.qosbcast_ = const_cast< ::HaWC::RspMsg_QosBcast*>(
      ::HaWC::RspMsg_QosBcast::internal_default_instance());
}
void RspMsg_DisplayRsp::set_allocated_displaycfgrsp(::HaWC::RspMsg_DisplayCfgRsp* displaycfgrsp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_response();
  if (displaycfgrsp) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      displaycfgrsp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, displaycfgrsp, submessage_arena);
    }
    set_has_displaycfgrsp();
    response_.displaycfgrsp_ = displaycfgrsp;
  }
  // @@protoc_insertion_point(field_set_allocated:HaWC.RspMsg.DisplayRsp.displayCfgRsp)
}
void RspMsg_DisplayRsp::set_allocated_savedisplayrsp(::HaWC::RspMsg_SaveDisplayRsp* savedisplayrsp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_response();
  if (savedisplayrsp) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      savedisplayrsp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, savedisplayrsp, submessage_arena);
    }
    set_has_savedisplayrsp();
    response_.savedisplayrsp_ = savedisplayrsp;
  }
  // @@protoc_insertion_point(field_set_allocated:HaWC.RspMsg.DisplayRsp.saveDisplayRsp)
}
void RspMsg_DisplayRsp::set_allocated_loaddisplayrsp(::HaWC::RspMsg_LoadDisplayRsp* loaddisplayrsp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_response();
  if (loaddisplayrsp) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      loaddisplayrsp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, loaddisplayrsp, submessage_arena);
    }
    set_has_loaddisplayrsp();
    response_.loaddisplayrsp_ = loaddisplayrsp;
  }
  // @@protoc_insertion_point(field_set_allocated:HaWC.RspMsg.DisplayRsp.loadDisplayRsp)
}
void RspMsg_DisplayRsp::set_allocated_loadfontsrsp(::HaWC::RspMsg_LoadFontsRsp* loadfontsrsp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_response();
  if (loadfontsrsp) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      loadfontsrsp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, loadfontsrsp, submessage_arena);
    }
    set_has_loadfontsrsp();
    response_.loadfontsrsp_ = loadfontsrsp;
  }
  // @@protoc_insertion_point(field_set_allocated:HaWC.RspMsg.DisplayRsp.loadFontsRsp)
}
void RspMsg_DisplayRsp::set_allocated_saveoverlaytofilersp(::HaWC::RspMsg_SaveOverlayToFileRsp* saveoverlaytofilersp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_response();
  if (saveoverlaytofilersp) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      saveoverlaytofilersp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, saveoverlaytofilersp, submessage_arena);
    }
    set_has_saveoverlaytofilersp();
    response_.saveoverlaytofilersp_ = saveoverlaytofilersp;
  }
  // @@protoc_insertion_point(field_set_allocated:HaWC.RspMsg.DisplayRsp.saveOverlayToFileRsp)
}
void RspMsg_DisplayRsp::set_allocated_loadoverlayfromfilersp(::HaWC::RspMsg_LoadOverlayFromFileRsp* loadoverlayfromfilersp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_response();
  if (loadoverlayfromfilersp) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      loadoverlayfromfilersp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, loadoverlayfromfilersp, submessage_arena);
    }
    set_has_loadoverlayfromfilersp();
    response_.loadoverlayfromfilersp_ = loadoverlayfromfilersp;
  }
  // @@protoc_insertion_point(field_set_allocated:HaWC.RspMsg.DisplayRsp.loadOverlayFromFileRsp)
}
void RspMsg_DisplayRsp::set_allocated_qosbcast(::HaWC::RspMsg_QosBcast* qosbcast) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_response();
  if (qosbcast) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      qosbcast = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, qosbcast, submessage_arena);
    }
    set_has_qosbcast();
    response_.qosbcast_ = qosbcast;
  }
  // @@protoc_insertion_point(field_set_allocated:HaWC.RspMsg.DisplayRsp.qosBcast)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RspMsg_DisplayRsp::kDisplayCfgRspFieldNumber;
const int RspMsg_DisplayRsp::kSaveDisplayRspFieldNumber;
const int RspMsg_DisplayRsp::kLoadDisplayRspFieldNumber;
const int RspMsg_DisplayRsp::kLoadFontsRspFieldNumber;
const int RspMsg_DisplayRsp::kSaveOverlayToFileRspFieldNumber;
const int RspMsg_DisplayRsp::kLoadOverlayFromFileRspFieldNumber;
const int RspMsg_DisplayRsp::kQosBcastFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RspMsg_DisplayRsp::RspMsg_DisplayRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_RspMsg_DisplayRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.RspMsg.DisplayRsp)
}
RspMsg_DisplayRsp::RspMsg_DisplayRsp(const RspMsg_DisplayRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_response();
  switch (from.response_case()) {
    case kDisplayCfgRsp: {
      mutable_displaycfgrsp()->::HaWC::RspMsg_DisplayCfgRsp::MergeFrom(from.displaycfgrsp());
      break;
    }
    case kSaveDisplayRsp: {
      mutable_savedisplayrsp()->::HaWC::RspMsg_SaveDisplayRsp::MergeFrom(from.savedisplayrsp());
      break;
    }
    case kLoadDisplayRsp: {
      mutable_loaddisplayrsp()->::HaWC::RspMsg_LoadDisplayRsp::MergeFrom(from.loaddisplayrsp());
      break;
    }
    case kLoadFontsRsp: {
      mutable_loadfontsrsp()->::HaWC::RspMsg_LoadFontsRsp::MergeFrom(from.loadfontsrsp());
      break;
    }
    case kSaveOverlayToFileRsp: {
      mutable_saveoverlaytofilersp()->::HaWC::RspMsg_SaveOverlayToFileRsp::MergeFrom(from.saveoverlaytofilersp());
      break;
    }
    case kLoadOverlayFromFileRsp: {
      mutable_loadoverlayfromfilersp()->::HaWC::RspMsg_LoadOverlayFromFileRsp::MergeFrom(from.loadoverlayfromfilersp());
      break;
    }
    case kQosBcast: {
      mutable_qosbcast()->::HaWC::RspMsg_QosBcast::MergeFrom(from.qosbcast());
      break;
    }
    case RESPONSE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:HaWC.RspMsg.DisplayRsp)
}

void RspMsg_DisplayRsp::SharedCtor() {
  clear_has_response();
}

RspMsg_DisplayRsp::~RspMsg_DisplayRsp() {
  // @@protoc_insertion_point(destructor:HaWC.RspMsg.DisplayRsp)
  SharedDtor();
}

void RspMsg_DisplayRsp::SharedDtor() {
  if (has_response()) {
    clear_response();
  }
}

void RspMsg_DisplayRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RspMsg_DisplayRsp::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RspMsg_DisplayRsp& RspMsg_DisplayRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_RspMsg_DisplayRsp.base);
  return *internal_default_instance();
}


void RspMsg_DisplayRsp::clear_response() {
// @@protoc_insertion_point(one_of_clear_start:HaWC.RspMsg.DisplayRsp)
  switch (response_case()) {
    case kDisplayCfgRsp: {
      delete response_.displaycfgrsp_;
      break;
    }
    case kSaveDisplayRsp: {
      delete response_.savedisplayrsp_;
      break;
    }
    case kLoadDisplayRsp: {
      delete response_.loaddisplayrsp_;
      break;
    }
    case kLoadFontsRsp: {
      delete response_.loadfontsrsp_;
      break;
    }
    case kSaveOverlayToFileRsp: {
      delete response_.saveoverlaytofilersp_;
      break;
    }
    case kLoadOverlayFromFileRsp: {
      delete response_.loadoverlayfromfilersp_;
      break;
    }
    case kQosBcast: {
      delete response_.qosbcast_;
      break;
    }
    case RESPONSE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = RESPONSE_NOT_SET;
}


void RspMsg_DisplayRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.RspMsg.DisplayRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_response();
  _internal_metadata_.Clear();
}

bool RspMsg_DisplayRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.RspMsg.DisplayRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .HaWC.RspMsg.DisplayCfgRsp displayCfgRsp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_displaycfgrsp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .HaWC.RspMsg.SaveDisplayRsp saveDisplayRsp = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_savedisplayrsp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .HaWC.RspMsg.LoadDisplayRsp loadDisplayRsp = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_loaddisplayrsp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .HaWC.RspMsg.LoadFontsRsp loadFontsRsp = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_loadfontsrsp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .HaWC.RspMsg.SaveOverlayToFileRsp saveOverlayToFileRsp = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_saveoverlaytofilersp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .HaWC.RspMsg.LoadOverlayFromFileRsp loadOverlayFromFileRsp = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_loadoverlayfromfilersp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .HaWC.RspMsg.QosBcast qosBcast = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_qosbcast()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.RspMsg.DisplayRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.RspMsg.DisplayRsp)
  return false;
#undef DO_
}

void RspMsg_DisplayRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.RspMsg.DisplayRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .HaWC.RspMsg.DisplayCfgRsp displayCfgRsp = 1;
  if (has_displaycfgrsp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_displaycfgrsp(), output);
  }

  // .HaWC.RspMsg.SaveDisplayRsp saveDisplayRsp = 5;
  if (has_savedisplayrsp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_savedisplayrsp(), output);
  }

  // .HaWC.RspMsg.LoadDisplayRsp loadDisplayRsp = 7;
  if (has_loaddisplayrsp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_loaddisplayrsp(), output);
  }

  // .HaWC.RspMsg.LoadFontsRsp loadFontsRsp = 10;
  if (has_loadfontsrsp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_loadfontsrsp(), output);
  }

  // .HaWC.RspMsg.SaveOverlayToFileRsp saveOverlayToFileRsp = 15;
  if (has_saveoverlaytofilersp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->_internal_saveoverlaytofilersp(), output);
  }

  // .HaWC.RspMsg.LoadOverlayFromFileRsp loadOverlayFromFileRsp = 16;
  if (has_loadoverlayfromfilersp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->_internal_loadoverlayfromfilersp(), output);
  }

  // .HaWC.RspMsg.QosBcast qosBcast = 20;
  if (has_qosbcast()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->_internal_qosbcast(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.RspMsg.DisplayRsp)
}

::google::protobuf::uint8* RspMsg_DisplayRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.RspMsg.DisplayRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .HaWC.RspMsg.DisplayCfgRsp displayCfgRsp = 1;
  if (has_displaycfgrsp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_displaycfgrsp(), deterministic, target);
  }

  // .HaWC.RspMsg.SaveDisplayRsp saveDisplayRsp = 5;
  if (has_savedisplayrsp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_savedisplayrsp(), deterministic, target);
  }

  // .HaWC.RspMsg.LoadDisplayRsp loadDisplayRsp = 7;
  if (has_loaddisplayrsp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_loaddisplayrsp(), deterministic, target);
  }

  // .HaWC.RspMsg.LoadFontsRsp loadFontsRsp = 10;
  if (has_loadfontsrsp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_loadfontsrsp(), deterministic, target);
  }

  // .HaWC.RspMsg.SaveOverlayToFileRsp saveOverlayToFileRsp = 15;
  if (has_saveoverlaytofilersp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->_internal_saveoverlaytofilersp(), deterministic, target);
  }

  // .HaWC.RspMsg.LoadOverlayFromFileRsp loadOverlayFromFileRsp = 16;
  if (has_loadoverlayfromfilersp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->_internal_loadoverlayfromfilersp(), deterministic, target);
  }

  // .HaWC.RspMsg.QosBcast qosBcast = 20;
  if (has_qosbcast()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, this->_internal_qosbcast(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.RspMsg.DisplayRsp)
  return target;
}

size_t RspMsg_DisplayRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.RspMsg.DisplayRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (response_case()) {
    // .HaWC.RspMsg.DisplayCfgRsp displayCfgRsp = 1;
    case kDisplayCfgRsp: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *response_.displaycfgrsp_);
      break;
    }
    // .HaWC.RspMsg.SaveDisplayRsp saveDisplayRsp = 5;
    case kSaveDisplayRsp: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *response_.savedisplayrsp_);
      break;
    }
    // .HaWC.RspMsg.LoadDisplayRsp loadDisplayRsp = 7;
    case kLoadDisplayRsp: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *response_.loaddisplayrsp_);
      break;
    }
    // .HaWC.RspMsg.LoadFontsRsp loadFontsRsp = 10;
    case kLoadFontsRsp: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *response_.loadfontsrsp_);
      break;
    }
    // .HaWC.RspMsg.SaveOverlayToFileRsp saveOverlayToFileRsp = 15;
    case kSaveOverlayToFileRsp: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *response_.saveoverlaytofilersp_);
      break;
    }
    // .HaWC.RspMsg.LoadOverlayFromFileRsp loadOverlayFromFileRsp = 16;
    case kLoadOverlayFromFileRsp: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *response_.loadoverlayfromfilersp_);
      break;
    }
    // .HaWC.RspMsg.QosBcast qosBcast = 20;
    case kQosBcast: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *response_.qosbcast_);
      break;
    }
    case RESPONSE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RspMsg_DisplayRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.RspMsg.DisplayRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RspMsg_DisplayRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RspMsg_DisplayRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.RspMsg.DisplayRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.RspMsg.DisplayRsp)
    MergeFrom(*source);
  }
}

void RspMsg_DisplayRsp::MergeFrom(const RspMsg_DisplayRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.RspMsg.DisplayRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.response_case()) {
    case kDisplayCfgRsp: {
      mutable_displaycfgrsp()->::HaWC::RspMsg_DisplayCfgRsp::MergeFrom(from.displaycfgrsp());
      break;
    }
    case kSaveDisplayRsp: {
      mutable_savedisplayrsp()->::HaWC::RspMsg_SaveDisplayRsp::MergeFrom(from.savedisplayrsp());
      break;
    }
    case kLoadDisplayRsp: {
      mutable_loaddisplayrsp()->::HaWC::RspMsg_LoadDisplayRsp::MergeFrom(from.loaddisplayrsp());
      break;
    }
    case kLoadFontsRsp: {
      mutable_loadfontsrsp()->::HaWC::RspMsg_LoadFontsRsp::MergeFrom(from.loadfontsrsp());
      break;
    }
    case kSaveOverlayToFileRsp: {
      mutable_saveoverlaytofilersp()->::HaWC::RspMsg_SaveOverlayToFileRsp::MergeFrom(from.saveoverlaytofilersp());
      break;
    }
    case kLoadOverlayFromFileRsp: {
      mutable_loadoverlayfromfilersp()->::HaWC::RspMsg_LoadOverlayFromFileRsp::MergeFrom(from.loadoverlayfromfilersp());
      break;
    }
    case kQosBcast: {
      mutable_qosbcast()->::HaWC::RspMsg_QosBcast::MergeFrom(from.qosbcast());
      break;
    }
    case RESPONSE_NOT_SET: {
      break;
    }
  }
}

void RspMsg_DisplayRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.RspMsg.DisplayRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RspMsg_DisplayRsp::CopyFrom(const RspMsg_DisplayRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.RspMsg.DisplayRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RspMsg_DisplayRsp::IsInitialized() const {
  return true;
}

void RspMsg_DisplayRsp::Swap(RspMsg_DisplayRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RspMsg_DisplayRsp::InternalSwap(RspMsg_DisplayRsp* other) {
  using std::swap;
  swap(response_, other->response_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RspMsg_DisplayRsp::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RspMsg_IO_Bcast::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RspMsg_IO_Bcast::kNewDataFieldNumber;
const int RspMsg_IO_Bcast::kSessionIDFieldNumber;
const int RspMsg_IO_Bcast::kBtnsFieldNumber;
const int RspMsg_IO_Bcast::kLeftRockerFieldNumber;
const int RspMsg_IO_Bcast::kLeftXFieldNumber;
const int RspMsg_IO_Bcast::kLeftYFieldNumber;
const int RspMsg_IO_Bcast::kRightRockerFieldNumber;
const int RspMsg_IO_Bcast::kRightXFieldNumber;
const int RspMsg_IO_Bcast::kRightYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RspMsg_IO_Bcast::RspMsg_IO_Bcast()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_RspMsg_IO_Bcast.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.RspMsg.IO_Bcast)
}
RspMsg_IO_Bcast::RspMsg_IO_Bcast(const RspMsg_IO_Bcast& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&newdata_, &from.newdata_,
    static_cast<size_t>(reinterpret_cast<char*>(&righty_) -
    reinterpret_cast<char*>(&newdata_)) + sizeof(righty_));
  // @@protoc_insertion_point(copy_constructor:HaWC.RspMsg.IO_Bcast)
}

void RspMsg_IO_Bcast::SharedCtor() {
  ::memset(&newdata_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&righty_) -
      reinterpret_cast<char*>(&newdata_)) + sizeof(righty_));
}

RspMsg_IO_Bcast::~RspMsg_IO_Bcast() {
  // @@protoc_insertion_point(destructor:HaWC.RspMsg.IO_Bcast)
  SharedDtor();
}

void RspMsg_IO_Bcast::SharedDtor() {
}

void RspMsg_IO_Bcast::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RspMsg_IO_Bcast::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RspMsg_IO_Bcast& RspMsg_IO_Bcast::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_RspMsg_IO_Bcast.base);
  return *internal_default_instance();
}


void RspMsg_IO_Bcast::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.RspMsg.IO_Bcast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&newdata_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&righty_) -
      reinterpret_cast<char*>(&newdata_)) + sizeof(righty_));
  _internal_metadata_.Clear();
}

bool RspMsg_IO_Bcast::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.RspMsg.IO_Bcast)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool newData = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &newdata_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 sessionID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sessionid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 btns = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &btns_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 leftRocker = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &leftrocker_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 leftX = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &leftx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 leftY = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &lefty_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 rightRocker = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &rightrocker_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 rightX = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &rightx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 rightY = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &righty_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.RspMsg.IO_Bcast)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.RspMsg.IO_Bcast)
  return false;
#undef DO_
}

void RspMsg_IO_Bcast::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.RspMsg.IO_Bcast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool newData = 1;
  if (this->newdata() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->newdata(), output);
  }

  // uint32 sessionID = 2;
  if (this->sessionid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->sessionid(), output);
  }

  // uint32 btns = 5;
  if (this->btns() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->btns(), output);
  }

  // sint32 leftRocker = 6;
  if (this->leftrocker() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(6, this->leftrocker(), output);
  }

  // sint32 leftX = 7;
  if (this->leftx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(7, this->leftx(), output);
  }

  // sint32 leftY = 8;
  if (this->lefty() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(8, this->lefty(), output);
  }

  // sint32 rightRocker = 9;
  if (this->rightrocker() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(9, this->rightrocker(), output);
  }

  // sint32 rightX = 10;
  if (this->rightx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(10, this->rightx(), output);
  }

  // sint32 rightY = 11;
  if (this->righty() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(11, this->righty(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.RspMsg.IO_Bcast)
}

::google::protobuf::uint8* RspMsg_IO_Bcast::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.RspMsg.IO_Bcast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool newData = 1;
  if (this->newdata() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->newdata(), target);
  }

  // uint32 sessionID = 2;
  if (this->sessionid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->sessionid(), target);
  }

  // uint32 btns = 5;
  if (this->btns() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->btns(), target);
  }

  // sint32 leftRocker = 6;
  if (this->leftrocker() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(6, this->leftrocker(), target);
  }

  // sint32 leftX = 7;
  if (this->leftx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(7, this->leftx(), target);
  }

  // sint32 leftY = 8;
  if (this->lefty() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(8, this->lefty(), target);
  }

  // sint32 rightRocker = 9;
  if (this->rightrocker() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(9, this->rightrocker(), target);
  }

  // sint32 rightX = 10;
  if (this->rightx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(10, this->rightx(), target);
  }

  // sint32 rightY = 11;
  if (this->righty() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(11, this->righty(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.RspMsg.IO_Bcast)
  return target;
}

size_t RspMsg_IO_Bcast::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.RspMsg.IO_Bcast)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool newData = 1;
  if (this->newdata() != 0) {
    total_size += 1 + 1;
  }

  // uint32 sessionID = 2;
  if (this->sessionid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sessionid());
  }

  // uint32 btns = 5;
  if (this->btns() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->btns());
  }

  // sint32 leftRocker = 6;
  if (this->leftrocker() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->leftrocker());
  }

  // sint32 leftX = 7;
  if (this->leftx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->leftx());
  }

  // sint32 leftY = 8;
  if (this->lefty() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->lefty());
  }

  // sint32 rightRocker = 9;
  if (this->rightrocker() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->rightrocker());
  }

  // sint32 rightX = 10;
  if (this->rightx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->rightx());
  }

  // sint32 rightY = 11;
  if (this->righty() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->righty());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RspMsg_IO_Bcast::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.RspMsg.IO_Bcast)
  GOOGLE_DCHECK_NE(&from, this);
  const RspMsg_IO_Bcast* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RspMsg_IO_Bcast>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.RspMsg.IO_Bcast)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.RspMsg.IO_Bcast)
    MergeFrom(*source);
  }
}

void RspMsg_IO_Bcast::MergeFrom(const RspMsg_IO_Bcast& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.RspMsg.IO_Bcast)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.newdata() != 0) {
    set_newdata(from.newdata());
  }
  if (from.sessionid() != 0) {
    set_sessionid(from.sessionid());
  }
  if (from.btns() != 0) {
    set_btns(from.btns());
  }
  if (from.leftrocker() != 0) {
    set_leftrocker(from.leftrocker());
  }
  if (from.leftx() != 0) {
    set_leftx(from.leftx());
  }
  if (from.lefty() != 0) {
    set_lefty(from.lefty());
  }
  if (from.rightrocker() != 0) {
    set_rightrocker(from.rightrocker());
  }
  if (from.rightx() != 0) {
    set_rightx(from.rightx());
  }
  if (from.righty() != 0) {
    set_righty(from.righty());
  }
}

void RspMsg_IO_Bcast::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.RspMsg.IO_Bcast)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RspMsg_IO_Bcast::CopyFrom(const RspMsg_IO_Bcast& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.RspMsg.IO_Bcast)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RspMsg_IO_Bcast::IsInitialized() const {
  return true;
}

void RspMsg_IO_Bcast::Swap(RspMsg_IO_Bcast* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RspMsg_IO_Bcast::InternalSwap(RspMsg_IO_Bcast* other) {
  using std::swap;
  swap(newdata_, other->newdata_);
  swap(sessionid_, other->sessionid_);
  swap(btns_, other->btns_);
  swap(leftrocker_, other->leftrocker_);
  swap(leftx_, other->leftx_);
  swap(lefty_, other->lefty_);
  swap(rightrocker_, other->rightrocker_);
  swap(rightx_, other->rightx_);
  swap(righty_, other->righty_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RspMsg_IO_Bcast::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RspMsg_IO_Rsp::InitAsDefaultInstance() {
  ::HaWC::_RspMsg_IO_Rsp_default_instance_.iobcast_ = const_cast< ::HaWC::RspMsg_IO_Bcast*>(
      ::HaWC::RspMsg_IO_Bcast::internal_default_instance());
}
void RspMsg_IO_Rsp::set_allocated_iobcast(::HaWC::RspMsg_IO_Bcast* iobcast) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_response();
  if (iobcast) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      iobcast = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, iobcast, submessage_arena);
    }
    set_has_iobcast();
    response_.iobcast_ = iobcast;
  }
  // @@protoc_insertion_point(field_set_allocated:HaWC.RspMsg.IO_Rsp.ioBcast)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RspMsg_IO_Rsp::kIoBcastFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RspMsg_IO_Rsp::RspMsg_IO_Rsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_RspMsg_IO_Rsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.RspMsg.IO_Rsp)
}
RspMsg_IO_Rsp::RspMsg_IO_Rsp(const RspMsg_IO_Rsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_response();
  switch (from.response_case()) {
    case kIoBcast: {
      mutable_iobcast()->::HaWC::RspMsg_IO_Bcast::MergeFrom(from.iobcast());
      break;
    }
    case RESPONSE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:HaWC.RspMsg.IO_Rsp)
}

void RspMsg_IO_Rsp::SharedCtor() {
  clear_has_response();
}

RspMsg_IO_Rsp::~RspMsg_IO_Rsp() {
  // @@protoc_insertion_point(destructor:HaWC.RspMsg.IO_Rsp)
  SharedDtor();
}

void RspMsg_IO_Rsp::SharedDtor() {
  if (has_response()) {
    clear_response();
  }
}

void RspMsg_IO_Rsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RspMsg_IO_Rsp::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RspMsg_IO_Rsp& RspMsg_IO_Rsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_RspMsg_IO_Rsp.base);
  return *internal_default_instance();
}


void RspMsg_IO_Rsp::clear_response() {
// @@protoc_insertion_point(one_of_clear_start:HaWC.RspMsg.IO_Rsp)
  switch (response_case()) {
    case kIoBcast: {
      delete response_.iobcast_;
      break;
    }
    case RESPONSE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = RESPONSE_NOT_SET;
}


void RspMsg_IO_Rsp::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.RspMsg.IO_Rsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_response();
  _internal_metadata_.Clear();
}

bool RspMsg_IO_Rsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.RspMsg.IO_Rsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .HaWC.RspMsg.IO_Bcast ioBcast = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 202 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_iobcast()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.RspMsg.IO_Rsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.RspMsg.IO_Rsp)
  return false;
#undef DO_
}

void RspMsg_IO_Rsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.RspMsg.IO_Rsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .HaWC.RspMsg.IO_Bcast ioBcast = 25;
  if (has_iobcast()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      25, this->_internal_iobcast(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.RspMsg.IO_Rsp)
}

::google::protobuf::uint8* RspMsg_IO_Rsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.RspMsg.IO_Rsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .HaWC.RspMsg.IO_Bcast ioBcast = 25;
  if (has_iobcast()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        25, this->_internal_iobcast(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.RspMsg.IO_Rsp)
  return target;
}

size_t RspMsg_IO_Rsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.RspMsg.IO_Rsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (response_case()) {
    // .HaWC.RspMsg.IO_Bcast ioBcast = 25;
    case kIoBcast: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *response_.iobcast_);
      break;
    }
    case RESPONSE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RspMsg_IO_Rsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.RspMsg.IO_Rsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RspMsg_IO_Rsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RspMsg_IO_Rsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.RspMsg.IO_Rsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.RspMsg.IO_Rsp)
    MergeFrom(*source);
  }
}

void RspMsg_IO_Rsp::MergeFrom(const RspMsg_IO_Rsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.RspMsg.IO_Rsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.response_case()) {
    case kIoBcast: {
      mutable_iobcast()->::HaWC::RspMsg_IO_Bcast::MergeFrom(from.iobcast());
      break;
    }
    case RESPONSE_NOT_SET: {
      break;
    }
  }
}

void RspMsg_IO_Rsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.RspMsg.IO_Rsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RspMsg_IO_Rsp::CopyFrom(const RspMsg_IO_Rsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.RspMsg.IO_Rsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RspMsg_IO_Rsp::IsInitialized() const {
  return true;
}

void RspMsg_IO_Rsp::Swap(RspMsg_IO_Rsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RspMsg_IO_Rsp::InternalSwap(RspMsg_IO_Rsp* other) {
  using std::swap;
  swap(response_, other->response_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RspMsg_IO_Rsp::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RspMsg::InitAsDefaultInstance() {
  ::HaWC::_RspMsg_default_instance_.apprsp_ = const_cast< ::HaWC::RspMsg_AppManagerRsp*>(
      ::HaWC::RspMsg_AppManagerRsp::internal_default_instance());
  ::HaWC::_RspMsg_default_instance_.displayrsp_ = const_cast< ::HaWC::RspMsg_DisplayRsp*>(
      ::HaWC::RspMsg_DisplayRsp::internal_default_instance());
  ::HaWC::_RspMsg_default_instance_.iorsp_ = const_cast< ::HaWC::RspMsg_IO_Rsp*>(
      ::HaWC::RspMsg_IO_Rsp::internal_default_instance());
}
void RspMsg::set_allocated_apprsp(::HaWC::RspMsg_AppManagerRsp* apprsp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_response();
  if (apprsp) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      apprsp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, apprsp, submessage_arena);
    }
    set_has_apprsp();
    response_.apprsp_ = apprsp;
  }
  // @@protoc_insertion_point(field_set_allocated:HaWC.RspMsg.appRsp)
}
void RspMsg::set_allocated_displayrsp(::HaWC::RspMsg_DisplayRsp* displayrsp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_response();
  if (displayrsp) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      displayrsp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, displayrsp, submessage_arena);
    }
    set_has_displayrsp();
    response_.displayrsp_ = displayrsp;
  }
  // @@protoc_insertion_point(field_set_allocated:HaWC.RspMsg.displayRsp)
}
void RspMsg::set_allocated_iorsp(::HaWC::RspMsg_IO_Rsp* iorsp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_response();
  if (iorsp) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      iorsp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, iorsp, submessage_arena);
    }
    set_has_iorsp();
    response_.iorsp_ = iorsp;
  }
  // @@protoc_insertion_point(field_set_allocated:HaWC.RspMsg.ioRsp)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RspMsg::kSeqNumFieldNumber;
const int RspMsg::kAppRspFieldNumber;
const int RspMsg::kDisplayRspFieldNumber;
const int RspMsg::kIoRspFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RspMsg::RspMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HaWC_2eproto::scc_info_RspMsg.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HaWC.RspMsg)
}
RspMsg::RspMsg(const RspMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  seqnum_ = from.seqnum_;
  clear_has_response();
  switch (from.response_case()) {
    case kAppRsp: {
      mutable_apprsp()->::HaWC::RspMsg_AppManagerRsp::MergeFrom(from.apprsp());
      break;
    }
    case kDisplayRsp: {
      mutable_displayrsp()->::HaWC::RspMsg_DisplayRsp::MergeFrom(from.displayrsp());
      break;
    }
    case kIoRsp: {
      mutable_iorsp()->::HaWC::RspMsg_IO_Rsp::MergeFrom(from.iorsp());
      break;
    }
    case RESPONSE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:HaWC.RspMsg)
}

void RspMsg::SharedCtor() {
  seqnum_ = 0;
  clear_has_response();
}

RspMsg::~RspMsg() {
  // @@protoc_insertion_point(destructor:HaWC.RspMsg)
  SharedDtor();
}

void RspMsg::SharedDtor() {
  if (has_response()) {
    clear_response();
  }
}

void RspMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RspMsg::descriptor() {
  ::protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RspMsg& RspMsg::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HaWC_2eproto::scc_info_RspMsg.base);
  return *internal_default_instance();
}


void RspMsg::clear_response() {
// @@protoc_insertion_point(one_of_clear_start:HaWC.RspMsg)
  switch (response_case()) {
    case kAppRsp: {
      delete response_.apprsp_;
      break;
    }
    case kDisplayRsp: {
      delete response_.displayrsp_;
      break;
    }
    case kIoRsp: {
      delete response_.iorsp_;
      break;
    }
    case RESPONSE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = RESPONSE_NOT_SET;
}


void RspMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:HaWC.RspMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  seqnum_ = 0;
  clear_response();
  _internal_metadata_.Clear();
}

bool RspMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HaWC.RspMsg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 seqNum = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &seqnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .HaWC.RspMsg.AppManagerRsp appRsp = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_apprsp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .HaWC.RspMsg.DisplayRsp displayRsp = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_displayrsp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .HaWC.RspMsg.IO_Rsp ioRsp = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_iorsp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HaWC.RspMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HaWC.RspMsg)
  return false;
#undef DO_
}

void RspMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HaWC.RspMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 seqNum = 1;
  if (this->seqnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->seqnum(), output);
  }

  // .HaWC.RspMsg.AppManagerRsp appRsp = 4;
  if (has_apprsp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_apprsp(), output);
  }

  // .HaWC.RspMsg.DisplayRsp displayRsp = 5;
  if (has_displayrsp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_displayrsp(), output);
  }

  // .HaWC.RspMsg.IO_Rsp ioRsp = 6;
  if (has_iorsp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_iorsp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HaWC.RspMsg)
}

::google::protobuf::uint8* RspMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HaWC.RspMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 seqNum = 1;
  if (this->seqnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->seqnum(), target);
  }

  // .HaWC.RspMsg.AppManagerRsp appRsp = 4;
  if (has_apprsp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_apprsp(), deterministic, target);
  }

  // .HaWC.RspMsg.DisplayRsp displayRsp = 5;
  if (has_displayrsp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_displayrsp(), deterministic, target);
  }

  // .HaWC.RspMsg.IO_Rsp ioRsp = 6;
  if (has_iorsp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_iorsp(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HaWC.RspMsg)
  return target;
}

size_t RspMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HaWC.RspMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 seqNum = 1;
  if (this->seqnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->seqnum());
  }

  switch (response_case()) {
    // .HaWC.RspMsg.AppManagerRsp appRsp = 4;
    case kAppRsp: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *response_.apprsp_);
      break;
    }
    // .HaWC.RspMsg.DisplayRsp displayRsp = 5;
    case kDisplayRsp: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *response_.displayrsp_);
      break;
    }
    // .HaWC.RspMsg.IO_Rsp ioRsp = 6;
    case kIoRsp: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *response_.iorsp_);
      break;
    }
    case RESPONSE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RspMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HaWC.RspMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const RspMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RspMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HaWC.RspMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HaWC.RspMsg)
    MergeFrom(*source);
  }
}

void RspMsg::MergeFrom(const RspMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HaWC.RspMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.seqnum() != 0) {
    set_seqnum(from.seqnum());
  }
  switch (from.response_case()) {
    case kAppRsp: {
      mutable_apprsp()->::HaWC::RspMsg_AppManagerRsp::MergeFrom(from.apprsp());
      break;
    }
    case kDisplayRsp: {
      mutable_displayrsp()->::HaWC::RspMsg_DisplayRsp::MergeFrom(from.displayrsp());
      break;
    }
    case kIoRsp: {
      mutable_iorsp()->::HaWC::RspMsg_IO_Rsp::MergeFrom(from.iorsp());
      break;
    }
    case RESPONSE_NOT_SET: {
      break;
    }
  }
}

void RspMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HaWC.RspMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RspMsg::CopyFrom(const RspMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HaWC.RspMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RspMsg::IsInitialized() const {
  return true;
}

void RspMsg::Swap(RspMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RspMsg::InternalSwap(RspMsg* other) {
  using std::swap;
  swap(seqnum_, other->seqnum_);
  swap(response_, other->response_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RspMsg::GetMetadata() const {
  protobuf_HaWC_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HaWC_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace HaWC
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::CmdMsg_CloseCmd* Arena::CreateMaybeMessage< ::HaWC::CmdMsg_CloseCmd >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::CmdMsg_CloseCmd >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::CmdMsg_SaveDefaultConfigCmd* Arena::CreateMaybeMessage< ::HaWC::CmdMsg_SaveDefaultConfigCmd >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::CmdMsg_SaveDefaultConfigCmd >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::CmdMsg_SaveConfigToFileCmd* Arena::CreateMaybeMessage< ::HaWC::CmdMsg_SaveConfigToFileCmd >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::CmdMsg_SaveConfigToFileCmd >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::CmdMsg_LoadConfigFromFileCmd* Arena::CreateMaybeMessage< ::HaWC::CmdMsg_LoadConfigFromFileCmd >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::CmdMsg_LoadConfigFromFileCmd >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::CmdMsg_RestoreFactoryConfigCmd* Arena::CreateMaybeMessage< ::HaWC::CmdMsg_RestoreFactoryConfigCmd >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::CmdMsg_RestoreFactoryConfigCmd >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::CmdMsg_ParamSet* Arena::CreateMaybeMessage< ::HaWC::CmdMsg_ParamSet >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::CmdMsg_ParamSet >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::CmdMsg_SetParamsCmd* Arena::CreateMaybeMessage< ::HaWC::CmdMsg_SetParamsCmd >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::CmdMsg_SetParamsCmd >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::CmdMsg_ParamLoc* Arena::CreateMaybeMessage< ::HaWC::CmdMsg_ParamLoc >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::CmdMsg_ParamLoc >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::CmdMsg_GetParamsCmd* Arena::CreateMaybeMessage< ::HaWC::CmdMsg_GetParamsCmd >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::CmdMsg_GetParamsCmd >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::CmdMsg_GetParamsCfgnCmd* Arena::CreateMaybeMessage< ::HaWC::CmdMsg_GetParamsCfgnCmd >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::CmdMsg_GetParamsCfgnCmd >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::CmdMsg_GetFileHashCmd* Arena::CreateMaybeMessage< ::HaWC::CmdMsg_GetFileHashCmd >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::CmdMsg_GetFileHashCmd >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::CmdMsg_AppManagerCmd* Arena::CreateMaybeMessage< ::HaWC::CmdMsg_AppManagerCmd >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::CmdMsg_AppManagerCmd >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::CmdMsg_LineProperty* Arena::CreateMaybeMessage< ::HaWC::CmdMsg_LineProperty >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::CmdMsg_LineProperty >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::CmdMsg_LineProperties* Arena::CreateMaybeMessage< ::HaWC::CmdMsg_LineProperties >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::CmdMsg_LineProperties >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::CmdMsg_CircleProperty* Arena::CreateMaybeMessage< ::HaWC::CmdMsg_CircleProperty >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::CmdMsg_CircleProperty >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::CmdMsg_CircleProperties* Arena::CreateMaybeMessage< ::HaWC::CmdMsg_CircleProperties >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::CmdMsg_CircleProperties >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::CmdMsg_RectangleProperty* Arena::CreateMaybeMessage< ::HaWC::CmdMsg_RectangleProperty >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::CmdMsg_RectangleProperty >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::CmdMsg_RectangleProperties* Arena::CreateMaybeMessage< ::HaWC::CmdMsg_RectangleProperties >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::CmdMsg_RectangleProperties >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::CmdMsg_ImageProperty* Arena::CreateMaybeMessage< ::HaWC::CmdMsg_ImageProperty >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::CmdMsg_ImageProperty >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::CmdMsg_ImageProperties* Arena::CreateMaybeMessage< ::HaWC::CmdMsg_ImageProperties >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::CmdMsg_ImageProperties >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::CmdMsg_FileListProperty* Arena::CreateMaybeMessage< ::HaWC::CmdMsg_FileListProperty >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::CmdMsg_FileListProperty >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::CmdMsg_FileListProperties* Arena::CreateMaybeMessage< ::HaWC::CmdMsg_FileListProperties >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::CmdMsg_FileListProperties >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::CmdMsg_ToolBarProperty* Arena::CreateMaybeMessage< ::HaWC::CmdMsg_ToolBarProperty >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::CmdMsg_ToolBarProperty >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::CmdMsg_ListProperty* Arena::CreateMaybeMessage< ::HaWC::CmdMsg_ListProperty >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::CmdMsg_ListProperty >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::CmdMsg_ListProperties* Arena::CreateMaybeMessage< ::HaWC::CmdMsg_ListProperties >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::CmdMsg_ListProperties >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::CmdMsg_ToolBarProperties* Arena::CreateMaybeMessage< ::HaWC::CmdMsg_ToolBarProperties >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::CmdMsg_ToolBarProperties >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::CmdMsg_MenuProperty* Arena::CreateMaybeMessage< ::HaWC::CmdMsg_MenuProperty >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::CmdMsg_MenuProperty >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::CmdMsg_MenuProperties* Arena::CreateMaybeMessage< ::HaWC::CmdMsg_MenuProperties >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::CmdMsg_MenuProperties >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::CmdMsg_LabelProperty* Arena::CreateMaybeMessage< ::HaWC::CmdMsg_LabelProperty >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::CmdMsg_LabelProperty >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::CmdMsg_LabelProperties* Arena::CreateMaybeMessage< ::HaWC::CmdMsg_LabelProperties >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::CmdMsg_LabelProperties >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::CmdMsg_Component* Arena::CreateMaybeMessage< ::HaWC::CmdMsg_Component >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::CmdMsg_Component >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::CmdMsg_ComponentList* Arena::CreateMaybeMessage< ::HaWC::CmdMsg_ComponentList >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::CmdMsg_ComponentList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::CmdMsg_OverlayCmd* Arena::CreateMaybeMessage< ::HaWC::CmdMsg_OverlayCmd >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::CmdMsg_OverlayCmd >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::CmdMsg_SetFeedSourceCmd* Arena::CreateMaybeMessage< ::HaWC::CmdMsg_SetFeedSourceCmd >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::CmdMsg_SetFeedSourceCmd >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::CmdMsg_SetViewFeedCmd* Arena::CreateMaybeMessage< ::HaWC::CmdMsg_SetViewFeedCmd >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::CmdMsg_SetViewFeedCmd >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::CmdMsg_SetViewWindowCmd* Arena::CreateMaybeMessage< ::HaWC::CmdMsg_SetViewWindowCmd >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::CmdMsg_SetViewWindowCmd >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::CmdMsg_SetDisplayCfgCmd* Arena::CreateMaybeMessage< ::HaWC::CmdMsg_SetDisplayCfgCmd >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::CmdMsg_SetDisplayCfgCmd >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::CmdMsg_GetDisplayCfgCmd* Arena::CreateMaybeMessage< ::HaWC::CmdMsg_GetDisplayCfgCmd >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::CmdMsg_GetDisplayCfgCmd >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::CmdMsg_SaveDefaultDisplayCmd* Arena::CreateMaybeMessage< ::HaWC::CmdMsg_SaveDefaultDisplayCmd >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::CmdMsg_SaveDefaultDisplayCmd >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::CmdMsg_SaveDisplayToFileCmd* Arena::CreateMaybeMessage< ::HaWC::CmdMsg_SaveDisplayToFileCmd >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::CmdMsg_SaveDisplayToFileCmd >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::CmdMsg_LoadDisplayFromFileCmd* Arena::CreateMaybeMessage< ::HaWC::CmdMsg_LoadDisplayFromFileCmd >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::CmdMsg_LoadDisplayFromFileCmd >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::CmdMsg_SaveOverlayToFileCmd* Arena::CreateMaybeMessage< ::HaWC::CmdMsg_SaveOverlayToFileCmd >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::CmdMsg_SaveOverlayToFileCmd >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::CmdMsg_LoadOverlayFromFileCmd* Arena::CreateMaybeMessage< ::HaWC::CmdMsg_LoadOverlayFromFileCmd >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::CmdMsg_LoadOverlayFromFileCmd >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::CmdMsg_LoadFontsCmd* Arena::CreateMaybeMessage< ::HaWC::CmdMsg_LoadFontsCmd >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::CmdMsg_LoadFontsCmd >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::CmdMsg_RestoreFactoryDisplayCmd* Arena::CreateMaybeMessage< ::HaWC::CmdMsg_RestoreFactoryDisplayCmd >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::CmdMsg_RestoreFactoryDisplayCmd >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::CmdMsg_DisplayCmd* Arena::CreateMaybeMessage< ::HaWC::CmdMsg_DisplayCmd >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::CmdMsg_DisplayCmd >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::CmdMsg_IO_Cmd* Arena::CreateMaybeMessage< ::HaWC::CmdMsg_IO_Cmd >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::CmdMsg_IO_Cmd >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::CmdMsg* Arena::CreateMaybeMessage< ::HaWC::CmdMsg >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::CmdMsg >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::RspMsg_ResetEvt* Arena::CreateMaybeMessage< ::HaWC::RspMsg_ResetEvt >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::RspMsg_ResetEvt >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::RspMsg_SaveConfigRsp* Arena::CreateMaybeMessage< ::HaWC::RspMsg_SaveConfigRsp >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::RspMsg_SaveConfigRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::RspMsg_LoadConfigRsp* Arena::CreateMaybeMessage< ::HaWC::RspMsg_LoadConfigRsp >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::RspMsg_LoadConfigRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::RspMsg_ParamDetails* Arena::CreateMaybeMessage< ::HaWC::RspMsg_ParamDetails >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::RspMsg_ParamDetails >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::RspMsg_ParamsRsp* Arena::CreateMaybeMessage< ::HaWC::RspMsg_ParamsRsp >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::RspMsg_ParamsRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::RspMsg_ParamCfgn* Arena::CreateMaybeMessage< ::HaWC::RspMsg_ParamCfgn >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::RspMsg_ParamCfgn >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::RspMsg_ParamsCfgnRsp* Arena::CreateMaybeMessage< ::HaWC::RspMsg_ParamsCfgnRsp >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::RspMsg_ParamsCfgnRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::RspMsg_FileHashRsp* Arena::CreateMaybeMessage< ::HaWC::RspMsg_FileHashRsp >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::RspMsg_FileHashRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::RspMsg_AppManagerRsp* Arena::CreateMaybeMessage< ::HaWC::RspMsg_AppManagerRsp >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::RspMsg_AppManagerRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::RspMsg_FeedSourceRsp* Arena::CreateMaybeMessage< ::HaWC::RspMsg_FeedSourceRsp >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::RspMsg_FeedSourceRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::RspMsg_OverlayCreateRsp* Arena::CreateMaybeMessage< ::HaWC::RspMsg_OverlayCreateRsp >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::RspMsg_OverlayCreateRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::RspMsg_OverlayUpdateRsp* Arena::CreateMaybeMessage< ::HaWC::RspMsg_OverlayUpdateRsp >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::RspMsg_OverlayUpdateRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::RspMsg_OverlayRsp* Arena::CreateMaybeMessage< ::HaWC::RspMsg_OverlayRsp >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::RspMsg_OverlayRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::RspMsg_ViewFeedRsp* Arena::CreateMaybeMessage< ::HaWC::RspMsg_ViewFeedRsp >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::RspMsg_ViewFeedRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::RspMsg_ViewWindowRsp* Arena::CreateMaybeMessage< ::HaWC::RspMsg_ViewWindowRsp >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::RspMsg_ViewWindowRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::RspMsg_DisplayCfgRsp* Arena::CreateMaybeMessage< ::HaWC::RspMsg_DisplayCfgRsp >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::RspMsg_DisplayCfgRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::RspMsg_SaveDisplayRsp* Arena::CreateMaybeMessage< ::HaWC::RspMsg_SaveDisplayRsp >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::RspMsg_SaveDisplayRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::RspMsg_LoadDisplayRsp* Arena::CreateMaybeMessage< ::HaWC::RspMsg_LoadDisplayRsp >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::RspMsg_LoadDisplayRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::RspMsg_LoadFontsRsp* Arena::CreateMaybeMessage< ::HaWC::RspMsg_LoadFontsRsp >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::RspMsg_LoadFontsRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::RspMsg_SaveOverlayToFileRsp* Arena::CreateMaybeMessage< ::HaWC::RspMsg_SaveOverlayToFileRsp >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::RspMsg_SaveOverlayToFileRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::RspMsg_LoadOverlayFromFileRsp* Arena::CreateMaybeMessage< ::HaWC::RspMsg_LoadOverlayFromFileRsp >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::RspMsg_LoadOverlayFromFileRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::RspMsg_QosBcast* Arena::CreateMaybeMessage< ::HaWC::RspMsg_QosBcast >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::RspMsg_QosBcast >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::RspMsg_DisplayRsp* Arena::CreateMaybeMessage< ::HaWC::RspMsg_DisplayRsp >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::RspMsg_DisplayRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::RspMsg_IO_Bcast* Arena::CreateMaybeMessage< ::HaWC::RspMsg_IO_Bcast >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::RspMsg_IO_Bcast >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::RspMsg_IO_Rsp* Arena::CreateMaybeMessage< ::HaWC::RspMsg_IO_Rsp >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::RspMsg_IO_Rsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HaWC::RspMsg* Arena::CreateMaybeMessage< ::HaWC::RspMsg >(Arena* arena) {
  return Arena::CreateInternal< ::HaWC::RspMsg >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
